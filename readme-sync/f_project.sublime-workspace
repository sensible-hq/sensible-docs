{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "<button data-component=\"IconButton\" type=\"button\" aria-label=\"Download raw content\" data-testid=\"download-raw-button\" data-hotkey=\"Control+Shift+s\" data-size=\"small\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 hYQvkP\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-download\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display: inline-block; user-select: none; vertical-align: text-bottom; overflow: visible;\"><path d=\"M2.75 14A1.75 1.75 0 0 1 1 12.25v-2.5a.75.75 0 0 1 1.5 0v2.5c0 .138.112.25.25.25h10.5a.25.25 0 0 0 .25-.25v-2.5a.75.75 0 0 1 1.5 0v2.5A1.75 1.75 0 0 1 13.25 14Z\"></path><path d=\"M7.25 7.689V2a.75.75 0 0 1 1.5 0v5.689l1.97-1.969a.749.749 0 1 1 1.06 1.06l-3.25 3.25a.749.749 0 0 1-1.06 0L4.22 6.78a.749.749 0 1 1 1.06-1.06l1.97 1.969Z\"></path></svg></button>\n\nSearching 144 files for \"download \" (case sensitive)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\2000 - api-tutorial-async-1.md:\n   78     ```\n   79     \n   80:    Copy the document extraction `id` from that response. You'll use it to download the document extraction.\n   81     \n   82  3. Copy the following code sample and replace YOUR_EXTRACTION_ID and YOUR_API_KEY:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\2100 - api-tutorial-async-2.md:\n   83  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_headers_2.png)\n   84  \n   85: 3. If you haven't already, download the following example document, which works with the example `tax_forms` document type you created in the **Prerequisites** section:\n   86  \n   87  | Example document | [Download link](https://github.com/sensible-hq/sensible-configuration-library/raw/main/tax_forms/1040/2021/1040_2021_sample.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\draft-python.md:\n  158  | path              | string                                                     | The path to the document you want to extract from. For more information about supported file size and types, see  [Supported file types](https://docs.sensible.so/docs/file-types). |\n  159  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  160: <skipped 199 characters> ...ument you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  161  | document_type      | string                                                     | Type of document to extract from. Create your custom type in the Sensible app (for example, `rate_confirmation`, `certificate_of_insurance`, or `home_inspection_report`), or use Sensible's library of out-of-the-box supported document types. |\n  162  | document_types     | array                                                      | Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](https://docs.sensible.so/docs/portfolio). |\n  ...\n  202  await asyncio.gather(*[sensible.wait_for(extraction) for extraction in extractions])\n  203  \n  204: excel_download = await sensible.generate_excel(extractions)\n  205  print(excel_download)\n  206  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\draft-sdk-node-ref.md:\n   75  | path              | string                                                     | An option for submitting the document you want to extract data from.<br/> Pass the path to the document. For more information about supported file types, see  [Supported file types](doc:file-types). |\n   76  | file              | string                                                     | An option for submitting the document you want to extract data from.<br/> Pass the non-encoded document bytes. |\n   77: <skipped 220 characters> ...t you want to extract data from. This URL must be either publicly accessible, or presigned with a security token as part of the URL path. To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n   78  | documentType      | string                                                     | An option for specifying the document type or types.<br/>Type of document to extract from. Create your custom type in the Sensible app (for example, `rate_confirmation`, `certificate_of_insurance`, or `home_inspection_report`). |\n   79  | documentTypes     | array                                                      | An option for specifying the document type or types.<br/>Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](doc:portfolio). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\index.md:\n    5  ---\n    6  \n    7: After you've configured extractions for your [custom documents](doc:getting-started-ai) or for out-of-the-box [supported documents](doc:library-quickstart), you can upload documents to the Sensible app and download the extracted data as Excel files.\n    8  \n    9  **Note:** A bulk file upload feature is coming soon.\n   ..\n   13  - upload documents to the Sensible app's **Quick extraction** tab\n   14  - automatically extract from the documents using pre-existing document types and configs\n   15: - download the extracted data as Excel.\n   16  \n   17  Take the following steps:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n  145  | path              | string                                                     | The path to the document you want to extract from. For more information about supported file size and types, see  [Supported file types](https://docs.sensible.so/docs/file-types). |\n  146  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  147: <skipped 199 characters> ...ument you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  148  | documentType      | string                                                     | Type of document to extract from. Create your custom type in the Sensible app (for example, `rate_confirmation`, `certificate_of_insurance`, or `home_inspection_report`), or use Sensible's library of out-of-the-box supported document types. |\n  149  | documentTypes     | array                                                      | Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](https://docs.sensible.so/docs/portfolio). |\n  ...\n  189    extractions.map((extraction) => sensible.waitFor(extraction))\n  190  );\n  191: const excel_download = await sensible.generateExcel(extractions);\n  192  console.log(excel_download);\n  193  const excelFile = await got(excel_download.url);\n\n9 matches across 6 files\n\n\nSearching 144 files for \"large\" (case sensitive)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\1000 - api-tutorial-sync.md:\n   42  2. In your Postman workspace, click **Import**, select **Raw text**, paste the code sample, and follow the prompts to import to code sample.\n   43  \n   44:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_import.png)\n   45  \n   46  3. Download the following example document, which works with the prerequisite  **tax_forms**  document type:\n   ..\n   51  4.  Correct the path to the downloaded document: In the request, click the **Body** tab, select **binary**, then click **Select file** and select the document you downloaded:\n   52  \n   53:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_file.png)\n   54  \n   55  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\2000 - api-tutorial-async-1.md:\n   43  3. In your Postman workspace, click **Import**, select **Raw text**, paste the code sample, and follow the prompts to import to code sample.\n   44  \n   45:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_1.png)\n   46  \n   47  3. Click **Send**, and you should see a response like:\n   ..\n   89  3. In your Postman workspace, click **Import**, select **Raw text**, paste the code sample, and follow the prompts to import to code sample.\n   90  \n   91:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_2.png)\n   92  \n   93  4. Click **Send**. The response includes a `parsed_document` object that looks something like the following:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\2100 - api-tutorial-async-2.md:\n   41  2. In your Postman workspace, click **Import**, select **Raw text**, paste the code sample, and follow the prompts to import the code sample.\n   42  \n   43:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_3.png)\n   44  \n   45  3. Click **Send**. The response looks something like the following:\n   ..\n   71  2. In your Postman workspace, click **Import**, select **Raw text**, paste the code sample, and follow the prompts to import to code sample.\n   72  \n   73:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_4.png)\n   74  \n   75  **Troubleshoot**: Postman can automatically add authorization and content-type headers that cause errors:\n   ..\n   77  - If Postman automatically specifies authorization for the request, then specify **No Auth** in the request's **Auth** tab :\n   78  \n   79: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_no_auth.png)\n   80  \n   81  - If Postman automatically specifies a content type header, then ensure that the value of the Content-Type header matches that of the `content_type` body parameter in the request in step 1. In this case, it must be `application/pdf`.\n   82  \n   83: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_headers_2.png)\n   84  \n   85  3. If you haven't already, download the following example document, which works with the example `tax_forms` document type you created in the **Prerequisites** section:\n   ..\n   90  4. Correct the path to the downloaded document in your request: click the **Body** tab, select **binary**, then click **Select file** and select the document:\n   91  \n   92:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_file.png)\n   93  \n   94    \n   ..\n   96  5. Click **Send** to send the request. The response is  `200`:\n   97  \n   98: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_200.png) \n   99  \n  100  \n  ...\n  130  3. In your Postman workspace, click **Import**, select **Raw text**, paste the code sample, and follow the prompts to import to code sample.\n  131  \n  132: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_postman_2.png)\n  133  \n  134  4. Click **Send**. The response includes a `parsed_document` object that looks something like the following:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\3000 - api-tutorial-webhook.md:\n   19  1. Generate a destination for the webhook: navigate to [https://webhook.site/](https://webhook.site/) to automatically create a unique test page:\n   20  \n   21:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_webhook_1.png)\n   22  **Note:** Use this website [solely for testing](https://webhook.site/terms). In production, make your own destination for the webhook payload.\n   23  \n   ..\n   36     \n   37  \n   38:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/api_quickstart_webhook_2.png)\n   39  \n   40  4. Click **Send** in Postman.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\0300 - metrics.md:\n   17  Since coverage success criteria can vary by document type, you can set your own ranges for each document type in the Sensible app. To set ranges for coverage for past extractions, click **Dashboard** and scroll to the **Extraction coverage** section. In the section, configure date range, document type, and extraction coverage range filters:\n   18  \n   19: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_coverage.png)\n   20  \n   21  In the preceding screenshot, 0 out of 16 extractions that used the `wells_fargo_savings` configuration in the `bank_statements` document type in the past 7 days scored in the coverage range of 60% -100%.\n   ..\n   25  To view an individual extraction's coverage score, click **Dashboard** and scroll to the **Recent** section:\n   26  \n   27: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_coverage_1.png)\n   28  \n   29  In the preceding screenshot, the `Sept 25, 2023 7:30 PM` extraction has a coverage score of `61.1%`.\n   ..\n   35  To view which configurations were used for past extractions, click **Dashboard** and scroll to the **Most used** section:\n   36  \n   37: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_used_1.png)\n   38  \n   39  In the preceding screenshot, the `1040_2018`  configuration was used for 54.7% of extractions in the last 30 days in the `tax_form` document type. If you adjust the filter to include both bank statements and tax forms, you see that it was used for 33% of all extractions across the selected document types:\n   40  \n   41: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_used_2.png)\n   42  \n   43  \n   ..\n   45  To view the number of past extractions you've run by document type, click **Dashboard** and scroll to the **Document extracted** section. You can filter by date range, document types, and extraction coverage:\n   46  \n   47: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_count.png)\n   48  \n   49  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\3000 - confidence.md:\n    4  ---\n    5  \n    6: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report \"multiple possible answers\" or \"ambiguous query\".  These confidence *signals* offer more nuanced troubleshooting than confidence *scores*.\n    7  \n    8  Note that LLMs can inaccurately report confidence signals.  For more information about confidence signals, see the research paper [Teaching models to express their uncertainties in words](https://arxiv.org/pdf/2205.14334.pdf). \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - performance.md:\n   18  In an ideal performance scenario, you extract data from digitally generated PDFs using text-based or coordinate-based Sensible methods, such as Label, Row, Region, Text Table, and Document Range.\n   19  \n   20: In order of largest to smallest impact, these factors add seconds to the ideal document processing time:\n   21  \n   22  **Over 10 seconds per document**\n   ..\n   33  | OCR preprocessor                               | Some documents mix digital text with text images, for example by embedding scanned pages in a digital PDF. Speed this up by OCRing select pages, not the whole document. For more information, see the [OCR preprocessor](doc:ocr). |\n   34  | Tables with stops,<br/>Nearest Checkbox method | Sensible process tables that include a Stop parameter in less than 5 seconds. Or, convert to the faster [Fixed table](doc:fixed-table) method, which skips table recognition. |\n   35: | NLP methods                                    | NLP methods are large-language model (LLM)-powered and include [Sensible Instruct](doc:instruct) methods |\n   36  \n   37   **Under 1 second per document**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\2000 - troubleshoot.md:\n   45  - which fields interact with that line:\n   46  \n   47: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_details.png)\n   48  \n   49  Inspect SenseML\n   ..\n   57  The SenseML pane has a built-in linter for both JSON and the SenseML model. If you see a warning about  invalid JSON, then hover over the red-underlined JSON to see an error message:\n   58  \n   59: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/linter_SenseML.png)\n   60  \n   61  You can also use the linter to autocomplete parameters.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\2500 - handwriting.md:\n   21  - **Choosing an OCR engine:** Choose Google OCR. To configure OCR, click the gear icon for the Document Type and select **Google**: \n   22  \n   23:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_ocr_1.png)\n   24  \n   25    \n   ..\n   27  - **Defining regions:** Handwriting can occupy an unpredictable region or even overlap other lines. To capture handwriting, Sensible recommends defining a [region](doc:region) with a small height and long width that runs through the middle of the area that can contain the handwriting. The green boxes in the following image show this approach: \n   28  \n   29:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/handwriting_1.png) \n   30  \n   31    For more information about how Sensible determines whether to extract a line that partially overlaps a region, see [Region](doc:region).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\draft-python.md:\n    8  # Sensible Python SDK\n    9  \n   10: <skipped 64 characters> ...tructured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n   11  \n   12: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n   13  \n   14  This open-source Sensible SDK offers convenient access to the [Sensible API](https://docs.sensible.so/reference/choosing-an-endpoint). Use this SDK to:\n   ..\n  113  Navigate to the example in the [SenseML editor](https://app.sensible.so/editor/?d=sensible_instruct_basics&c=contract&g=contract) to see how the extraction you just ran works in the Sensible app. You can add more fields to the left pane to extract more data:\n  114  \n  115: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sdk_node_1.png)\n  116  \n  117  ## Usage: Extract document data\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\1000 - zapier-getting-started.md:\n   22  2. Navigate to the example [Sensible test base](https://airtable.com/shrJOFW1mdUdaSMiV/tblpjJbsekvE6wEwr/viw4FaqsAD3uXBAmh?blocks=hide ), and click **Copy base**.  Or, create your own Airtable destination using the following image as a guide:\n   23  \n   24: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_7.png)\n   25  \n   26  The example base contains a field, or column, for each piece of document data to extract.  Zapier adds a record, or row, for each new document you extract from.\n   ..\n   40  4. In the **Set up trigger** section, select the **tax_forms** document type you created in the previous steps, select the **Production** environment, and select the **Complete** status. \n   41  \n   42: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_1.png)\n   43  \n   44  5. Continue to the **Test trigger** section and follow the prompts to test. Verify that the recent document extraction you created in previous steps is selected:\n   45  \n   46:  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_2.png)\n   47  \n   48  6. Continue to the **Action** section and follow the prompts to connect your Airtable account to Zapier.\n   49  7. In the **Set up action** section, map Sensible extracted field ids to the corresponding Airtable field names. Zapier displays the data from the recent document extraction as examples. Use the following screenshot to complete the configuration:\n   50  \n   51:  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_3.png)\n   52  \n   53  8. (Optional) If you created extra fields in the database, map each one.\n   ..\n   55  9. Follow the prompts to test the action. You should see the extracted data from the [1040 example document](https://github.com/sensible-hq/sensible-configuration-library/raw/main/tax_forms/1040/2021/1040_2021_sample.pdf) as a row in Airtable:\n   56  \n   57: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_4.png)\n   58  \n   59  9. Follow the prompts to publish your Zap. \n   ..\n   74  4. Verify the extractions show up in Airtable: \n   75  \n   76: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_5.png)\n   77  \n   78  \n   ..\n   82  \n   83  You can extract from more documents automatically by building a more complex Zap so that you can trigger Sensible extractions with file actions in Google drive, email, or other supported Zapier apps.\n   84: Then send the extraction to the destination of your choice with a Sensible action.  For more information, see [Advanced Zapier tutorial](doc:zapier-tutorial-2).![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_action.png)\n   85  \n   86  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\2000 - zapier-tutorial-2.md:\n   12  ---\n   13  \n   14: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_action_1.png)\n   15  \n   16  Every time you receive an email in Gmail with a 1040 document attached, Zapier triggers Sensible to extract data from it.\n   ..\n   19  ---\n   20  \n   21: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_action_2.png)\n   22  \n   23  Every time Sensible extracts a document, Zapier checks that it's a 1040 document. If so, Zapier triggers Sensible to create a spreadsheet of the extracted data, and uploads the spreadsheet to a folder in Google drive.\n   ..\n   89  3. Wait a few minutes, then verify the extractions show up in your Google Drive folder as spreadsheets:\n   90  \n   91:    ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_action_3.png)\n   92  \n   93  4. Verify the extractions show up in your optionally configured logs:\n   94  \n   95:    ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_action_4.png)\n   96  \n   97  Notes\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\index.md:\n    9  For example, you can extract data in 1040 tax forms: \n   10  \n   11: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_6.png)\n   12  \n   13  And send the data to a database. The following image shows how Zapier can send extracted data from each document to a record, or row, in an Airtable database: \n   14  \n   15: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_5.png)\n   16  \n   17  When creating a Zapier integration, you can either:\n   ..\n   26  Every time you run an extraction using the Sensible [app](https://app.sensible.so/quick-extraction) or [API](ref:choosing-an-endpoint), you can automatically send the data to a destination, for example an email or database, using a **Sensible trigger**: \n   27  \n   28: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_trigger.png)\n   29  \n   30  For more information, see the [Zapier getting started guide](doc:zapier-getting-started) or [example Zap](https://zapier.com/shared/cb6b2637ef466ddf140ed14c3be66a5969acef29).\n   ..\n   35  You can bypass the Sensible app or API and instead trigger Sensible extractions with file actions in Google drive, email, or other supported Zapier apps. Then send the extraction to the destination of your choice with a **Sensible action**.\n   36  \n   37: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_action.png)\n   38  \n   39  For more information, see [Advanced Zapier tutorial](zapier-tutorial-2). \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\index.md:\n   23     If you haven't created your own document type, select `sensible_instruct_basics / Auto select` . The `sensible_instruct_basics` document type contains interactive examples for bank statements, resumes, and contracts.  If you specify `Auto select`,  Sensible automatically detects the best-fitting extraction configuration, or \"config\", for the document you upload.\n   24  \n   25: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_11.png)\n   26  \n   27  3. Click **Upload document** and select your example document. For a list of supported file types, see [Supported file types](doc:file-types). Note that Sensible automatically OCRs documents as needed, except in [advanced cases](doc:ocr).\n   ..\n   36  4. Sensible displays the extracted data as JSON in the right pane. Click the **Download excel** to convert the extracted document data to Excel:\n   37  \n   38: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_12.png)\n   39  \n   40   The following spreadsheet shows output for the example bank statement. The first tab contains fields with single values, for example the start date field. Succeeding tabs contain fields with table output, for example, the accounts list table. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n   44  1. In the [**Document Types**](https://app.sensible.so/document-types/) tab, Click **New document type**  to create a new document type and name  it \"auto_insurance_quote.\" Leave the defaults and click **Create**.\n   45  \n   46: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_doc_type.png)\n   47  \n   48  2. To upload an example document for your document type, take the following steps:\n   ..\n   53     | --------------------------- | ------------------------------------------------------------ |\n   54     2. As the following screenshot shows, click the **auto_insurance_quote** document type you created,  click the **Reference documents** tab, and click **Upload document**:\n   55:       ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_upload_doc.png) \n   56  \n   57     3. In the file upload dialog, choose the generic car insurance quote you downloaded in a previous step.\n   ..\n   65  3. To edit your  **anyco** configuration, click it. When the configuration opens, you see an empty config pane on the left, the document in the middle, and an empty output pane on the right:\n   66  \n   67: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_blank_config.png)\n   68  \n   69  Extract data\n   ..\n  148  \n  149  \n  150: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_after_paste.png)\n  151  \n  152  \n  ...\n  218  For example, to extract the bodily injury liability:\n  219  \n  220: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_question.png)\n  221  \n  222  \n  ...\n  252  Try it out: change the question to `\"what's the street address for the Anyco insurance company?\"` and see what you get.\n  253  \n  254: You can write natural-language methods powered by large-language models (LLMs), such as the Query method, in SenseML, or in Sensible Instruct, Sensible's visual authoring tool. For more information about Sensible Instruct, see [Getting started](doc:getting-started-ai).\n  255  \n  256  Natural-language methods can run up against limitations with complex document formatting. In such cases, combine natural-language methods with layout-based methods in the same document extraction configuration. \n  ...\n  262  \n  263  To extract the policy period from the document:\n  264: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_label_right.png)\n  265  \n  266  The config uses the [Label method](doc:label):\n  ...\n  298  See those gray boxes around the text in the following image?\n  299  \n  300: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_concept_1.png)\n  301  \n  302  Each gray box shows the boundaries for a \"line.\" Sensible recognizes lines using whitespaces and other factors, so \"lines\" can occupy the same height on the page.\n  ...\n  315  This returns null, because the Label method works for text in the same line or in proximate lines. In this case, the problem is that the gap between the two lines of text is more than 0.2 inches:\n  316  \n  317: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_concept_2.png)\n  318  \n  319   Take a look instead at a purpose-built Row method instead to extract text in a table. \n  ...\n  324  To extract the comprehensive premium of $150:\n  325  \n  326: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_row.png)\n  327  \n  328  The config uses the [Row method](doc:row):\n  ...\n  373  To continue the Row method example from the previous section, in the following image the orange box shows that \"Comprehensive\" is the anchor line:\n  374  \n  375: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_concept_3.png)\n  376  \n  377  The dotted blue boxes show you that the Row method matches *all* the lines  in the row after the anchor, but then narrows down the actual output to $150 using `\"tiebreaker\": \"second\"`. \n  ...\n  382  To extract the policy number from this document:\n  383  \n  384: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_box.png)\n  385  \n  386  The config uses the [Box method](doc:box):\n  ...\n  452     ```\n  453  \n  454: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_error_1.png)\n  455  \n  456  That seems like sloppy document formatting, but let's work with it. There are several options for capturing the policy period reliably, including:  \n  ...\n  519  This field defines a region in inches relative to the anchor. Since the region overlaps the anchor, specify a Word Filters parameter to remove the anchor text in the output. See the green box representing the region in the editor? This box dynamically resizes as you adjust the region parameters (such as the Height and Start parameters), so you can visually tweak the region till you're satisfied. \n  520  \n  521: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_error_3.png)\n  522  \n  523  Let's double check that this region also works with the first document:\n  524  \n  525: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_error_4.png)\n  526  \n  527  Yes, it works too.\n  ...\n  536  When you're ready to integrate with your application, enable using the config with the Sensible SDKs or API by taking the following steps:\n  537  \n  538: 1. Click **Publish**.  The config is still a work in progress, so click **Development**.  Now you can use the query parameter `env=development`  to test the integration before you go to production:![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_publish_config.png).\n  539  2. Use the Sensible SDKs or API to integrate with your application.\n  540  \n  ...\n  567  ```\n  568  \n  569: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_validation.png)\n  570  \n  571  3. Click **Create**.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\2000 - library-quickstart.md:\n   23  \n   24  1. Click the **Configuration library** tab, and search for your document type:\n   25: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/library_1.png)\n   26  2. Click your document type. Sensible displays the specific forms it supports in the document type.\n   27  3. Click **Clone to account**. Sensible displays the cloned document type and its form-specific configs in the **Document types** tab.\n   28: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/library_2.png)\n   29  4. Test the document type, for example, using the [Quick extraction](doc:quick-extraction) tab.\n   30  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4000 - repeat-layouts.md:\n    9  \n   10  \n   11: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_highlight_1.png)\n   12  \n   13: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_highlight_2.png)\n   14  \n   15  ## Next\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\1000 - color.md:\n   28  - a line output by the Label method outlined in blue (\"And here's the text below\")\n   29  \n   30: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_label_and_method_1.png)\n   31  \n   32  The query used for the preceding image is:\n   ..\n   57  - a line output by the Label method outlined in blue (\"And here's the text below\")\n   58  \n   59: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_label_and_method_1.png)\n   60  \n   61  The query used for the preceding image is:\n   ..\n   92  Green points can be useful for troubleshooting. For example, in the following image, Sensible can't recognize the box. The green dot provides a visual clue about the problem: the green dot is *on* the box border itself, as specified by (`\"position\": \"left\"`).\n   93  \n   94:  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_position_left.png)\n   95  \n   96  If you specify to find the box borders by starting from the right edge of the anchor line's boundaries (`\"position\": \"right\"`), the green dot is far enough inside the borders for Sensible to recognize the box:\n   97  \n   98: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_position_right.png)\n   99  \n  100  \n  ...\n  105  **Green brackets** represent the start and end of each section in a section group:\n  106  \n  107: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_sections.png)\n  108  \n  109  \n  ...\n  118  For example, in the following image, a Row method captures everything to the right of the text \"Python\", but a tiebreaker selects \"0\" (dark blue box) and discards \"first\" (dotted blue box).\n  119  \n  120: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_method.png)\n  121  \n  122  The query used for the preceding image is:\n  ...\n  171  Sensible filters out \"python\" strings that don't meet the Label method's proximity requirements. For example, in the following image, Sensible represents the \"python\" string with a dotted yellow box to show that it doesn't work with the Label method (it would, however, work with the Row method):\n  172  \n  173: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_anchor.png)\n  174  \n  175  \n  ...\n  190  \n  191  \n  192: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_fingerprint.png)\n  193  \n  194  The query used for the preceding image is:\n  ...\n  223  You can select multiple lines to see their combined details.\n  224  \n  225: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/changelog_July2021_x-ray_mode.png)\n  226  \n  227  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\0300 - accuracy-measures.md:\n    9  - **Logical validations**:  Write validations in [JsonLogic](https://jsonlogic.com/) to check that fields extracted from documents meet your conditions. For example, configure Sensible to return errors if a quoted rate is null, a broker's email isn't in string@string format, or if a zip code has more than 5 digits.  For more information, see [Validate extractions](doc:validate-extractions).  \n   10  - **OCR confidence scores**: Get a score for the quality of text images. For example, check that text in a scanned or photographed document isn't blurry or illegible.  For more information, see [Validate extractions](doc:validate-extractions).  \n   11: - **Confidence signals**: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report that it found multiple answer candidates. For more information, see [Qualifying LLM accuracy](doc:confidence).\n   12  \n   13  - **Extraction coverage:**  A score that measures how fully an extraction captured all the data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For more information, see [Monitoring extractions](doc:metrics).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\0400 - anchor-nuances.md:\n   90  For **Anchor 1**, Sensible anchors on the last Match array element if it's preceded by the other array elements in order.  `\"match\":all\"` finds two anchors. See the following image for an illustration: \n   91  \n   92: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/anchor_2.png)\n   93  \n   94  - For **Anchor 2**, Sensible searches after the first instance of `here is an A line`, and discards anything earlier in the document. `\"match\":all\"` finds four anchors. Notice it doesn't anchor on the first line B (`Here is a B line sneakily inserted before the intro line`) because that instance precedes the start match. See the following image for an illustration:\n   95  \n   96:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/anchor_3.png)\n   97  \n   98  Try out this example in the Sensible app using the following document and config:\n   ..\n  214  The following image shows the example document used with this example config:\n  215  \n  216: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_anchor.png)\n  217  \n  218  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\1500 - coverage.md:\n   25  To view an individual extraction's coverage, click **Dashboard** and scroll to the **Recent** section:\n   26  \n   27: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_coverage_1.png)\n   28  \n   29  In the preceding screenshot, get a coverage breakdown by viewing the extraction. You can view the extraction by clicking the extraction date in the **Recent extractions** column or downloading the Excel file.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\3000 - lines.md:\n    8  A *line* is a rectangular region containing text. Sensible represents lines as gray boxes. Lines can occupy the same height on the page:\n    9  \n   10: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_concept.png)\n   11  \n   12   In other words, Sensible separates lines using any whitespace, not just newlines.\n   ..\n   20  For example, this image shows which lines precede and succeed a target line:\n   21  \n   22: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_sort_1.png)\n   23  \n   24  When text such as handwriting is slightly misaligned vertically, line sorting is less intuitive. In the following image, a human reader may interpret the red line as succeeding the target line, but for Sensible it *precedes* the target line because it's higher on the page:\n   25  \n   26: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_sort_2.png)\n   27  \n   28  To configure this default sorting behavior, see [the Sort Lines parameter](doc:method).\n   ..\n   35  For the Label method, Sensible groups lines together using whitespace and x- and y-axis positions. Sometimes, Sensible's line groups are more restrictive than a human reader might expect. In particular, Sensible groups lines separated by vertical space solely if they align at the *left* edge of each line boundary by default:\n   36  \n   37: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_grouping.png)\n   38  \n   39  To capture unaligned lines, use the [Document Range](doc:document-range) method.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\3500 - match-arrays.md:\n   94  The following image shows the example document used with this example config:\n   95  \n   96: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/reverse_1.png)\n   97  \n   98  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/reverse.pdf) |\n   ..\n  114  In a reverse match array, Sensible searches for anchor candidates in sequence, and rules out overlapping match arrays. The following image illustrates this behavior for the example config:\n  115  \n  116: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/reverse_2.png)\n  117  \n  118  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\3600 - section-nuances.md:\n   11  -----\n   12  \n   13: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_concept_horizontal.png)\n   14  \n   15  Sensible finds the sections as follows:\n   ..\n   32  \n   33  \n   34: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_concept_vertical.png)\n   35  \n   36  Sensible:\n   ..\n   81  3. The Banana section contains the Banana, Nutrition, and Notes columns. For example, you can find the cell containing `105` in the Bananas column using the same `fruit_calories` field as in the preceding step. In other words, you *don't* have to configure `\"tiebreaker\": \"second\"`.  \n   82  \n   83: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_section_column_selection.png)\n   84  \n   85  As steps 2 and 3 in the previous image illustrate, the varying gap sizes between columns in each section mean that you can't use coordinate-based methods such as the Region method for fields in these sections.\n   ..\n  107  \n  108  \n  109: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_match_all_anchors.png)\n  110  \n  111  For vertical sections, specifying the regular expression `\".+\"`   for the Match parameter can be useful for repeating vertical sections that lack good anchor match candidates. In these situations, you must also nest the section group in a parent section group. For more information, see [Table grid example](doc:sections-example-table-grid).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\4000 - senseml.md:\n   28  The following image shows this example in the Sensible app:\n   29  \n   30: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/basic_field.png)\n   31  \n   32  As the preceding image shows, here's the output of the example field: \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n   29  For an overview, see the following example of a short config:\n   30  \n   31: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/senseml_intro.png)\n   32  \n   33  Try out this example in the Sensible app using the following document and config:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n   47  | text  (**required**) | string                                                  | The string to match                                          |\n   48  | type (**required**)  | `equals`, `startsWith`, `endsWith`, `includes`          | `equals`: The matching line must equal the string<br/>`startsWith`: Match at beginning of line<br/>`endsWIth`: Match at end of line<br/>`includes`: Match anywhere in line |\n   49: <skipped 328 characters> ... Text parameter.  Sensible implements fuzzy matching using [Levenshtien distance](https://en.wikipedia.org/wiki/Levenshtein_distance). <br/>Sensible recommends avoiding setting this parameter on short matches, like \"A:\" or \"Sub\", because an edit distance as low as 2 on a short match can result in a large number of line matches and impact performance. Generally, you increase edit distances values as you increase the length of the text match. See the Examples section for an example. |\n   50  | isCaseSensitive      | boolean. Default: false.                                | If true, match the string taking into account upper- and lower-case characters. |\n   51  \n   ..\n  111  The following image shows the example document used with this example config:\n  112  \n  113: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/edit_distance.png)\n  114  \n  115  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/edit_distance.pdf) |\n  ...\n  263  The following image shows the example document used with this example config:\n  264  \n  265: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/boolean_match.png)\n  266  \n  267  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/boolean_match.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   38  In the following example, the handwritten text \"Nash\" is slightly taller than the text \"Steve\", so Sensible interprets \"Nash\" as *preceding* \"Steve\" (reversing the order interpreted by a human reader) and outputs `\"Nash Steve\"` as the name:\n   39  \n   40: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/xmajor_sort_1.png)\n   41  \n   42  **SOLUTION**\n   ..\n   77  The following image shows the example document used with this example config:\n   78  \n   79: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sort_lines_2.png)\n   80  \n   81  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/xmajor_sort.pdf) |\n   ..\n   84  To run this example, verify the document type uses Google OCR (click the gear icon for the Document Type and select **Google**): \n   85  \n   86: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_ocr_1.png)\n   87  \n   88  *Output*\n   ..\n  130  The following image shows the example document used with this example config:\n  131  \n  132: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/types_filter.png)\n  133  \n  134  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/types_filter.pdf) |\n  ...\n  155  The following image shows using this parameter to extract a \"cell\" of text that doesn't fit other methods:\n  156  \n  157: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/xrange_filter.png)\n  158  \n  159  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n   47  Returns USA-based addresses.  By default, Sensible recognizes  single- or multi-line addresses isolated from other lines in \"block\" format. For example, `\"type\":\"address\"` recognizes address such as:\n   48  \n   49: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/type_address_block.png)\n   50  \n   51  Use the Block Format parameter to recognize addresses embedded in non-address lines, for example, use:\n   ..\n   58  to find addresses in paragraphs:\n   59  \n   60: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/type_address_paragraph.png)\n   61  \n   62  \n   ..\n  223  The following image shows the example document used with this example config:\n  224  \n  225: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/compose_type.png)\n  226  \n  227  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/compose_type.pdf) |\n  ...\n  724  For the following document:\n  725  \n  726: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/annotate_superscript_and_subscript.png) \n  727  \n  728  When you set`\"annotateSuperscriptAndSubscript\": true` , Sensible formats the footnote symbols to indicate they're superscripted, for example,  `[^1]`:\n  ...\n  744  | annotateSuperscriptAndSubscript | Boolean. default: false | When true:<br/>-  Sensible annotates subscript and superscript text with `[^...]` and `[_...]`, respectively.<br/>- Sensible annotates end-of-page breaks with `[EOP]`. |\n  745  | allNewlines                     | Boolean. default: false | When true, Sensible inserts a newline (`\\n`) in the output for every line break in the document text, and two newlines (`\\n\\n`), for every paragraph break.<br/>When false, Sensible inserts a newline for every paragraph break.<br/> |\n  746: | paragraphBreakThreshold         | default: 0.4            | By default, Sensible detects paragraph breaks when the vertical gap between two lines is larger than 40% of the font height of the output line. Use this parameter to change the percentage. |\n  747  \n  748  Percentage\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   30  The following image shows this example in the Sensible app:\n   31  \n   32: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/basic_field.png)\n   33  \n   34  As the preceding image shows, this is the output of the example field: \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   53  The following image shows the example document used with this example config:\n   54  \n   55: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_1099.png)\n   56  \n   57  \n   ..\n  102  The following image shows the example document used with this example config:\n  103  \n  104: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_dark.png)\n  105  \n  106  \n  ...\n  175  The following image shows the example document used with this example config:\n  176  \n  177: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_offset.png)\n  178  \n  179  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/box_offset.pdf) |\n  ...\n  203  The following image illustrates how Sensible recognizes offset boxes after the first box:\n  204  \n  205: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_offset_2.png)\n  206  \n  207  1. Recognize the starting box by searching for the dark borders of the box. The search starts at the green dot defined by the Position parameter. The search expansion is in all directions, not just the cardinal directions shown by the red arrows in the image.\n  ...\n  266  The following image shows the example document used with this example config:\n  267  \n  268: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_offset_3.png)\n  269  \n  270  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/box_offset.pdf) |\n  ...\n  325  The following image shows the example document used with this example config:\n  326  \n  327: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_position_left.png)\n  328  \n  329  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/box_recognition.pdf) |\n  ...\n  356  Example document\n  357  \n  358: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_position_right.png)\n  359  \n  360  Output\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1100 - checkbox.md:\n   23  | id (**required**) | `checkbox`                      |                                                              |\n   24  | position          | `left`, `right`                 | Searches horizontally for a checkbox starting at the left or right anchor line boundaries and ending at the page margin. <br/> |\n   25: | offsetX           | number in inches. default: 0    | Indicates a point inside the checkbox. Instead of searching horizontally, Sensible  expands the search out in all directions from the point specified to find the checkbox bounding box.<br/><br/> For difficult pixel recognition, for example for large checkboxes or selection marks with no borders,  use the offset parameters in combination with Width and Height parameters to define the selection mark region.<br/> |\n   26: | offsetY           | number in inches. default: 0    | Indicates a point inside the checkbox. Instead of searching horizontally, Sensible  expands the search out in all directions from the point specified to find the checkbox bounding box.<br/><br/>For difficult pixel recognition, for example for large checkboxes or selection marks with no borders,  use the offset parameters in combination with Width and Height parameters to define the selection mark region.<br/> |\n   27: | width             | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   28: | height            | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   29  | darknessThreshold | number between 1 and 0.         | **For pixel recognition:**  The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document.<br/> |\n   30  \n   ..\n   76  \n   77  \n   78: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main//readme-sync/assets/v0/images/final/checkbox.png)\n   79  \n   80  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/checkbox.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1200 - column.md:\n   61  The following image shows the example document used with this example config:\n   62  \n   63: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/column.png)\n   64  \n   65  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/row_column.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1300 - document-range.md:\n   58  The following image shows the example document used with this example config:\n   59  \n   60: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/documentrange_sworn.png)\n   61  \n   62  | Example document | [Download link](https://www.irs.gov/pub/irs-pdf/fw9.pdf) |\n   ..\n  105  The following image shows the example document used with this example config:\n  106  \n  107: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/documentrange_icons.png)\n  108  \n  109  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/image_coordinates.pdf) |\n  ...\n  219  The following image shows the example document used with this example config:\n  220  \n  221: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_range_yoffset.png)\n  222  \n  223  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/document_range_yoffset.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1400 - fixed-table.md:\n   76  \n   77  \n   78: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/fixed_table.png)\n   79  \n   80  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/fixed_table.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1450 - intersection.md:\n    5  Extracts a target line at the intersection of a horizontal line defined by an anchor, and a vertical line defined by a second anchor:\n    6  \n    7: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intersection_1.png)\n    8  \n    9  For example, the Intersection method is an alternative to the Row method when a table contains optionally empty cells.  A row's tiebreaker can return lines from unintended columns if cells are unpredictably populated.\n   ..\n   56  The following image shows the example document used with this example config:\n   57  \n   58: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intersection_2.png)\n   59  \n   60  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/intersection.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1500 - invoice.md:\n   28  - It extracts the invoice table from a document that contains multiple tables.\n   29  - It extracts other invoice metadata from header and footer information in the invoice.\n   30: - This example uses a large number of synonymous terms for each invoice column, so it can parse invoices from a variety of vendors. \n   31  \n   32  **Config**\n   ..\n  129  The following image shows the example document used with this example config:\n  130  \n  131: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main//readme-sync/assets/v0/images/final/invoice.png)\n  132  \n  133  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/invoice.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1600 - label.md:\n   91  The following image shows the example document used with this example config:\n   92  \n   93: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/labels.png)\n   94  \n   95  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/label.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1650 - nearest-checkbox.md:\n   80  \n   81  \n   82: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main//readme-sync/assets/v0/images/final/nearest_checkbox.png)\n   83  \n   84  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/nearest_checkbox.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1700 - passthrough.md:\n   54  **Example document**\n   55  \n   56: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/passthrough.png)\n   57  \n   58  | Example document | [Download link](https://www.irs.gov/pub/irs-pdf/fw9.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1800 - regex.md:\n   59  The following image shows the example document used with this example config:\n   60  \n   61: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/regex.png)\n   62  \n   63  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/regex.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1900 - region.md:\n   68  The following image shows the example document used with this example config:\n   69  \n   70: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/region_ssn.png)\n   71  \n   72  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/region_w9.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2000 - row.md:\n    7   A \"row\" is lines of text distributed along a horizontal line. Each matching line in the \"row\" must have a top boundary that's within 0.08 inches below or above the anchor's top boundary (total range is 0.16\" inches). For example, the following image shows a red line that defines the alignment for a row of text:\n    8  \n    9: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/row_align.png)\n   10  \n   11  [**Parameters**](doc:row#parameters)\n   ..\n   86  The following image shows the data extracted by this config for the following example document:\n   87  \n   88: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/row.png)\n   89  \n   90  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/row_column.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2100 - draft-table.md:\n   17  \n   18  \n   19: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/table_merged_cells.png)\n   20  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2100 - table.md:\n   71  **Example document**\n   72  \n   73: The following image shows the example document used with this example config: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/table_dynamic.png)\n   74  \n   75  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/table_dynamic.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - text-table.md:\n   82  The following image shows the example document used with this example config:\n   83  \n   84: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table.png)\n   85  \n   86  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/text_table_2.pdf) |\n   ..\n  192  The following image shows the example document used with this example config:\n  193  \n  194: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table_overlap.png)\n  195  \n  196  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/text_table_overlap.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\index.md:\n    7  | Method                                       | Image                                                        | Notes                                                        |\n    8  | -------------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n    9: | **[Box](doc:box)**                           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_1099.png) | Extracts contents from boxes with continuous borders.        |\n   10: | **[Checkbox](doc:checkbox)**                 | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main//readme-sync/assets/v0/images/final/checkbox.png) | Extracts true/false for the selection status of  checkboxes. |\n   11: | **[Column](doc:column)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/column.png) | Extracts text aligned in a column, from an anchor down to the bottom of the page. |\n   12: | **[Document Range](doc:document-range)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/documentrange_sworn.png) | Extracts text in a range, or extract image metadata (coordinates).  Simpler alternative to the advanced [Paragraph](doc:paragraph) method. |\n   13: | **[Fixed Table](doc:fixed-table)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/fixed_table.png) | Extracts tables where column headings never vary.            |\n   14: | **[Intersection](doc:intersection)**         | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intersection_1.png) | Extracts a target line at the intersection of a horizontal line defined by an anchor, and a vertical line defined by a second anchor. |\n   15: | **[Invoice](doc:invoice)**                   | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main//readme-sync/assets/v0/images/final/invoice.png) | Extracts an invoice and metadata from a variety of invoice formats. |\n   16: | **[Label](doc:label)**                       | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/labels.png) | Extracts a line of text that's proximate to another line.    |\n   17: | [**Nearest Checkbox**](doc:nearest-checkbox) | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/nearest_checkbox.png) | Extracts true/false for the selection status of the checkbox nearest to the anchor. |\n   18: | **[Passthrough](doc:passthrough)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/passthrough.png) | Extracts anchor text, optionally using RegEx.                |\n   19  | **[Regex](doc:regex)**                       |                                                              | Extracts text matching RegEx. Use RegEx capturing groups in this method to clean up extracted data in combination with the Passthrough method. |\n   20: | **[Region](doc:region)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/region_ssn.png) | Extracts data from a rectangular region defined by coordinates. Faster alternative to Box method. |\n   21: | **[Row](doc:row)**                           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/row.png) | Extracts text aligned in a row.                              |\n   22: | **[Table](doc:table)**                       | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/table_dynamic.png) | Extracts a table where column headings vary.                 |\n   23: | **[Text Table](doc:text-table)**             | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table.png) | Extracts tables using solely text-positioning data (fast but limited). |\n   24  \n   25  Notes\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n  191  The following image shows the example document used with this example config:\n  192  \n  193: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/list.png)\n  194  \n  195  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/list.pdf) |\n  ...\n  447    - Sensible scores your concatenated list descriptions against each chunk.\n  448  2. Sensible selects a number of the top-scoring chunks, where the number is determined by the Chunk Count parameter. Sensible re-scores the top-scoring chunks to select a smaller list of page numbers containing the most relevant chunks, where the list size is determined by the re-scoring process. The  maximum list size is 20 page numbers.\n  449: 3. To avoid large-language model (LLM)'s token limits, Sensible batches the page numbers into groups. The chunks in each page group can be non-consecutive in the document.\n  450  4. For each page group, Sensible submits a full prompt for the LLM (GPT-3) that includes the pages' chunks as context, page-hinting data, and your prompts. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n  451  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n  154  The following image shows the example document used with this example config:\n  155  \n  156: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/nlp_table.png)\n  157  \n  158  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/nlp_table.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query.md:\n    5  ---\n    6  \n    7: Extracts individual facts in a document, such as the date of an invoice, the liability limit of an insurance policy, or the destination address of a shipping container delivery. Sensible uses a large-language model (LLM)  to find these facts in paragraphs of free text, or in more structured layouts, for example key/value pairs or tables.\n    8  \n    9  Sensible recommends framing each query, or prompt, so that it has a single, short answer.  For complex prompts with multi-part answers, use the [List method](doc:list) or the  [Summarizer](doc:summarizer) method. \n   ..\n   91  The following image shows the example document used with this example config:\n   92  \n   93: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/question_1.png)\n   94  \n   95  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/summarizer_crop.pdf) |\n   ..\n  175  The following image shows the example document used with this example config:\n  176  \n  177: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/question_2.png)\n  178  \n  179  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/summarizer.pdf) |\n  ...\n  236  The following image shows the example document used with this example config:\n  237  \n  238: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/question_chunk.png)\n  239  \n  240  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/question_chunk.pdf) |\n  ...\n  270  In the Sensible Instruct editor, you can click the output of a query field to view its source text in the document. \n  271  \n  272: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/changelog_August2023_location.png)\n  273  \n  274  For an overview of how Sensible finds the source text in the document for the LLM's response, see the following steps:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1600 - summarizer.md:\n  113  The following image shows the example document used with this example config:\n  114  \n  115: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/summarizer_crop.png)\n  116  \n  117  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/summarizer_crop.pdf) |\n  ...\n  124    \"_source_ending_stock\": {\n  125      \"type\": \"string\",\n  126:     \"value\": \"Slight Relief for 2022/23 Global Ending Stocks 2022/23 global ending stocks are projected up 0.3 MMT to 267.8 MMT but remain the tightest since 2016/17 (figure 10). China accounts for more than 50 percent of 2022/23 global ending stocks but its stocks are largely not available to the public. When China is removed from the global picture, stocks are even tighter at 123.5 MMT, the lowest since 2007/08. Major exporters' stocks are forecasted down 0.1 MMT to 55.6 MMT. Stocks in Australia are raised 0.5 MMT to 3.7 MMT with higher domestic production. Despite a... <skipped 630 characters> ...\n  127    },\n  128    \"ending_stocks_summarized\": [\n  ...\n  255  The following image shows the example document used with this example config:\n  256  \n  257: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/summarizer.png)\n  258  \n  259  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/summarizer.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\2000 - topic.md:\n   57  The following image shows the example document used with this example config:\n   58  \n   59: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/topic.png)\n   60  \n   61  | Example document | [Download link](https://creativecommons.org/licenses/by-nc-sa/2.5/legalcode) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\draft-llm-engine.md:\n   43     1. If you select `llm_engine: thorough`, the Chunk Count parameter determines the number of  top-scoring chunks Sensible selects.\n   44     2. If you select `llm_engine: fast`,   1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. Sensible selects a smaller number of chunks, by removing chunks that are significantly less relevant from the list of top-scoring chunks.\n   45: 3. To avoid large-language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers, **up to a maximum of 20 page numbers TODO right place for it?** The chunks in each page group can be non-consecutive in the document.\n   46  4. For each page group, Sensible submits a full prompt to the LLM that includes the pages' chunks as context, page-hinting data, and your prompts. For information about the LLM model, see the LLM Engine parameter. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n   47  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\index.md:\n    6  Use natural-language SenseML methods to extract free text from unstructured documents, or as low-code alternatives to [layout based methods](doc:methods). For example, extract information from legal paragraphs in contracts and leases, or results from research papers. \n    7  \n    8: SenseML natural-language methods are powered by machine learning and natural-language processing models, for example by the large-language model (LLM) GPT-4.\n    9  \n   10  The following topics describe how to author natural-language methods using SenseML. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n   18  | ------------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)     | `deskew` |                                                    |\n   20: | fixedPoints (**required**) | object | Deskews the text in a skewed document by mapping the positions of three skewed points to their ideal positions in an unskewed document. Define the ideal Fixed Points using text anchors in an unskewed example of the document. Choose text anchors that form as large a triangle as possible, ideally at three corners of the document. Choosing the best points can take some trial and error. <br/>Parameters:<br/>`match` - the text to match for the Fixed Point. Choose `\"type\": \"startsWith\"`  or `\"type\": \"endsWith\"` to avoid problems with lines oversplit by skew. See ... <skipped 294 characters> ...\n   21  | start | `left` , `right`. default: `left` | Specifies whether the Fixed Point is at the upper-*left* corner of the anchor line's boundaries, or the upper-*right* corner. <br/>With a Match parameter of `\"type\": \"startsWith\"`, use `left`.<br/>With a Match parameter of `\"type\": \"endsWith\"`, use `right`. |\n   22  \n   ..\n   26  The following image shows that without the Deskew preprocessor, extraction from a skewed document fails. The Region method returns null, because the targeted date range is in an unexpected position (to the left of the anchor, `tenure`) rather than in the expected position (`below`):\n   27  \n   28: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_1.png)\n   29  \n   30  To solve this problem:\n   ..\n   32  1. Define three widely spaced points in a well-aligned example of this document type: The following image shows using the displayed coordinates of a line to define the X and Y parameters for one of three Fixed Point parameters:\n   33  \n   34: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_2.png)\n   35  \n   36  For more information about choosing points, see [Best Practices](doc:deskew#best-practices).\n   ..\n   39  2. Check the Deskew preprocessor against the skewed example to reveal a remaining problem:\n   40  \n   41: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_3.png)\n   42  \n   43  The remaining problem is that the Deskew Preprocessor  doesn't merge lines that were split by the skew. As a result, the region starts at the middle of the word \"tenure\" instead of the middle of the complete line \"White house tenure\". Since the new start shifts the region to the right, the region misses the first year of the date range and returns `-1963`.\n   ..\n   47  3. To fix this problem, apply a Merge Lines preprocessor after the Deskew preprocessor: \n   48  \n   49: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_4.png)\n   50  \n   51  Now Sensible captures the full date range, because the region starts at the middle of the complete line \"White house tenure\".\n   ..\n  149  To view the deskewed document in the Sensible app, click the document, then click the eye (👁) icon:\n  150  \n  151: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_5.png)\n  152  \n  153  This visual representation of how the Sensible app deskews documents can be useful for authoring or troubleshooting deskew preprocessors and configs.\n  ...\n  156  \n  157  - Click on a line in the document pane in the Sensible app to view line coordinates for defining the Fixed Points.\n  158: - Choose text anchors for Fixed Points that form as large a triangle as possible, ideally at three corners of the document. Choosing the best points can take trial and error. \n  159  - For the Match parameter, choose `\"type\": \"startsWith\"` or `\"type\": \"endsWith\"` to avoid problems with lines split by skew. If you choose `\"endsWith\"`, then also define `\"start:right\"`. You can also define a Merge Lines preprocessor to clean up oversplit lines.\n  160  \n  161: - For the aligned reference document, choose a slightly enlarged version of the document so that the Fixed Points triangle is large. The Deskew preprocessor corrects scaling for smaller skewed images.\n  162  \n  163    \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1050 - merge-lines.md:\n   22  | ---------------------------------------- | -------------------------------------- | ------------------------------------------------------------ |\n   23  | type (**required**)                      | `mergeLines`                           | merges lines distributed along a horizontal axis.            |\n   24: <skipped 265 characters> ...OCR into lines.<br/>This parameter specifies the fraction of line height under which to merge two adjacent lines distributed along an x-axis without a space. For example, at 0.16, this preprocessor merges two lines separated by a small gap whose width is less than 16% of the line height. Choosing a larger number merges more aggressively. <br/> |\n   25: | adjacentThreshold (**required**)         | number >= 0.6                          | Corrects oversplit lines. <br/>Specifies the fraction of line height under which to merge two adjacent lines distributed along an x-axis *with* a space. The built-in merger uses 0.6, so choosing a larger number merges more aggressively.<br> For an example, see the Examples section. |\n   26  | yOverlapThreshold                        | number between 0 and 1.0. default: 1.0 | Merges lines that aren't perfectly aligned at the same height on the page. <br/> Specifies the y overlap above which the Merge Lines preprocessor merges two adjacent lines. Y overlap is the section of the joint y-axis range of two lines that's occupied by both lines. For example, if two lines share the same minimum and maximum y-axis values, their overlap is 1. If one line's extent is from 0 to 10 and the other line’s extent is from 2 to 12 on the y-axis, their overlap is .667 (8 / 12). <br/>For an example, see the Examples section. |\n   27  | minXGapThreshold                         | number in inches                       | Configure this parameter if two lines overlap on an x-axis. The default behavior is to merge these overlapping lines into one line. To split them instead, set a cap on the amount of allowable overlap. For example:<br/>0 - splits lines if their line boundaries are touching but not overlapping.<br/>0.1 - splits lines if their boundaries overlap a little, up to 0.1 inches.<br/>2.0 - splits lines even when they overlap a lot, up to 2.0 inches.<br/>For an example, see the Examples section. |\n   ..\n   39  Without a Merge Line preprocessor, the placeholder handwritten data in an example document is oversplit by Google OCR:\n   40  \n   41: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_ocr_2.png)\n   42  \n   43  For example, the phrase `Name (First, Middle, Last, Suffix, Trust or Custodian)` isn't one line, but is instead split on words.\n   ..\n   76  The following image shows the example document used with this example config:\n   77  \n   78: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_ocr.png)\n   79  \n   80  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/merge_lines_ocr.pdf) |\n   ..\n   83  To run this example, verify that the document type uses Google OCR (click the gear icon for the Document Type and select **Google**): \n   84  \n   85: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_ocr_1.png)\n   86  \n   87  OUTPUT\n   ..\n  114  The following image shows oversplit lines. For example, Sensible splits the phrase \"premium driver discount\" into three lines even though the human eye perceives it as one phrase:\n  115  \n  116: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_1.png)\n  117  \n  118  **SOLUTION**\n  ...\n  157  The following image shows the example document used with this example config:\n  158  \n  159: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_2.png)\n  160  \n  161  OUTPUT\n  ...\n  208  The following image shows the example document used with this example config:\n  209  \n  210: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_yoverlap.png)\n  211  \n  212  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/merge_lines_yoverlap.pdf) |\n  ...\n  259  The following image shows the example document used with this example config:\n  260  \n  261: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_minxgap.png)\n  262  \n  263  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/merge_lines_minxgap.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1060 - nlp.md:\n  112  The following image shows the example document used with this example config:\n  113  \n  114: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/nlp.png)\n  115  \n  116  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/nlp.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   65  The following images show the example document used with this example config:\n   66  \n   67: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/remove_footer_1.png)\n   68  \n   69: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/remove_footer_2.png)\n   70  \n   71  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   69  The following images show the example document used with this example config:\n   70  \n   71: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/remove_header_1.png)\n   72  \n   73: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/remove_header_2.png)\n   74  \n   75  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/remove_header.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1420 - rotate-page.md:\n   22  The following image shows that without the Rotate page preprocessor, extraction from a rotated document fails. The Region method returns null, because the targeted text isn't in the expected region:\n   23  \n   24: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/rotate_page_1.png)\n   25  \n   26  To solve this problem, configure a match for text that you want to be horizontal, and Sensible rotates the page:\n   ..\n   62  The following images show the example document used with this example config:\n   63  \n   64: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/rotate_page_2.png)\n   65  \n   66  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/rotate_page.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n   71  The following image shows the example document used with this example config:\n   72  \n   73: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/scale.png)\n   74  \n   75  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/scale.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1500 - split-lines.md:\n   26  Without the Split Lines preprocessor, Sensible merges the lines too aggressively:\n   27  \n   28: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/split_lines_2.png)\n   29  \n   30  **SOLUTION**\n   ..\n   56  The following image shows the example document used with this example config:\n   57  \n   58: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/split_lines.png)\n   59  \n   60  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/split_lines.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\index.md:\n    9  | Preprocessor                           | Image                                                        | Notes                                                        |\n   10  | -------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   11: | **[Deskew](doc:deskew)**               | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_deskew.png) | Corrects the alignment of documents that are skewed, for example as a result of being photographed at an angle instead of straight on. |\n   12: | **[Ligature](doc:ligature)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ligature.png) | Intelligently replaces Unicode ligatures in a text extraction. |\n   13: | **[Merge Lines](doc:merge-lines)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_1.png) | Corrects oversplit lines.                                    |\n   14: | **[OCR](doc:ocr)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ocr.png) | Selectively OCRs pages in documents containing a mix of digitally generated text and text images (such as scanned text). If the whole PDF is a scan, you don't need to configure this preprocessor. |\n   15  | **[Page Filter](doc:page-filter)**     |                                                              | Filters out low-scoring pages given a bag of target terms and stop terms. |\n   16  | **[Page Range](doc:page-range)**       |                                                              | Ignores pages outside the start page and end page.           |\n   17: | **[Remove Header](doc:remove-header)** | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/remove_header_1.png) | Removes repeating elements at the top of the page. Ignores header elements that overlap with the page's main body. |\n   18: | **[Remove Footer](doc:remove-footer)** | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/remove_footer_1.png) | Removes repeating elements at the bottom of the page. Ignores footer elements that overlap with the page's main body. |\n   19: | [Scale](doc:scale)                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_scale.png) | Corrects the size of text in documents whose size varies, for example as a result of being scanned or photographed at different scales. |\n   20: | **[Split Lines](doc:split-lines)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_split_lines.png) | Corrects undersplit lines.                                   |\n   21  \n   22  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1000 - concatenate.md:\n   84  The following image shows the example document used with this example config:\n   85  \n   86: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/concat.png)\n   87  \n   88  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/concat.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1200 - constant.md:\n   65  **Example document**\n   66  \n   67: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/constant.png)\n   68  \n   69  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/auto_insurance_anyco.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1300 - mapper.md:\n   64  The following image shows the example document used with this example config:\n   65  \n   66: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/mapper.png)\n   67  \n   68  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/mapper.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1350 - pick-values.md:\n  122  The following image shows the example document used with this example config:\n  123  \n  124: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/pick_values.png)\n  125  \n  126  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/pick_values.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1400 - split.md:\n   65  The following image shows the example document used with this example config:\n   66  \n   67: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/split.png)\n   68  \n   69  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/split.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1450 - suppress-output.md:\n   62  The following image shows the example document used with this example config:\n   63  \n   64: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/suppress_output.png)\n   65  \n   66  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/suppress_output.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1500 - zip.md:\n   90  The following image shows the example document used with this example config:\n   91  \n   92: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zip.png)\n   93  \n   94  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/zip.pdf) |\n   ..\n  262  The following image shows the example document used with this example config:\n  263  \n  264: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/all_with_null.png)\n  265  \n  266  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/all_with_null.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\1000 - sections-example-loss-run.md:\n  135  The following image shows the data extracted by this config for the following example document:\n  136  \n  137: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_2.png)\n  138  \n  139  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/sections.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\3000 - sections-example-labeled-rows.md:\n   95  The following image shows the data extracted by this config for the following example document:\n   96  \n   97: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_sections_labeled_rows.png)\n   98  \n   99  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/vertical_sections_labeled_rows.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\4000 - sections-example-nested-columns.md:\n   15  2. define a nested vertical section  group\n   16  \n   17: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_sections_col_sect.png)\n   18  \n   19  The following config uses abbreviated YML notation to give an overview of the more complex SenseML JSON: \n   ..\n  159  The following image shows the example document used with this example config:\n  160  \n  161: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_sections_col_sect_1.png)\n  162  \n  163  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/vertical_sections_col_section.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\5000 - sections-example-nested-table.md:\n  114  The following image shows the example document used with this example config:\n  115  \n  116: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_sections_table_in_table.png)\n  117  \n  118  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/vertical_section_table_in_table.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\6000 - sections-example-table-grid.md:\n   15  To give a broad overview of using vertical sections for a table grid, see the following image:\n   16  \n   17: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_sections_table_grid.png)\n   18  \n   19  In the preceding image, the config uses sections as follows:\n   ..\n  143                 Sensible recognizes each trim table as one column */\n  144              \"offsetY\": 0.5,\n  145:             /* use a large minColumnGap so column recognition doesn't break on the whitespace gaps in each trim specs column */\n  146              \"minColumnGap\": 0.5,\n  147              \"anchor\": {\n  ...\n  205  The following image shows the example document used with this example config:\n  206  \n  207: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_section_table_grid_1.png)\n  208  \n  209  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/vertical_sections_table_grid.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\7000 - sections-example-zip.md:\n   16  As an overview, this example shows creating a  `zipped_vehicle_description_and_coverages` array, where each  object in the array contains information from the vehicles table and from the limitations table in the following image:\n   17  \n   18: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_sections_zip.png)\n   19  \n   20  \n   ..\n  198  The following image shows the example document used with this example config:\n  199  \n  200: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_sections_zip.png)\n  201  \n  202  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/vertical_sections_zip.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\8000 - sections-example-copy-from-sections.md:\n   17  3. A child section group captures data such as the coverages and premiums:\n   18  \n   19: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/copy_from_sections_2.png)\n   20  \n   21  If you [zip the child sections together](doc:sections-example-zip), you can output something like the following example output, and then clean it up with the Copy From Sections method. \n   ..\n  242  The following image shows the example document used with this example config:\n  243  \n  244: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/copy_from_sections.png)\n  245  \n  246  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/copy_from_sections.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\9000 - sections-example-copy-to-section.md:\n  129  The following image shows the example document used with this example config:\n  130  \n  131: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/copy_to_section.png)\n  132  \n  133  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/sections.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n    8  The following image shows an example of a document containing a group of \"claims\" sections:\n    9  \n   10: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_1.png)\n   11  \n   12  For the preceding example, you can configure Sensible to return an `unprocessed_claims` array, where each object in the array contains a `claim_number`, `claim_date`, `claimant_last_name`, and other fields.  For more information, see [Claims loss run example](doc:sections-example-loss-run).\n   ..\n   20  The following image shows horizontal sections. For more information, see the following Parameters section, and see [Section nuances](doc:section-nuances).\n   21  \n   22: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_concept_horizontal.png)\n   23  \n   24  **Vertical sections:**\n   ..\n   26  The following image shows vertical sections.  For more information, see the following Parameters section, and see [Section nuances](doc:section-nuances).\n   27  \n   28: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_concept_vertical.png)\n   29  \n   30  **Tip:** To extract repeated vertical section groups, nest them in a parent section group.  For an example, see [Advanced: nested columns example](doc:sections-example-nested-columns).\n   ..\n   64  | columnSelection | array of index selections where each \"index selection\" can be:<br/>- a column index or comma-delimited indices<br><br>- an array with two comma-delimited indices, meaning all the columns in the indices range<br/><br/> default: capture all columns (`[]`) | Use to configure which c... <skipped 295 characters> ...lines from any other columns to each section. <br/>`[1,3,-1]`  selects 2nd, 4th, and the last columns. Use negative indices to offset from the last column. <br/> `[1,[3,7]]` selects the 2nd column and the 4th through 8th columns.<br/>  `[[0, -2]]` selects 1st through 2nd-to-last columns.<br/><br/> |\n   65  | ignoredColumns  | integer array.                                               | Removes unwanted columns from both the output *and* from the SenseML search scope. For example, this is useful if the columns contain text that interferes with anchoring on other columns. |\n   66: <skipped 115 characters> ... specifying the smallest allowed width of the gutters separating the columns. For an example, see [Table grid example](doc:sections-example-table-grid). Use when text in a column contains whitespace gaps such that Sensible can split one column into two. To avoid this split, set a minimum gap that's larger than the gaps inside the column. The default (0) means that zero-width vertical lines define the column boundaries. |\n   67  | lineFilters     | Match object, or array of Match objects                      | Use to ignore lines that span columns and break column recognition. For example, if the lines occur mid-column, use this parameter rather than a Stop parameter to exclude the lines. Sensible excludes the lines both from the output and from the SenseML search scope.<br/>You don't need to configure this parameter if you specify a Stop parameter. For more information, see [Section nuances](doc:section-nuances#vertical-sections). |\n   68  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6700 - config-settings\\2000 - verbosity.md:\n   12  | `0`             | default                                                      |\n   13  | `1`             | For single-document extractions, adds a `lines` array to each field's output describing the field's source text in the document. Each line includes information about its position in the document, for example,  `text`, `page`, and `boundingPoly` metadata. |\n   14: <skipped 697 characters> ..., which are the averages of their source lines' confidence scores.<br/><br/>For more information about using OCR confidence scores, see [Validate extractions](doc:validate-extractions).<br/><br/> If the standardized text metadata causes the extraction response to exceed 6MB, as can be the case with large documents, then Sensible returns a `413` error. |\n   15  \n   16  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6800 - document-type-settings\\2000 - ocr-engine.md:\n   12  | --------- | ------------------------------------------------------------ |\n   13  | Amazon    | Default engine for the OCR preprocessor.                     |\n   14: | Microsoft | Default engine for document types.<br/>Suited to typewritten documents and large documents up to 50 MB in size. |\n   15  | Lazarus   | Faster than Microsoft and produces similar output.           |\n   16  | Google    | Faster than Microsoft and suited to handwriting and documents that are 5 pages or fewer. The Google engine doesn't merge words into lines automatically. Use the Merge Lines preprocessor in your configurations to do so. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - advanced-methods\\2500 - paragraph.md:\n   63  The following image shows the example document used with this example config:\n   64  \n   65: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/paragraph.png)\n   66  \n   67: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/paragraph_1.png)\n   68  \n   69  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/paragraph.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\2000 - tfidf.md:\n  155  The following image shows the example document used with this example config:\n  156  \n  157: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/tfidf.png)\n  158  \n  159  | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/tfidf.pdf) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\00 - draft-overview.md:\n    6  TODO -- check redirects\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your vertical SaaS products. Sensible is highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful document primitives. \n    9  \n   10  TODO -- have a bit of an explanation of the 'developer platform' with callouts a la metrn?\n   11  \n   12: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n   13  \n   14  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n   11  \n   12: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/platform.png)\n   13  \n   14  See the following list for an overview of going live with Sensible:\n   ..\n   23  ## Learn to extract data\n   24  \n   25: Let's get started with extracting document data from an example bank statement. We'll use a large-language model (LLM) prompt to extract a checking account number in minutes.\n   26  \n   27   In this guide, you'll:\n   ..\n   43     Sensible displays an example document in the left pane, and fields of extracted data in the right pane. \n   44  \n   45: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_1.png)\n   46  \n   47  Take the following steps to create a prompt to extract more data from the document.\n   ..\n   51  1. To extract a single data point from the document, click **Query**.\n   52  \n   53: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_2.png)\n   54  \n   55  2. Edit the query as shown in the following screenshot by entering `checking account number (not savings)` in the query field. Give the query an ID, `account_num_checking`, then click the **Send** icon:\n   56  \n   57: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_3.png)\n   58  \n   59  - Sensible displays the extracted account number, `8347-32348`, in the **Extracted data** section.\n   ..\n   68   Click **Publish**, click **Production**, then click **Publish to production**:\n   69  \n   70: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_10.png)\n   71  \n   72  ## Test the prompt\n   ..\n   76  1. Navigate to <https://app.sensible.so/editor/instruct/?d=sensible_instruct_basics&c=bank_statement&g=bank_statement_2>. Notice that the left pane now displays a statement for a different customer.\n   77  \n   78: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_8.png)\n   79  \n   80  2. In the right pane, scroll down to the `account_num_checking` field you authored in previous steps. Verify that the extracted information automatically updated to reflect the second example document. For example, the account number updated from `8347-32348` to `9876-12345`: \n   81  \n   82: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_9.png)\n   83  \n   84  It looks like your prompt was successful at extracting the checking account number from another document. Great! \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n    8  See the following diagram for an overview of when to use Sensible Instruct (LLMs) or SenseML (layout-based) for extractions: \n    9  \n   10: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_landscape.png)\n   11  \n   12: Sensible recommends using large-language model (LLM) prompts for free-form, highly variable documents, and layout-based, or \"rule-based\" queries for structured, less-variable documents.  You can combine both strategies since they're fully compatible with each other. \n   13  \n   14  See the following table to learn more about extraction strategies:\n   ..\n   16  | extraction method | notes                                                        | get started                                                  |\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18: | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large-language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19  | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   ..\n   26  | Technical expertise required | For nontechnical users. Describe what you want to extract using natural language.  For example, \"the policy period\" or \"total amount invoiced\". | Offers highly configurable JSON-based extraction configuration for technical users. For example, write instructions in JSON to grab the second cell in a column headed by \"premium.\" |\n   27  | Workflow automation          | Suited to workflows that include human review or that are fault-tolerant. | Suited to automated workflows that require predictable results and validation. |\n   28: | Document variability         | Suited to documents that are unstructured or that have a large number of layout variations or revisions. | Suited to structured documents with a finite number of variations, where you know the layout of the document in advance. |\n   29  | Deterministic                | No                                                           | Yes. Find the information in the document using anchoring text and layout data. |\n   30  | Handles repeating layouts    | Use [List](doc:list-tips) method.                            | Use [sections](doc:sections) for highly complex repeating substructures, for example, [loss runs](doc:sections). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\3000 - prompt.md:\n    5  \n    6  \n    7: You can configure the full prompt that Sensible inputs to a large-language model (LLM). You can apply configurations to multiple fields in a config, and you can override them for individual fields.\n    8  \n    9: When you write a prompt in a Sensible Instruct method, Sensible combines your prompt with other information to create the full prompt it submits to a large-language model (LLM). The full prompt includes:\n   10  \n   11  - a prompt introduction\n   ..\n   15  See the following image for an example of a full prompt that Sensible inputs to an LLM for the [Query](doc:query-tips) method: \n   16  \n   17: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/prompt.png)\n   18  \n   19  \n   ..\n   29  You can configure all of these parameters in the SenseML editor and in the Sensible Instruct editor. For example, the following screenshots show prompt settings in Sensible Instruct for a Query field: \n   30  \n   31: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/prompt_instruct_1.png)\n   32  \n   33  The following screenshot shows prompt settings in Sensible Instruct for all fields in a config:\n   34  \n   35: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/prompt_instruct_2.png)\n   36  \n   37  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\instruct\\1000 - query-tips.md:\n   46  - You can view the source text for an LLM's answer highlighted in the document. In the Sensible Instruct editor, click the **Location** button in the output of a query field to view its source text in the document. For more information about how location highlighting works and its limitations, see [Location highlighting](doc:query#notes).\n   47  \n   48:   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/changelog_August2023_location.png)\n   49    \n   50    \n   ..\n   58  The following example shows using the Query method to extract agricultural data from a government report:\n   59  \n   60: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/question_instruct.png)\n   61  \n   62  To try out this example in the Sensible app, take the following steps: \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\instruct\\2000 - list-tips.md:\n   22  The following example shows using the List method to extract data from a restaurant menu:\n   23  \n   24: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/list_instruct.png)\n   25  \n   26  To try out this example in the Sensible app, take the following steps: \n   ..\n   45  For example, use the following screenshot as a guide for configuring the `dinners` field:\n   46  \n   47: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/list_instruct_2.png)\n   48  \n   49  Notes\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\instruct\\3000 - table-tips.md:\n   27  The following example shows using the Table method to extract data from a bank statement:\n   28  \n   29: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_4.png)\n   30  \n   31  To try out this example in the Sensible app, take the following steps: \n   ..\n   47  3. To verify the extracted data, scroll down in the right pane and compare the **Extracted data** section to the document in the left pane:\n   48  \n   49: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_5.png)\n   50  \n   51  4. (**Optional**) To standardize the representation of the extracted dates and dollar amounts, configure `date` and `currency` types as shown in the following screenshots:\n   52  \n   53: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_6.png)\n   54  \n   55     You should see that the formatting of the extracted data changes according to the types you specified. For example, Sensible reformats the date `04/11/23` to a standardized output format, `2023-04-11`:\n   56  \n   57: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_7.png)\n   58  \n   59  \n   ..\n   64  The following example shows using the Table method to extract data from an auto insurance document:\n   65  \n   66: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/nlp_table_instruct.png)\n   67  \n   68  \n   ..\n   88  For example, use the following screenshot as a guide for configuring the `insured_vehicles_table` field:\n   89  \n   90: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/nlp_table_instruct_2.png)\n   91  \n   92  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\instruct\\index.md:\n    4  ---\n    5  \n    6: To extract from documents, describe your target data using Sensible's prompt-authoring environment, *Sensible Instruct*. Sensible Instruct is a large language-model (LLM)-powered subset of *SenseML*, Sensible's JSON-based document extraction query language. By combining Sensible Instruct and SenseML, you can extract data from a range of document types, from highly structured business forms to unstructured research documents.\n    7  \n    8  See the following topics for tips on configuring extractions in Sensible Instruct:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 64 characters> ...tructured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n    7  \n    8  This open-source Sensible SDK offers convenient access to the [Sensible API](https://docs.sensible.so/reference/choosing-an-endpoint). Use this SDK to:\n    .\n  104  Navigate to the example in the [SenseML editor](https://app.sensible.so/editor/?d=sensible_instruct_basics&c=contract&g=contract) to see how the extraction you just ran works in the Sensible app. You can add more fields to the left pane to extract more data:\n  105  \n  106: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sdk_node_1.png)\n  107  \n  108  ## Usage: Extract document data\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n  113  Navigate to https://app.sensible.so/editor/instruct/?d=sensible_instruct_basics&c=contract&g=contract to see how the extraction you just ran works in the Sensible app. You can add more fields to the extraction configuration to extract more data:\n  114  \n  115: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sdk_node_1.png)\n  116  \n  117  #### Complete code example\n\n267 matches across 93 files\n\n\nSearching 144 files for \"language mod\" (case sensitive)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\3000 - confidence.md:\n    4  ---\n    5  \n    6: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report \"multiple possible answers\" or \"ambiguous query\".  These confidence *signals* offer more nuanced troubleshooting than confidence *scores*.\n    7  \n    8  Note that LLMs can inaccurately report confidence signals.  For more information about confidence signals, see the research paper [Teaching models to express their uncertainties in words](https://arxiv.org/pdf/2205.14334.pdf). \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - performance.md:\n   33  | OCR preprocessor                               | Some documents mix digital text with text images, for example by embedding scanned pages in a digital PDF. Speed this up by OCRing select pages, not the whole document. For more information, see the [OCR preprocessor](doc:ocr). |\n   34  | Tables with stops,<br/>Nearest Checkbox method | Sensible process tables that include a Stop parameter in less than 5 seconds. Or, convert to the faster [Fixed table](doc:fixed-table) method, which skips table recognition. |\n   35: | NLP methods                                    | NLP methods are large-language model (LLM)-powered and include [Sensible Instruct](doc:instruct) methods |\n   36  \n   37   **Under 1 second per document**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\draft-python.md:\n    8  # Sensible Python SDK\n    9  \n   10: <skipped 70 characters> ...red data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n   11  \n   12  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  252  Try it out: change the question to `\"what's the street address for the Anyco insurance company?\"` and see what you get.\n  253  \n  254: You can write natural-language methods powered by large-language models (LLMs), such as the Query method, in SenseML, or in Sensible Instruct, Sensible's visual authoring tool. For more information about Sensible Instruct, see [Getting started](doc:getting-started-ai).\n  255  \n  256  Natural-language methods can run up against limitations with complex document formatting. In such cases, combine natural-language methods with layout-based methods in the same document extraction configuration. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\5000 - concepts\\0300 - accuracy-measures.md:\n    9  - **Logical validations**:  Write validations in [JsonLogic](https://jsonlogic.com/) to check that fields extracted from documents meet your conditions. For example, configure Sensible to return errors if a quoted rate is null, a broker's email isn't in string@string format, or if a zip code has more than 5 digits.  For more information, see [Validate extractions](doc:validate-extractions).  \n   10  - **OCR confidence scores**: Get a score for the quality of text images. For example, check that text in a scanned or photographed document isn't blurry or illegible.  For more information, see [Validate extractions](doc:validate-extractions).  \n   11: - **Confidence signals**: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report that it found multiple answer candidates. For more information, see [Qualifying LLM accuracy](doc:confidence).\n   12  \n   13  - **Extraction coverage:**  A score that measures how fully an extraction captured all the data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For more information, see [Monitoring extractions](doc:metrics).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n  447    - Sensible scores your concatenated list descriptions against each chunk.\n  448  2. Sensible selects a number of the top-scoring chunks, where the number is determined by the Chunk Count parameter. Sensible re-scores the top-scoring chunks to select a smaller list of page numbers containing the most relevant chunks, where the list size is determined by the re-scoring process. The  maximum list size is 20 page numbers.\n  449: 3. To avoid large-language model (LLM)'s token limits, Sensible batches the page numbers into groups. The chunks in each page group can be non-consecutive in the document.\n  450  4. For each page group, Sensible submits a full prompt for the LLM (GPT-3) that includes the pages' chunks as context, page-hinting data, and your prompts. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n  451  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query.md:\n    5  ---\n    6  \n    7: Extracts individual facts in a document, such as the date of an invoice, the liability limit of an insurance policy, or the destination address of a shipping container delivery. Sensible uses a large-language model (LLM)  to find these facts in paragraphs of free text, or in more structured layouts, for example key/value pairs or tables.\n    8  \n    9  Sensible recommends framing each query, or prompt, so that it has a single, short answer.  For complex prompts with multi-part answers, use the [List method](doc:list) or the  [Summarizer](doc:summarizer) method. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\draft-llm-engine.md:\n   43     1. If you select `llm_engine: thorough`, the Chunk Count parameter determines the number of  top-scoring chunks Sensible selects.\n   44     2. If you select `llm_engine: fast`,   1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. Sensible selects a smaller number of chunks, by removing chunks that are significantly less relevant from the list of top-scoring chunks.\n   45: 3. To avoid large-language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers, **up to a maximum of 20 page numbers TODO right place for it?** The chunks in each page group can be non-consecutive in the document.\n   46  4. For each page group, Sensible submits a full prompt to the LLM that includes the pages' chunks as context, page-hinting data, and your prompts. For information about the LLM model, see the LLM Engine parameter. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n   47  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\index.md:\n    6  Use natural-language SenseML methods to extract free text from unstructured documents, or as low-code alternatives to [layout based methods](doc:methods). For example, extract information from legal paragraphs in contracts and leases, or results from research papers. \n    7  \n    8: SenseML natural-language methods are powered by machine learning and natural-language processing models, for example by the large-language model (LLM) GPT-4.\n    9  \n   10  The following topics describe how to author natural-language methods using SenseML. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\00 - draft-overview.md:\n    6  TODO -- check redirects\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your vertical SaaS products. Sensible is highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful document primitives. \n    9  \n   10  TODO -- have a bit of an explanation of the 'developer platform' with callouts a la metrn?\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n   ..\n   23  ## Learn to extract data\n   24  \n   25: Let's get started with extracting document data from an example bank statement. We'll use a large-language model (LLM) prompt to extract a checking account number in minutes.\n   26  \n   27   In this guide, you'll:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   10  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_landscape.png)\n   11  \n   12: Sensible recommends using large-language model (LLM) prompts for free-form, highly variable documents, and layout-based, or \"rule-based\" queries for structured, less-variable documents.  You can combine both strategies since they're fully compatible with each other. \n   13  \n   14  See the following table to learn more about extraction strategies:\n   ..\n   16  | extraction method | notes                                                        | get started                                                  |\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18: | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large-language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19  | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\3000 - prompt.md:\n    5  \n    6  \n    7: You can configure the full prompt that Sensible inputs to a large-language model (LLM). You can apply configurations to multiple fields in a config, and you can override them for individual fields.\n    8  \n    9: When you write a prompt in a Sensible Instruct method, Sensible combines your prompt with other information to create the full prompt it submits to a large-language model (LLM). The full prompt includes:\n   10  \n   11  - a prompt introduction\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 70 characters> ...red data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\n17 matches across 14 files\n\n\nSearching 144 files for \"out-of\" (case sensitive)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\draft-python.md:\n  159  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  160  | url               | string                                                     | The URL of the document you want to extract from. URL must:<br/>- respond to a GET request with the bytes of the document you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  161: | document_type      | string                                                     | Type of document to extract from. Create your custom type in the Sensible app (for example, `rate_confirmation`, `certificate_of_insurance`, or `home_inspection_report`), or use Sensible's library of out-of-the-box supported document types. |\n  162  | document_types     | array                                                      | Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](https://docs.sensible.so/docs/portfolio). |\n  163  | configuration_name | string                                                     | If specified, Sensible uses the specified config to extract data from the document instead of automatically choosing the configuration.<br/>If unspecified, Sensible automatically chooses the best-scoring extraction from the configs in the document type.<br/>Not applicable for portfolios. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\1000 - zapier-getting-started.md:\n   10  ----\n   11  \n   12: To configure Zapier, you'll use a recent example of a document extraction. Follow the steps in [Getting started with out-of-the-box extractions](doc:library-quickstart) to create a JSON extraction from an example 1040 tax form. \n   13  \n   14  **Note** Ensure your example extraction contains non-null values for all fields you intend to configure in Zapier.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\2000 - zapier-tutorial-2.md:\n   28  ----\n   29  \n   30: Follow the steps in [Getting started with out-of-the-box extractions](doc:library-quickstart) to configure extracting data from a 1040 tax form. \n   31  \n   32  Prerequisite: Configure Google accounts\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n  418  \n  419  \n  420: - For a tutorial about converting document data to an Excel file using the Sensible app, see [Getting started with out-of-the-box extraction](doc:library-quickstart).\n  421  - To get started with extracting from your custom documents, see [Getting Started](doc:getting-started-ai).\n  422  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\index.md:\n    5  ---\n    6  \n    7: After you've configured extractions for your [custom documents](doc:getting-started-ai) or for out-of-the-box [supported documents](doc:library-quickstart), you can upload documents to the Sensible app and download the extracted data as Excel files.\n    8  \n    9  **Note:** A bulk file upload feature is coming soon.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\2000 - library-quickstart.md:\n    5  \n    6  \n    7: If you want to extract from any of the following document types, you can get started in minutes using the [Sensible configuration library](https://github.com/sensible-hq/sensible-configuration-library). The library provides out-of-the-box support for common business forms:\n    8  \n    9  - auto policy declaration pages\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1350 - pick-values.md:\n   59      {\n   60        \"id\": \"out_of_state_income\",\n   61:       \"anchor\": \"out-of-state\",\n   62        \"method\": {\n   63          \"id\": \"row\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n   14  See the following list for an overview of going live with Sensible:\n   15  \n   16: - **Learn** to extract data, or use out-of-the-box supported document types\n   17  - [**Integrate**](doc:integrate) using Sensible's API, quick-extract UI, or other tools\n   18  - [**Quality control**](doc:validate-extractions) extracted data\n   ..\n   96  ## (Optional) Extract from your own documents\n   97  \n   98: To extract data from your documents, first check if they're on Sensible's list of out-of-the-box [supported document types](doc:library-quickstart). If not, configure your custom extractions by using the interactive [tutorial](https://app.sensible.so/tutorial/) or taking the following steps:\n   99  \n  100  1. To exit the Sensible Instruct editor, click **Sensible** in the upper left corner.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   18  | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large-language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19  | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20: | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   21  \n   22  See the following table for an overview of the pros and cons of LLMs versus layout-based extraction:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n  146  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  147  | url               | string                                                     | The URL of the document you want to extract from. URL must:<br/>- respond to a GET request with the bytes of the document you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  148: | documentType      | string                                                     | Type of document to extract from. Create your custom type in the Sensible app (for example, `rate_confirmation`, `certificate_of_insurance`, or `home_inspection_report`), or use Sensible's library of out-of-the-box supported document types. |\n  149  | documentTypes     | array                                                      | Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](https://docs.sensible.so/docs/portfolio). |\n  150  | configurationName | string                                                     | Sensible uses the specified config to extract data from the document instead of automatically choosing the configuration.<br/>If unspecified, Sensible chooses the best-scoring extraction from the configs in the document type.<br/>Not applicable for portfolios. |\n\n13 matches across 10 files\n\n\nSearching 144 files for \"out-of\" (case sensitive)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\draft-python.md:\n  159  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  160  | url               | string                                                     | The URL of the document you want to extract from. URL must:<br/>- respond to a GET request with the bytes of the document you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  161: | document_type      | string                                                     | Type of document to extract from. Create your custom type in the Sensible app (for example, `rate_confirmation`, `certificate_of_insurance`, or `home_inspection_report`), or use Sensible's library of out-of-the-box supported document types. |\n  162  | document_types     | array                                                      | Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](https://docs.sensible.so/docs/portfolio). |\n  163  | configuration_name | string                                                     | If specified, Sensible uses the specified config to extract data from the document instead of automatically choosing the configuration.<br/>If unspecified, Sensible automatically chooses the best-scoring extraction from the configs in the document type.<br/>Not applicable for portfolios. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\1000 - zapier-getting-started.md:\n   10  ----\n   11  \n   12: To configure Zapier, you'll use a recent example of a document extraction. Follow the steps in [Getting started with out-of-the-box extractions](doc:library-quickstart) to create a JSON extraction from an example 1040 tax form. \n   13  \n   14  **Note** Ensure your example extraction contains non-null values for all fields you intend to configure in Zapier.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\2000 - zapier-tutorial-2.md:\n   28  ----\n   29  \n   30: Follow the steps in [Getting started with out-of-the-box extractions](doc:library-quickstart) to configure extracting data from a 1040 tax form. \n   31  \n   32  Prerequisite: Configure Google accounts\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n  418  \n  419  \n  420: - For a tutorial about converting document data to an Excel file using the Sensible app, see [Getting started with out-of-the-box extraction](doc:library-quickstart).\n  421  - To get started with extracting from your custom documents, see [Getting Started](doc:getting-started-ai).\n  422  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\index.md:\n    5  ---\n    6  \n    7: After you've configured extractions for your [custom documents](doc:getting-started-ai) or for out-of-the-box [supported documents](doc:library-quickstart), you can upload documents to the Sensible app and download the extracted data as Excel files.\n    8  \n    9  **Note:** A bulk file upload feature is coming soon.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\2000 - library-quickstart.md:\n    5  \n    6  \n    7: If you want to extract from any of the following document types, you can get started in minutes using the [Sensible configuration library](https://github.com/sensible-hq/sensible-configuration-library). The library provides out-of-the-box support for common business forms:\n    8  \n    9  - auto policy declaration pages\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1350 - pick-values.md:\n   59      {\n   60        \"id\": \"out_of_state_income\",\n   61:       \"anchor\": \"out-of-state\",\n   62        \"method\": {\n   63          \"id\": \"row\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n   14  See the following list for an overview of going live with Sensible:\n   15  \n   16: - **Learn** to extract data, or use out-of-the-box supported document types\n   17  - [**Integrate**](doc:integrate) using Sensible's API, quick-extract UI, or other tools\n   18  - [**Quality control**](doc:validate-extractions) extracted data\n   ..\n   96  ## (Optional) Extract from your own documents\n   97  \n   98: To extract data from your documents, first check if they're on Sensible's list of out-of-the-box [supported document types](doc:library-quickstart). If not, configure your custom extractions by using the interactive [tutorial](https://app.sensible.so/tutorial/) or taking the following steps:\n   99  \n  100  1. To exit the Sensible Instruct editor, click **Sensible** in the upper left corner.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   18  | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large-language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19  | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20: | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   21  \n   22  See the following table for an overview of the pros and cons of LLMs versus layout-based extraction:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n  146  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  147  | url               | string                                                     | The URL of the document you want to extract from. URL must:<br/>- respond to a GET request with the bytes of the document you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  148: | documentType      | string                                                     | Type of document to extract from. Create your custom type in the Sensible app (for example, `rate_confirmation`, `certificate_of_insurance`, or `home_inspection_report`), or use Sensible's library of out-of-the-box supported document types. |\n  149  | documentTypes     | array                                                      | Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](https://docs.sensible.so/docs/portfolio). |\n  150  | configurationName | string                                                     | Sensible uses the specified config to extract data from the document instead of automatically choosing the configuration.<br/>If unspecified, Sensible chooses the best-scoring extraction from the configs in the document type.<br/>Not applicable for portfolios. |\n\n13 matches across 10 files\n\n\nSearching 144 files for \"https://docs.sensible.so/reference/choosing-an-endpoint/library-quickstart\" (case sensitive)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n  146  To classify an example document, take the following steps:\n  147  \n  148: 1. Follow the steps in [Out-of-the-box extractions](https://docs.sensible.so/reference/choosing-an-endpoint/library-quickstart) to add support for bank statements to your account.\n  149  \n  150  2. Follow the steps in the preceding sections to install and initialize the SDK.\n\n1 match in 1 file\n\n\nSearching 143 files for \"troubleshoot\" (case sensitive)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\3000 - confidence.md:\n    4  ---\n    5  \n    6: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report \"multiple possible answers\" or \"ambiguous query\".  These confidence *signals* offer more nuanced troubleshooting than confidence *scores*.\n    7  \n    8  Note that LLMs can inaccurately report confidence signals.  For more information about confidence signals, see the research paper [Teaching models to express their uncertainties in words](https://arxiv.org/pdf/2205.14334.pdf). \n    .\n   10  Sensible support confidence signals for the Query method. The **confidence signals** checkbox is enabled by default in the Sensible Instruct editor for new Query fields. To enable confidence signals for a field in SenseML, see the [Query](doc:query#parameters) method's Confidence Signals parameter.\n   11  \n   12: For more information about troubleshooting confidence signals, see the following table.\n   13  \n   14  Query method confidence signals\n   ..\n   17  For the Query method, Sensible returns the following messages, or \"confidence signals\",  to qualify the LLM's confidence in the accuracy of the extracted data.\n   18  \n   19: | confidence signal                        | JSON output                 | description                                                  | troubleshooting                                              |\n   20  | ---------------------------------------- | --------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   21  | Multiple possible answers                | `multiple_possible_answers` | The LLM answers the prompt, but identifies multiple possible answers in the context that Sensible provides to the LLM. | -  To return multiple answers, use the [List method](doc:list-tips).<br/>- To return a single answer, ensure the context contains a single answer. For more information, see [Advanced prompt configuration](doc:prompt). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\2000 - troubleshoot.md:\n    4  ---\n    5  \n    6: Sensible offers you several ways to troubleshoot your configs and extractions.\n    7  \n    8  API logging levels\n    9  ----\n   10  \n   11: To troubleshoot extractions in API responses, you can add a verbosity level to a config. For more information, see [verbosity](doc:verbosity).\n   12  \n   13  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  369  - Orange boxes show lines matched by the Anchor object.\n  370  - Blue boxes show lines matched by the Method object.\n  371: - Dotted blue boxes show lines discarded by the Method object. Seeing the entire method match in the app can help you troubleshoot unexpected output.\n  372  \n  373  To continue the Row method example from the previous section, in the following image the orange box shows that \"Comprehensive\" is the anchor line:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\1000 - color.md:\n    4  ---\n    5  \n    6: This topic describes color-coded symbols that the SenseML editor overlays on documents in the Sensible app. These overlays visually represent how SenseML queries operate on documents. Use these symbols to author and troubleshoot queries.\n    7  \n    8  | symbol                                           | represents                           |\n    .\n   90  - a starting point for defining the coordinates of a region\n   91  \n   92: Green points can be useful for troubleshooting. For example, in the following image, Sensible can't recognize the box. The green dot provides a visual clue about the problem: the green dot is *on* the box border itself, as specified by (`\"position\": \"left\"`).\n   93  \n   94   ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/box_position_left.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query.md:\n    9  Sensible recommends framing each query, or prompt, so that it has a single, short answer.  For complex prompts with multi-part answers, use the [List method](doc:list) or the  [Summarizer](doc:summarizer) method. \n   10  \n   11: For tips and troubleshooting, see [Query tips](doc:query-tips).\n   12  \n   13  For more information about how this method works, see [Notes](doc:query#notes).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n  151  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_5.png)\n  152  \n  153: This visual representation of how the Sensible app deskews documents can be useful for authoring or troubleshooting deskew preprocessors and configs.\n  154  \n  155  **Fixed Points tips**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\6000 - sections-example-table-grid.md:\n   85  ----\n   86  \n   87: The following elaborates on the preceding brief overview using JSON instead of YML. To illustrate each section's range and for troubleshooting purposes, the config includes a field that outputs the entire contents of each section.\n   88  \n   89  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n   39  | range  (**required**) | object                 | Specifies the document area from which to extract a group of sections. The Range parameter specifies both:<br/>- a group of repeated sections in an area of the document <br/>- the start and end of each repeated section.<br/><br/> **horizontal sectio... <skipped 76 characters> ...  in the preceding image, an \"unprocessed_claims\" section group can span month headings.<br/><br/> **vertical sections:** The section group can span pages. By default, the group can't span text that breaks the column format.<br/>For the Range object's parameters, see the following table.<br/><br/> |\n   40  | sections              |                        | Specifies sections inside sections. Use this for complex sections that contain nested repeated elements, for example, [a grid of tables](doc:sections-example-table-grid). Each nested section searches for its range inside the parent section's range. |\n   41: | display               | boolean. Default: true | Specifies to display  the start and end of each section in a section group  as brackets overlaid on the rendered document in the Sensible app. Useful for troubleshooting.<br/> |\n   42  \n   43  **Range parameters**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\instruct\\1000 - query-tips.md:\n   42  ----\n   43  \n   44: - For information about troubleshooting error messages about prompts, see [Qualifying LLM accuracy](doc:confidence).\n   45  \n   46  - You can view the source text for an LLM's answer highlighted in the document. In the Sensible Instruct editor, click the **Location** button in the output of a query field to view its source text in the document. For more information about how location highlighting works and its limitations, see [Location highlighting](doc:query#notes).\n\n13 matches across 9 files\n\n\nSearching 143 files for \"draft-table\" (case sensitive)\n\n0 matches",
			"redo_stack":
			[
				[
					440,
					1,
					"transpose",
					null,
					"AgAAAPKrAgAAAAAA86sCAAAAAAABAAAAU/OrAgAAAAAA9KsCAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA9KsCAAAAAAD0qwIAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 175156,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
			"settings":
			{
				"buffer_size": 8232,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "docs/"
					},
					"BgAAAJwYAAAAAAAAnRgAAAAAAAAAAAAAnRgAAAAAAACdGAAAAAAAAB8AAAByZWZlcmVuY2UvY2hvb3NpbmctYW4tZW5kcG9pbnQvnRgAAAAAAACeGAAAAAAAAAAAAACeGAAAAAAAAJ8YAAAAAAAAAAAAAJ8YAAAAAAAAoBgAAAAAAAAAAAAAoBgAAAAAAAChGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBgAAAAAAAC7GAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/franc/Documents/GitHub/sensible-docs/README.md",
			"settings":
			{
				"buffer_size": 117,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
			"settings":
			{
				"buffer_size": 13690,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAUxQAAAAAAABWFAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ui:",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js",
		"/C/Users/franc/Documents/GitHub/sensible-api-py"
	],
	"file_history":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/3000 - integrate.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/5000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/draft_python.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/extract_doc.py",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/7600 - excel-reference.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/sdk-quickstarts.md",
		"/C/ProgramData/Vanta/vanta.conf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-node-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/write-prompts/instruct/1000 - query-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-javascript-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-javascript.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-javascript.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/1000 - senseml-reference-introduction.md"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"<open files>",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\, C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0; C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"draft-table",
			"troubleshoot",
			"quickstart",
			"box",
			"https://docs.sensible.so/reference/choosing-an-endpoint/library-quickstart",
			"out-of",
			"language mod",
			"large",
			"download ",
			"register",
			"index.mjs",
			"Node",
			"openai",
			"about token",
			"token limit",
			"token",
			"endpoint",
			"types and size",
			"4.5",
			"extrac",
			"extract",
			"bytes",
			"non-encoded bytes",
			"outpu.",
			"spreadsheet spreadsheet",
			"best-scoring",
			"sdk-quickstarts",
			"js/blob/main/readme",
			"blob/main/readme",
			"quickstart-node",
			"sdk-node",
			"extraction/",
			"get_excel",
			"convert",
			"mappings",
			"gpt-best",
			"openapi",
			"doc:quickstart-node",
			"quickstart-node",
			"JavaScript",
			"extraction API",
			"API",
			"sensible api",
			"Javascript",
			"javascript",
			"JS",
			"js",
			"-javascript",
			"Javascript",
			"javascript",
			"Javascript",
			"javascript",
			"file: blob",
			"blob",
			"blog",
			"configuration-settings",
			"doc:configuration-settings",
			"configuration-settings",
			"ocr engine",
			"ocr_engine",
			"sensible-sdk",
			"sensible-api",
			"sensible api",
			"todo",
			"fingerprint",
			"sensibleSDK"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"index.py",
			"Python",
			"size and types",
			"https://github.com/sensible-hq/sensible-api-js#readme",
			"Node",
			"node",
			"-node",
			"node",
			"Node",
			"node",
			"doc:config-settings"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 175156,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "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",
								"scope": ""
							}
						},
						"selection":
						[
							[
								175091,
								175091
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 76,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 52704.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8232,
						"regions":
						{
						},
						"selection":
						[
							[
								6323,
								6275
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2736.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/franc/Documents/GitHub/sensible-docs/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 117,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13690,
						"regions":
						{
						},
						"selection":
						[
							[
								5629,
								5629
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2468.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "f_project.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 323.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 208.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
