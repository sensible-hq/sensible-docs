{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "\n\nSearching 188 files for \"source_ids\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\assets\\v0\\diagrams_mermaid\\llm_extraction.txt:\n    5      style D fill:#fafaf8,stroke:#000,stroke-width:1px;\n    6  \n    7:     A[\"'What's the largest checking transaction?'\"] -->|source_ids| B[\"Look in an extracted field\"]\n    8      A -->|searchBySummarization| C[\"locate context using page summaries\"]\n    9      A -->|default| D[\"Locate context using page chunks\"]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6550 - conditional.md:\n   76              \"method\": {\n   77                \"id\": \"list\",\n   78:               /* source_ids prompts the LLM to extract the list from\n   79                   an extracted field, transaction_history */\n   80:               \"source_ids\": [\n   81                  \"transaction_history\"\n   82                ],\n   ..\n  105              \"method\": {\n  106                \"id\": \"list\",\n  107:               \"source_ids\": [\n  108                  \"transaction_history\"\n  109                ],\n  ...\n  188        \"method\": {\n  189          \"id\": \"zip\",\n  190:         \"source_ids\": [\n  191            \"_deposits\"\n  192          ]\n  ...\n  198        \"method\": {\n  199          \"id\": \"zip\",\n  200:         \"source_ids\": [\n  201            \"_withdrawals\"\n  202          ]\n  ...\n  208        \"method\": {\n  209          \"id\": \"suppressOutput\",\n  210:         \"source_ids\": [\n  211            \"transaction_history\",\n  212            \"_deposits\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6600 - cell-rows.md:\n  105            \"method\": {\n  106              \"id\": \"suppressOutput\",\n  107:             \"source_ids\": [\"_sales_raw\"]\n  108            }\n  109          }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - llm-based-methods\\1000 - list.md:\n   47  | singleLLMCompletion        | boolean. default: false                                      | If Sensible returns incomplete or duplicate results in a list that's under ~20 pages long, set this parameter to True to troubleshoot.<br/> If true, Sensible concatenates the top-scoring chunks into a singl... <skipped 619 characters> ...t in the [context](doc:list#notes) has a very small font size. To avoid this type of error, set this parameter to false. | Don't set this parameter to true if you set the LLM Engine parameter to Long. The Single LLM Completion parameter limits output to ~16k tokens, so it'll truncate longer lists. |\n   48  |                            |                                                              | ***CHAIN PROMPTS***                                          |                                                              |\n   49: | source_ids                 | array of field IDs in the current config                     | If specified, prompts an LLM to extract data from another field's output. For example, if you extract a field `_checking_transactions` and specify it in this parameter, then Sensible answers the prompts `rank deposits ... <skipped 397 characters> ...data from other fields](doc:list#example-extract-data-from-other-fields).<br/><br/>You can use a JavaScript-flavored regular expression to specify all field IDs that contain a pattern.  For example,  to specify all the field IDs containing the text `wage` extracted from a W-2 form, you can write  `\"source_ids\": { \"pattern\": \".*wage.*\" }`. For more information and an example, see [Example: Chain prompts with regex](doc:query-group#example-chain-prompts-with-regex). | If you configure this parameter, then generally don't configure: <br/>-  LLM Engine parameter<br/>- Single LLM Completion parameter<br/><br... <skipped 255 characters> ...\n   50  |                            |                                                              | ***FIND CONTEXT***                                           |                                                              |\n   51  | searchBySummarization      | boolean,<br/>or<br>`outline`, or <br/>`page` (equivalent to `true`)<br/> default: `false`<br/> | (Recommended) Configure this to search for [context](doc:prompt) using summaries of document chunks.<br/>If you set `page`,  each page is a chunk. <br/>If you set `outline`... <skipped 490 characters> ...assing summarization.<br/> If you configure this parameter for a document over 5 pages long, then Sensible sets the Chunk Count parameter to 5 and ignores any configured value.<br/>Note that the LLM Engine parameter doesn't configure the LLMs Sensible uses for locating context with this parameter. |\n   ..\n  157        \"method\": {\n  158          \"id\": \"zip\",\n  159:         \"source_ids\": [\n  160            \"dinners\",\n  161          ]\n  ...\n  166        \"method\": {\n  167          \"id\": \"zip\",\n  168:         \"source_ids\": [\n  169            \"desserts\",\n  170          ]\n  ...\n  175        \"method\": {\n  176          \"id\": \"zip\",\n  177:         \"source_ids\": [\n  178            \"wines\",\n  179          ]\n  ...\n  186        \"method\": {\n  187          \"id\": \"suppressOutput\",\n  188:         \"source_ids\": [\n  189            \"dinners\",\n  190            \"desserts\",\n  ...\n  518              // select match:one for a group of radio buttons where the user can select a single item\n  519              \"match\": \"one\",\n  520:             \"source_ids\": [\n  521                \"individual\",\n  522                \"partnership\",\n  ...\n  534          \"id\": \"list\",\n  535          /* use _businesses ID as context for prompts */\n  536:         \"source_ids\": [\n  537            \"_businesses\"\n  538          ],\n  ...\n  559        \"method\": {\n  560          \"id\": \"list\",\n  561:         \"source_ids\": [\n  562            /* count instances in the _businesses output */\n  563            \"_businesses\"\n  ...\n  582        \"method\": {\n  583          \"id\": \"zip\",\n  584:         \"source_ids\": [\n  585            \"_business_sales\",\n  586          ]\n  ...\n  591        \"method\": {\n  592          \"id\": \"zip\",\n  593:         \"source_ids\": [\n  594            \"_business_classifications_frequency\",\n  595          ]\n  ...\n  601        \"method\": {\n  602          \"id\": \"suppressOutput\",\n  603:         \"source_ids\": [\n  604            \"_businesses\",\n  605            \"_business_classifications_frequency\",\n  ...\n  615  The following image shows the example document used with this example config:\n  616  \n  617: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/list_source_ids.png)\n  618  \n  619: | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/list_source_ids.pdf) |\n  620  | ---------------- | ------------------------------------------------------------ |\n  621  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - llm-based-methods\\1000 - nlp-table.md:\n  113        \"method\": {\n  114          \"id\": \"zip\",\n  115:         \"source_ids\": [\n  116            \"insured_vehicles_table\",\n  117          ]\n  ...\n  122        \"method\": {\n  123          \"id\": \"zip\",\n  124:         \"source_ids\": [\n  125            \"transactions_table\",\n  126          ]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - llm-based-methods\\1500 - query-group.md:\n   70  | queries               | array of objects                                             | An array of query objects, where each extracts a single fact and outputs a single field. Each query contains the following parameters:<br/>`id` (**required**) - The ID for the extracted field. <br/>`description`... <skipped 80 characters> ...xample, `\"what's the policy period?\"` or `\"what's the client's first and last name?\"`. For more information about how to write questions (or \"prompts\"), see [Query Group](https://docs.sensible.so/docs/query-group-tips) extraction tips. |                                                              |\n   71  |                       |                                                              | ***CHAIN PROMPTS***                                          |                                                              |\n   72: | source_ids            | array of field IDs in the current config<br/>or<br/>object   | If specified, prompts an LLM to extract data from another field's output. For example, if you extract a field `_checking_transactions` and specify it in this parameter, then Sensible searches for the answer to `what is the ... <skipped 298 characters> ...ee [Example: Transform fields](doc:query-group#example-transform-fields).<br/><br/>You can use a JavaScript-flavored regular expression to specify all field IDs that contain a pattern.  For example,  to specify all the field IDs containing the text `wage` extracted from a W-2 form, you can write  `\"source_ids\": { \"pattern\": \".*wage.*\" }`. For an example, see [Example: Chain prompts with regex](doc:query-group#example-chain-prompts-with-regex).<br/>When you use regex, Sensible populates the IDs in the array in the same order in which they're defined in the config. Sensible automatically expands your patt... <skipped 683 characters> ...\n   73  |                       |                                                              | ***EXTRACT FROM IMAGES***                                    |                                                              |\n   74  | multimodalEngine      | object                                                       | Configure this parameter to:<br/>- Extract data from images embedded in a document, for example, photos, charts, or illustrations.<br/>- Troubleshoot extracting from complex text layouts, such as overlapping lin... <skipped 1685 characters> ...y [lines](doc:lines) overlapping the region. Sends the images at their original resolution. For an example, see [Example: troubleshoot image resolution](doc:query-group#example-troubleshoot-image-resolution). | If you configure this parameter, then the Confidence Signals parameter isn't supported. |\n   ..\n  445        \"method\": {\n  446          \"id\": \"queryGroup\",\n  447:         \"source_ids\": [\n  448            /* restrict queries to data in _transactions field */\n  449            \"_transactions\"\n  ...\n  491        \"method\": {\n  492          \"id\": \"suppressOutput\",\n  493:         \"source_ids\": [\n  494            \"_transactions\",\n  495           \n  ...\n  504  The following image shows the example document used with this example config:\n  505  \n  506: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/query_group_source_ids.png)\n  507  \n  508: | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/query_group_source_ids.pdf) |\n  509  | ---------------- | ------------------------------------------------------------ |\n  510  \n  ...\n  714          /* Regular expression to find all \n  715          source IDs that include the string \"wage\".\n  716:         Sensible populates the IDs in the source array in the same order in which they're defined in the config, and the field containing the `source_ids` regex must follow the sources in the `fields` array.\n  717          Sensible automatically expands your pattern to include string beginning and ending characters. For example, it expands the pattern `\".*wage.*\"` to `\"^.*wage.*$\"` */\n  718:         \"source_ids\": { \"pattern\": \".*wage.*\" },\n  719          \"confidenceSignals\": false,\n  720          \"queries\": [\n  ...\n  742  The following image shows the example document used with this example config:\n  743  \n  744: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/source_ids_pattern.png)\n  745  \n  746: | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/source_ids_pattern.pdf) |\n  747  | ---------------- | ------------------------------------------------------------ |\n  748  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1055 - multicolumn.md:\n   89          \"id\": \"queryGroup\",\n   90          /* use the  */\n   91:         \"source_ids\": [\n   92            /* restrict queries to data in methodology field */\n   93            \"methodology\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1000 - concatenate.md:\n   20  | :------------------------ | :--------------------------------------- | :----------------------------------------------------------- |\n   21  | id (**required**)         | `concat`                                 |                                                              |\n   22: | source_ids (**required**) | array of field IDs in the current config | The id of the fields to concatenate.<br/>You can use a JavaScript-flavored regular expression to specify all field IDs that contain a pattern.  For example,  to specify all the field IDs containing the text `wage` extracted from a W-2 form, you can write  `\"source_ids\": { \"pattern\": \".*wage.*\" }`. For more information and an example, see [Example: Chain prompts with regex](doc:query-group#example-chain-prompts-with-regex). |\n   23  | delimiter                 | string. default: \" \"                     | The delimiter with which to join the output of the source fields |\n   24  \n   ..\n   69        \"method\": {\n   70          \"id\": \"concat\",\n   71:         \"source_ids\": [\n   72            \"_recipient_street_address\",\n   73            \"_recipient_city_state\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1350 - pick-values.md:\n   15  | :------------------------ | :------------------------------------------------------ | :----------------------------------------------------------- |\n   16  | id (**required**)         | `pickValues`                                            |                                                              |\n   17: | source_ids (**required**) | array of field ids in the current config                | The id of the fields from which to pick values. Returns the fields whose values matches that specified in the Value parameter.<br/>You can use a JavaScript-flavored regular expression to specify all field IDs that contain a pattern.  For example,  to specify all the field IDs containing the text `wage` extracted from a W-2 form, you can write  `\"source_ids\": { \"pattern\": \".*wage.*\" }`. For more information and an example, see [Example: Chain prompts with regex](doc:query-group#example-chain-prompts-with-regex). |\n   18  | match                     | `one`, `all`. default: `all`                            | `one`:  Select this option for mutually exclusive field groups, for example, a group of radio buttons where the user can select a single item. If no fields in the group have the specified value, or if more than one field has the expected value, then Sensible returns null. <br/><br/> `all`: Returns all fields in the group with the specified value. |\n   19  | value                     | null, boolean, string, or string array. default: `True` | The value to pick. Sensible converts checkbox and radio button selection marks to true and false. For example, to pick selected checkboxes, specify `true`.  Or, to return dropdown questions set to \"yes\", specify `\"yes\"`.<br/>`null` returns the list of source IDs with null values, for example when Sensible can't find a checkbox. |\n   ..\n   78          \"id\": \"pickValues\",\n   79          \"match\": \"one\",\n   80:         \"source_ids\": [\n   81            \"individual\",\n   82            \"partnership\",\n   ..\n   91          \"match\": \"all\",\n   92          \"value\": \"yes\",\n   93:         \"source_ids\": [\n   94            \"income_over_100k\",\n   95            \"out_of_state_income\",\n   ..\n  102        \"method\": {\n  103          \"id\": \"suppressOutput\",\n  104:         \"source_ids\": [\n  105            \"income_over_100k\",\n  106            \"out_of_state_income\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1450 - suppress-output.md:\n   15  | :------------------------ | :--------------------------------------- | :----------------------------------------------------------- |\n   16  | id (**required**)         | `suppressOutput`                         |                                                              |\n   17: | source_ids (**required**) | array of field ids in the current config | The id of the fields to exclude from the extraction output.<br/> In advanced use cases, configure [field execution order](doc:field-order) to prevent unintential null output from other computed field methods. For an example, see [Zip sections example](doc:sections-example-zip).<br/>You can use a JavaScript-flavored regular expression to specify all field IDs that contain a pattern.  For example,  to specify all the field IDs containing the text `wage` extracted from a W-2 form, you can write  `\"source_ids\": { \"pattern\": \".*wage.*\" }`. For more information and an example, see [Example: Chain prompts with regex](doc:query-group#example-chain-prompts-with-regex). |\n   18  \n   19  The following example shows suppressing a raw \"driver's name\" field and outputting the split last name. \n   ..\n   47        \"method\": {\n   48          \"id\": \"suppressOutput\",\n   49:         \"source_ids\": [\n   50            \"_driver_name_first_last_raw\"\n   51          ]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1500 - zip.md:\n   14  | :------------------------- | :--------------------------------------- | :----------------------------------------------------------- |\n   15  | id (**required**)          | `zip`                                    | This method returns a section group. For more information, see notes in succeeding table. |\n   16: | source_ids  (**required**) | array of field IDs in the current config | The id of the fields to zip.<br>You can use a JavaScript-flavored regular expression to specify all field IDs that contain a pattern.  For example,  to specify all the field IDs containing the text `wage` extracted from a W-2 form, you can write  `\"source_ids\": { \"pattern\": \".*wage.*\" }`. For more information and an example, see [Example: Chain prompts with regex](doc:query-group#example-chain-prompts-with-regex). |\n   17  \n   18  \n   ..\n   89        \"method\": {\n   90          \"id\": \"zip\",\n   91:         \"source_ids\": [\n   92            \"phone_number\",\n   93            \"last_name\"\n   ..\n   99        \"method\": {\n  100          \"id\": \"suppressOutput\",\n  101:         \"source_ids\": [\n  102            \"phone_number\",\n  103            \"last_name\"\n  ...\n  222        \"method\": {\n  223          \"id\": \"zip\",\n  224:         \"source_ids\": [\n  225            \"_insured_vehicles_table\"\n  226          ]\n  ...\n  388        \"method\": {\n  389          \"id\": \"zip\",\n  390:         \"source_ids\": [\n  391            \"table_1\",\n  392            \"table_2\"\n  ...\n  606        \"method\": {\n  607          \"id\": \"zip\",\n  608:         \"source_ids\": [\n  609            /* zip represents table as rows, not columns */\n  610            \"table\",\n  ...\n  763  # Notes\n  764  \n  765: - If a single source field ID outputs an array of tables, then for backward compatibility Sensible discards all other source fields, and returns an array of sections groups, each containing a zipped table.  For example, if you configure `\"source_ids\": [\"table_1\", \"table_2\", \"table_array\", \"section_1\"]`, where `\"table_array\"` is configured with `\"match\":\"all\"` , then Sensible discards all source fields except `\"table_array\"`.  \n  766  \n  767  - If there are duplicate field keys when merging, the last-listed key in the `source_fields` array overwrites any preceding ones. The following is an example of source fields with simplified syntax: \n  ...\n  772  ```\n  773  \n  774: If you zip with `\"source_ids\": [\"item_color\", \"item_size\"]`, then the first merged item is `[ {color: \"blue\", \"ID\": 789, \"size\": \"x-large\"}, ... ]`.\n  775  \n  776  \n  777: If you zip with `\"source_ids\": [\"item_size\", \"item_color\"]`, then the first merged item is  `[ {\"color\": \"blue\", \"ID\": 123, \"size\": \"x-large\"}, ... ]`.\n  778  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\7000 - sections-example-zip.md:\n  174        \"method\": {\n  175          \"id\": \"zip\",\n  176:         \"source_ids\": [\n  177            \"_vehicles\",\n  178            \"_coverages_per_vehicle\"\n  ...\n  186        \"method\": {\n  187          \"id\": \"suppressOutput\",\n  188:         \"source_ids\": [\n  189              /* remove these IDs to see section ranges displayed in the Sensible app */\n  190            \"_vehicles\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\8000 - sections-example-copy-from-sections.md:\n  201            \"method\": {\n  202              \"id\": \"zip\",\n  203:             \"source_ids\": [\n  204                \"_covered_vehicles\",\n  205                \"_coverages_per_vehicle\"\n  ...\n  214            \"method\": {\n  215              \"id\": \"suppressOutput\",\n  216:             \"source_ids\": [\n  217                /* remove these IDs to display\n  218                   section ranges in Sensible app */\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\9000 - sections-example-copy-to-section.md:\n  136            \"method\": {\n  137              \"id\": \"suppressOutput\",\n  138:             \"source_ids\": [\n  139                \"_raw_phone_number\"\n  140              ]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0100 - add-computed-fields.md:\n  183              \"method\": {\n  184                \"id\": \"suppressOutput\",\n  185:               \"source_ids\": [\n  186                  \"_make_model_column\"\n  187                ]\n  ...\n  196        \"method\": {\n  197          \"id\": \"suppressOutput\",\n  198:         \"source_ids\": [\n  199            \"_vin\",\n  200            \"_model\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0500 - copy-to-section.md:\n  123            \"method\": {\n  124              \"id\": \"concat\",\n  125:             \"source_ids\": [\n  126                \"copied_policy_name\",\n  127                \"copied_policy_number\"\n  ...\n  149            \"method\": {\n  150              \"id\": \"suppressOutput\",\n  151:             \"source_ids\": [\n  152                \"copied_policy_name\",\n  153                \"copied_policy_number\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0600 - custom-computation.md:\n  463            \"method\": {\n  464              \"id\": \"suppressOutput\",\n  465:             \"source_ids\": [\n  466                \"raw_claim_id\"\n  467              ]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1800 - jsonlogic.md:\n 1187        \"method\": {\n 1188          \"id\": \"zip\",\n 1189:         \"source_ids\": [\n 1190            \"raw_table_contents\"\n 1191          ]\n ....\n 1275        \"method\": {\n 1276          \"id\": \"suppressOutput\",\n 1277:         \"source_ids\": [\n 1278            \"raw_table_contents\",\n 1279            \"raw_ranked_paints\"\n\n68 matches across 18 files\n\n\nSearching 188 files for \"[match\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6600 - cell-rows.md:\n   20  | id (**required**)        | string                                                       | Specifies an ID for a group of rows to extract in the spreadsheet. Sensible ignores empty rows and extracts data under the specified Header Row to the end of the worksheet. |\n   21  | type  (**required**)     | `cellRows`                                                   |                                                              |\n   22: | headerRow (**required**) | Anchor object                                                | Specifies the row containing column headers, by matching the specified line or lines in the row. Sensible ignores empty cells in the header row. Contains the following parameters:<br/>-`match`: A [Match](doc:match) object or array of Match objects. |\n   23  | headerRowsCount          | integer. default: 1                                          | Specifies the number of consecutive header rows. You can specify a match in the Field object's Header parameter for any header row. |\n   24: | stop                     | [Match object](doc:match) or array of Match objects. default: none | Stops extraction at the end of the row above the matched line. Excludes the row containing the matched line. |\n   25: <skipped 155 characters> ...lds that use a spreadsheet-specific method, `cell`. The cell method extracts a cell under the specified header for each extracted row. It contains the following parameters:<br/>`id`: `cell`. Note: The [method](doc:method) object's global parameters aren't available for this method.<br/>`header`:  A [Match](doc:match) object that specifies the column heading under which you want to extract cells. For an example, see the following section.<br/><br/><br/>- fields that use [computed fields methods](doc:computed-field-methods).<br/> |\n   26  \n   27  ## Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1000 - anchor.md:\n    3  hidden: false\n    4  ---\n    5: An *anchor* is a string, [Match](doc:match) object, or array of Match objects. \n    6  \n    7  An anchor's behavior depends on its field's method:\n    .\n   52  | key                                             | values                                      | description                                                  |\n   53  | ----------------------------------------------- | ------------------------------------------- | ------------------------------------------------------------ |\n   54: | match (**required**, except for string anchors) | Match object or array of Match objects      | See [Match object](doc:match).                               |\n   55  | start                                           | string, Match object, or Match object array | Starts the search for the anchor's Match parameter and for its End parameter at a line of text in the document, and ignores all the text that precedes the start line. <br/> The terms \"preceding\" and \"succeeding\" primarily mean *above* and *below* the Start line, respectively. For more information, see [Line sorting](doc:lines#line-sorting).<br/>You can extract anchor output with the [Passthrough method](doc:passthrough). |\n   56  | end                                             | string, Match, or Match array               | Stops the search for the anchor's Match parameter before a line of text in the document.  Ignores the End line and all the text that succeeds the End line. <br/> The terms \"preceding\" and \"succeeding\" p... <skipped 45 characters> ...e, respectively. For more information, see [Line sorting](doc:lines#line-sorting).<br/>If unspecified, the anchor searches for matches to the end of the document.<br/>If you specify a Start line, Sensible searches for the End line starting at the Start line instead of at the start of the document. |\n   ..\n   91  ====\n   92  \n   93: For information about complex anchor syntax, see [Anchor variables](doc:anchor-nuances) and .[Match arrays](doc:match-arrays).\n   94  \n   95  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1000 - draft-named-anchor.md:\n    3  hidden: true\n    4  ---\n    5: An *anchor* is a string, [Match](doc:match) object, or array of Match objects. \n    6  \n    7  An anchor's behavior depends on its field's method:\n    .\n   85  | key                                             | values                                      | description                                                  |\n   86  | ----------------------------------------------- | ------------------------------------------- | ------------------------------------------------------------ |\n   87: | match (**required**, except for string anchors) | Match object or array of Match objects      | See [Match object](doc:match).                               |\n   88  | start                                           | string, Match object, or Match object array | Starts the search for the anchor's Match parameter and for its End parameter at a line of text in the document, and ignores all the text that precedes the start line. <br/> The terms \"preceding\" and \"succeeding\" primarily mean *above* and *below* the Start line, respectively. For more information, see [Line sorting](doc:lines#line-sorting).<br/>You can extract anchor output with the [Passthrough method](doc:passthrough). |\n   89  | end                                             | string, Match, or Match array               | Stops the search for the anchor's Match parameter before a line of text in the document.  Ignores the End line and all the text that succeeds the End line. <br/> The terms \"preceding\" and \"succeeding\" p... <skipped 45 characters> ...e, respectively. For more information, see [Line sorting](doc:lines#line-sorting).<br/>If unspecified, the anchor searches for matches to the end of the document.<br/>If you specify a Start line, Sensible searches for the End line starting at the Start line instead of at the start of the document. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n   35  | minimumHeight | number                  | The minimum height of the matched line's boundaries, in inches. |\n   36  | maximumHeight | number                  | The maximum height of the matched line's boundaries, in inches. |\n   37: <skipped 170 characters> ...ions](doc:sections).<br/>  If true, searches for a match in lines that precede the previous match in the array. For example, in an array with matches A and B, if B is a First match with `\"reverse\":true`, then Sensible matches the first line that *precedes* the line matched by A. For an example, see [Match arrays](doc:match-arrays#reverse-match). |\n   38  | xRangeFilter  | object                  | Defines a left-to-right range, or \"column\", in which to search for a match. This option excludes lines that partially fall outside the column.  Contains the following parameters:<br/>`minX` Specifies the left boundary of the range, in inches from the left edge of the page.<br/>`maxX` Specifies the right boundary of the range, in inches from the left edge of the page. |\n   39  \n   ..\n  293  ## Repeat match\n  294  \n  295: Finds the nth occurrence of a Match object. This is a more concise syntactical alternative to a [match array](doc:match-arrays).\n  296  \n  297  **Parameters**\n  ...\n  374  ===\n  375  \n  376: You can create complex matches by using any of the preceding match types in an array. For information, see [match arrays](doc:match-arrays).\n  377  \n  378  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   77  | --------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   78  | id (**required**)     | string                                                       | Sensible uses the ID as the key in the structured key/value output. In the API response, this output is in the `parsed_document` object.<br/><br/>If a field fails and returns null, you can specify a backup, or fallback field to target the same data with a different method. To specify fallbacks between fields, specify consecutive fields that use the same ID. For more information, see [Fallback fields](doc:fallbacks). | Same                                                         |\n   79: | anchor                | string, [Match object](doc:match), or array of Match objects | **Required**<br/> Matched text that narrows down the location of the target data to extract. <br/> For more information, see [Anchor object](doc:anchor). | **Optional** <br/>If the matched text is present anywhere in the document, Sensible runs the me... <skipped 115 characters> ...\n   80  | method (**required**) | object                                                       | Defines how to spatially expand out from the anchor and extract the target data. Use for documents that have a relatively consistent spatial layout. For example, 1040 forms have relatively consistent layout. For... <skipped 39 characters> ...thods](doc:layout-based-methods). | Describes the contents of the target data to extract in natural-language prompts for an LLM. Use for documents that have a relatively inconsistent spatial layout, for example, legal contracts. For more information, see [LLM-based methods](doc:llm-based-methods). |\n   81  | type                  | see [Types](doc:types)                                       | The data type to extract, for example, a currency, an address, or a custom type you define. This structured output includes the type information. If the field captures other data in addition to the data matching the type, Sensible suppresses the additional data from the output. For more information, see [Types](doc:types). | same                                                         |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - layout-based-methods\\1300 - document-range.md:\n   21  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   22  | id (**required**) | `documentRange`                                              | Optionally set `\"type\": \"paragraph\"` in the Field object to include newlines (`\\n`) in the output. |\n   23: | stop              | [Match object](doc:match) or array of Match objects. default: `none` | Stops extraction at the top boundary of the matched line. The matched line isn't included in the method output. If this parameter and the Num Lines parameter are unspecified, matches to the end of the document. |\n   24  | numLines          | integer.                                                     | Alternative to the Stop parameter. Extracts the specified number of lines succeeding the anchor. |\n   25  | includeAnchor     | boolean. default: `false`                                    | Includes the anchor line in the method output. If true, included in the total line count for the Num Lines parameter. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - layout-based-methods\\1400 - fixed-table.md:\n   26  | columnCount (**required**)      | integer                                                      | The number of columns the tables must have.                  |\n   27  | columns (**required**)          | array                                                        | An array of objects with the following parameters: <br/> -`id` (**required**): The ID for the column in the extraction output <br/> - `index` (**required**): The zero-based column index <br/>-`type` : ... <skipped 173 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   28: | stop                            | [Match object](doc:match) or array of Match objects. default: none | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Amazon Web Service  provider to perform table... <skipped 389 characters> ...\n   29  | startOnRow                      | integer. default: 0                                          | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n   30  | stopOnRow                       | integer                                                      | Zero-indexed row number of the last table row to include in the table extraction. For example, specify `\"stopOnRow:2\"` to return the first 3 rows. <br/>Use negative numbers to specify a stop row that's offset from the last row of the table, where `-1` specifies to include the last row.  For example,  specify `\"stopOnRow:-3\"` to return all rows except the last 2 rows of the table. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n   18  | ------------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)     | `deskew` |                                                    |\n   20: <skipped 406 characters> ...page. Choosing the best points can take trial and error. <br/>Contains an array of 3 objects, each containing the following parameters: <br/>-   `match` -  the text to match for a Fixed Point. Choose `\"type\": \"startsWith\"`  or `\"type\": \"endsWith\"` to avoid problems with lines oversplit by skew. See [Match object](doc:match) for more details.<br/>- `targetPosition` - contains  `x` and  `y` parameters that define the coordinates of the Fixed Points in inches relative to the 0,0 origin at the top left corner of the page. For more information about defining the positions, see the Examples section. |\n   21  | matchAll | Boolean. default: false | If true, deskews all pages containing the lines specified by the Fixed Points parameter. |\n   22  | start | `left` , `right`. default: `left` | Specifies whether the Fixed Point is at the upper-*left* corner of the anchor line's boundaries, or the upper-*right* corner. <br/>With a Match parameter of `\"type\": \"startsWith\"`, use `left`.<br/>With a Match parameter of `\"type\": \"endsWith\"`, use `right`. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1070 - ocr-preprocessor.md:\n   18  | ------------------------------------------------------------ | ------------------ | ------------------------------------------------------------ |\n   19  | type (**required**)                                          | `ocr`              |                                                              |\n   20: <skipped 188 characters> ...page after the heading \"Policy Addendums\" is always a scanned image, then you specify: <br>      `\"type\": \"ocr\"`,<br/>      `\"match\": \"policy addendums\",`<br/>      `\"pageOffset\": 1`<br/>If there are multiple text matches in the document, matches the first. To specify a second or later match, use a [Match array](doc:match-arrays).<br/> To OCR a single page offset from the first page of the document, rather than offset from matched text, specify `\"match\": { \"type\": \"first\" }`.<br/> |\n   21  | matchAll                                                     | boolean            | If true, OCRs all pages containing the line specified by the Match parameter. |\n   22  | pageLinesLimit                                               | integer            | Performs OCR on all pages containing the specified number of embedded text lines or fewer. Use this parameter to OCR pages for which no reliable text anchors exist. Sensible recommends specifying a small number relative to the typical number of page lines in the document type, since pages with a small number of embedded lines more likely contain text images.<br/> If you specify this in combination with a Match parameter, Sensible OCR all pages that meets any of the match criteria or the number of page lines criteria. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   21  | type (**required**) | `removeFooter` | For an example, see the Examples section. |\n   22  | startsOnPage | integer. default: 1 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   23: | match | [Match](doc:match) object or array of Match objects | Bypasses automatic footer recognition.<br/>Removes all text on the page below the bottom boundary of the matched line.<br>If Sensible doesn't find the match, it doesn't perform footer removal. |\n   24  | offsetY | number in inches. default: 0 | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the bottom of the page.<br>If used with the Match parameter, offsets from the bottom boundary of the matched line. <br/> |\n   25  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   19  | type (**required**) | `removeHeader`                                      | For an example, see the Examples section.                    |\n   20  | startsOnPage        | integer. default: 1                                 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   21: | match               | [Match](doc:match) object or array of Match objects | Bypasses automatic header recognition.<br/>Removes all text on the page above the top boundary of the matched line.<br/>If Sensible doesn't find the match, it doesn't perform header removal. |\n   22  | offsetY             | number in inches. default: 0                        | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the top of the page.<br/>If used with the Match parameter, offsets from the top boundary of the matched line. <br/> |\n   23  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1420 - rotate-page.md:\n   14  | ------------------- | --------------------------------------------------- | ------------------------------------------------------------ |\n   15  | type (**required**) | `rotatePage`                                        |                                                              |\n   16: | match               | [Match object](doc:match) or array of Match objects | Sensible rotates the page to ensure that text that matches this parameter is horizontal.  Sensible rotates the page by multiples of 90 degrees. If the page is affected by translation, shear, or other [affine transformations](https://homepages.inf.ed.ac... <skipped 127 characters> ...\n   17  | matchAll            | boolean                                             | If true, rotates all pages containing the line specified by the Match parameter. |\n   18  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n   20  | ------------------- | ---------------- | ------------------------------------------------------------ |\n   21  | type (**required**) | `scale`          |                                                              |\n   22: <skipped 375 characters> ...does not vary relative to other font heights in the document. For example, don't create a sample that can match to both a heading 1 and a heading 4 style.<br/>- Choose samples that appear on each page, such as headers or footers.<br/>Each example object has the following parameters:<br/> `match`: a [Match](doc:match) object<br/>`targetHeight`: the number in inches of the match at 100% scale. |\n   23  | perPage             | boolean          | If true, Sensible rescales each page individually against the Target Height parameter, taking the average of  all matches' heights on that page rather than in the whole document. For example, if a tax return contains multiple W-2 forms, but each W-2 can be scanned at an unpredictable scale, then you can set this parameter to true and match on text such as the `\"Wage and Tax\"` and the `W-2` titles in the W-2 form. |\n   24  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6700 - config-settings\\1000 - fingerprint.md:\n   25  ---\n   26  \n   27: A fingerprint consists of an array of tests, where each test is a string, a Match object, or array of Match objects. For more information, see [Match object](doc:match).\n   28  \n   29   Behind the scenes, Sensible automatically expands this simple syntax to syntax for portfolio fingerprints using `\"page\" : \"any\"`. \n   ..\n   90  | key                  | value                                                        | description for portfolios                                   |\n   91  | -------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   92: | match (**required**) | a string, a [Match object](doc:match), or array of Match objects. | Specifies the text to match for the test.                    |\n   93  | offset               | integer                                                      | Specifies where to start or end the document segment, offset in pages relative to the first or last page defined by the Match parameter. For example, if you specify that the page that contains the phrase \"A summary of your rights\" is the first page of a segment, and Sensible finds a match for the first page on the zero-indexed page 3 of a portfolio:<br/>- specifying `\"offset\": -1` starts the document segment on page 2 of the portfolio.<br/>- specifying `\"offset\": 1` starts the document segment on page 4 of the portfolio. |\n   94  | page                 | `first`, `last`, `every`, `any`                              | Configure with the following enums:<br/>`first` - The first page of a document segment must meet the match criteria. Use `first` to detect consecutive document segments of the same document type in a portfolio. I... <skipped 571 characters> ...es fail to segment the portfolio.<br/>**Notes:** <br/>- For an example see [Multi-document extraction](doc:portfolio). <br/>- If you reuse the same config between portfolios and standalone documents, then for standalone document extractions, Sensible ignores the configured value of this parameter. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-features\\2100 - deprecated-table.md:\n   28  | id (**required**)        | `table`                                             | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. See the Stop parameter for details about how Sensible recognizes a table. |\n   29  | columns (**required**)   | array                                               | An array of objects with the following parameters: <br/> -`id` (**required**): The id for the column in the extraction output. <br/>  -`terms` (**required**): An array of terms to score positively during column recogn... <skipped 507 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   30: | stop                     | [Match object](doc:match) or array of Match objects | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Amazon Web Service OCR  provider to perform table recognitio... <skipped 378 characters> ...\n   31  | startOnRow               | integer. default: 0                                 | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n   32  | detectTableStructureOnly | boolean. default: false                             | Set this parameter to true to troubleshoot optional character recognition (OCR) in a table. If true, Sensible bypasses the text output by the table recognition OCR provider. Sensible instead recognizes the table's text using the  [OCR engine](doc:ocr-engine) specified by your document type, or by using text embedded in the document file if present. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1800 - jsonlogic.md:\n   44  | [Log](doc:jsonlogic#log)                     | ✅                                       | ✅                                                    | ✅                                  |\n   45  | [Map Object](doc:jsonlogic#map-object)       | ✅                                       | ✅                                                    | ✅                                  |\n   46: | [Match](doc:jsonlogic#match)                 | ✅                                       | ✅                                                    | ✅                                  |\n   47  | [Merge Objects](doc:jsonlogic#merge-objects) | ✅                                       | ✅                                                    | ✅                                  |\n   48  | [Object](doc:jsonlogic#object)               | ✅                                       | ✅                                                    | ✅                                  |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3500 - match-arrays.md:\n    4  ---\n    5  \n    6: **Note:** If you're familiar with Sensible, this detailed topic is for you. If you're new to Sensible, see [match](doc:match).\n    7  \n    8  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\cheat\\3000 - cheat-3.md:\n  165  | [Document Range](doc:document-range) | A frequently used extraction method.                      |\n  166  | [Region](doc:region)                 | A frequently used extraction method.                      |\n  167: | [Match arrays](doc:match-arrays)     | Narrow down a match when multiple match candidates exist. |\n  168  \n  169  Initial config\n\n26 matches across 18 files\n",
			"settings":
			{
				"buffer_size": 51267,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "v0/senseml-reference/2000 - layout-based-methods/1450 - intersection.md",
			"settings":
			{
				"buffer_size": 8293,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAZIgAALS0tCnRpdGxlOiAiSW50ZXJzZWN0aW9uIgpoaWRkZW46IGZhbHNlCi0tLQpFeHRyYWN0cyBhIHRhcmdldCBsaW5lIGF0IHRoZSBpbnRlcnNlY3Rpb24gb2YgYSBsaW5lIGRlZmluZWQgYnkgYW4gYW5jaG9yLCBhbmQgYSBzZWNvbmQgbGluZSBkZWZpbmVkIGJ5IGEgc2Vjb25kIGFuY2hvcjoKCiFbQ2xpY2sgdG8gZW5sYXJnZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvaW1hZ2VzL2ZpbmFsL2ludGVyc2VjdGlvbl8xLnBuZykKCkZvciBleGFtcGxlLCB0aGUgSW50ZXJzZWN0aW9uIG1ldGhvZCBpcyBhbiBhbHRlcm5hdGl2ZSB0byB0aGUgUm93IG1ldGhvZCB3aGVuIGEgdGFibGUgY29udGFpbnMgb3B0aW9uYWxseSBlbXB0eSBjZWxscy4gIEEgcm93J3MgdGllYnJlYWtlciBjYW4gcmV0dXJuIGxpbmVzIGZyb20gdW5pbnRlbmRlZCBjb2x1bW5zIGlmIGNlbGxzIGFyZSB1bnByZWRpY3RhYmx5IHBvcHVsYXRlZC4KClsqKlBhcmFtZXRlcnMqKl0oZG9jOmludGVyc2VjdGlvbiNwYXJhbWV0ZXJzKQpbKipFeGFtcGxlcyoqXShkb2M6aW50ZXJzZWN0aW9uI2V4YW1wbGVzKQoKUGFyYW1ldGVycwo9PT09PQoKKipOb3RlOioqIEZvciBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgYXZhaWxhYmxlIGZvciB0aGlzIG1ldGhvZCwgc2VlIFtHbG9iYWwgcGFyYW1ldGVycyBmb3IgbWV0aG9kc10oZG9jOm1ldGhvZCNnbG9iYWwtcGFyYW1ldGVycy1mb3ItbWV0aG9kcykuIFRoZSBmb2xsb3dpbmcgdGFibGUgc2hvd3MgcGFyYW1ldGVycyBtb3N0IHJlbGV2YW50IHRvIG9yIHNwZWNpZmljIHRvIHRoaXMgbWV0aG9kLgoKCnwga2V5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdmFsdWUgICAgICAgICAgICAgICAgICAgICAgICB8IGRlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8CnwgaWQgKCoqcmVxdWlyZWQqKikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYGludGVyc2VjdGlvbmAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgdmVydGljYWxBbmNob3I8YnIvPm9yPGJyLz5ob3Jpem9udGFsQW5jaG9yICgqKnJlcXVpcmVkKiopIHwgQW5jaG9yIG9iamVjdCAgICAgICAgICAgICAgICB8IEFuIGFuY2hvciBvYmplY3QgdGhhdCBkZWZpbmVzIGFuIGludGVyc2VjdGlvbiB3aXRoIHRoZSBmaWVsZC1sZXZlbCBhbmNob3IuIFNlbnNpYmxlIGV4dHJhY3RzIGxpbmVzIHRoYXQgb3ZlcmxhcCB0byBhbnkgZXh0ZW50IHdpdGggdGhlIGludGVyc2VjdGlvbiBwb2ludCBvZiB0d28gcGVycGVuZGljdWxhciBsaW5lcyB0aGF0IGVhY2ggYmlzZWN0IG9uZSBvZiB0aGUgdHdvIGFuY2hvcnMuPGJyLz4gV2hlbiBob3Jpem9udGFsIGFuZCB2ZXJ0aWNhbCBhbmNob3JzIGFyZSBvbiBkaWZmZXJlbnQgcGFnZXMsIHRoZSBob3Jpem9udGFsIGFuY2hvciBkZXRlcm1pbmVzIHdoaWNoIHBhZ2UgU2Vuc2libGUgZmluZCB0aGUgYW5jaG9yIG9uLjxici8+VG8gZXh0cmFjdCBtdWx0aXBsZSBpbnRlcnNlY3Rpb25zIHVzaW5nIG9uZSBmaWVsZCwgc3BlY2lmeSBgIm1hdGNoIjoiYWxsImAgZm9yIHRoZSBhbmNob3IgYXQgdGhlIGZpZWxkIGxldmVsLiBGb3IgZXhhbXBsZXMsIHNlZSBleGFtcGxlcyAyIGFuZCAzLiB8Cnwgb2Zmc2V0WCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyIGluIGluY2hlcy4gZGVmYXVsdDogMCB8IEZvciB0aGUgYW5jaG9yIGJpc2VjdGVkIGJ5IGEgdmVydGljYWwgbGluZSwgb2Zmc2V0cyB0aGUgbGluZS4gICBQb3NpdGl2ZSB2YWx1ZXMgb2Zmc2V0IHRvIHRoZSByaWdodCwgbmVnYXRpdmUgdmFsdWVzIG9mZnNldCB0byB0aGUgbGVmdC4gfAp8IG9mZnNldFkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IG51bWJlciBpbiBpbmNoZXMuIGRlZmF1bHQ6IDAgfCBGb3IgdGhlIGFuY2hvciBiaXNlY3RlZCBieSBhIGhvcml6b250YWwgbGluZSwgb2Zmc2V0cyB0aGUgbGluZS4gUG9zaXRpdmUgdmFsdWVzIG9mZnNldCBkb3duIHRoZSBwYWdlLCBuZWdhdGl2ZSB2YWx1ZXMgb2Zmc2V0IHVwIHRoZSBwYWdlLiB8CnwgaGVpZ2h0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyIGluIGluY2hlcy4gZGVmYXVsdDogMCB8IFNwZWNpZmllcyB0byBjcmVhdGUgYSByZWN0YW5ndWxhciByZWdpb24gY2VudGVyZWQgYXQgdGhlIGludGVyc2VjdGlvbiBwb2ludC4gU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgY29udGFpbmVkIGluIHRoZSByZWdpb24uIEZvciB0aGUgZnVsbCBkZWZpbml0aW9uIG9mICJjb250YWluZWQsIiBzZWUgdGhlIFtSZWdpb25dKGRvYzpyZWdpb24pIG1ldGhvZC4gPGJyLz5JZiB5b3UgZG9uJ3Qgc3BlY2lmeSB0aGlzIHBhcmFtZXRlciwgU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgdGhhdCBvdmVybGFwIHRvIGFueSBleHRlbnQgd2l0aCB0aGUgaW50ZXJzZWN0aW9uIHBvaW50LiB8Cnwgd2lkdGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyIGluIGluY2hlcy4gZGVmYXVsdDogMCB8IFNwZWNpZmllcyB0byBjcmVhdGUgYSByZWN0YW5ndWxhciByZWdpb24gY2VudGVyZWQgYXQgdGhlIGludGVyc2VjdGlvbiBwb2ludC4gU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgY29udGFpbmVkIGluIHRoZSByZWdpb24uIEZvciB0aGUgZnVsbCBkZWZpbml0aW9uIG9mICJjb250YWluZWQsIiBzZWUgdGhlIFtSZWdpb25dKGRvYzpyZWdpb24pIG1ldGhvZC4gPGJyLz5JZiB5b3UgZG9uJ3Qgc3BlY2lmeSB0aGlzIHBhcmFtZXRlciwgU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgdGhhdCBvdmVybGFwIHRvIGFueSBleHRlbnQgd2l0aCB0aGUgaW50ZXJzZWN0aW9uIHBvaW50LiB8CnwgcGVyY2VudE92ZXJsYXBYICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyLiBkZWZhdWx0OiAwLjkgICAgICAgICB8IElmIHlvdSB1c2UgdGhlIFdpZHRoIG9yIEhlaWdodCBwYXJhbWV0ZXJzIHRvIGV4dHJhY3QgbGluZXMgY29udGFpbmVkIGluIGEgcmVnaW9uLCB0aGVuIHlvdSBjYW4gY29uZmlndXJlIHRoZSBzdHJpY3RuZXNzIG9mIHRoZSBjcml0ZXJpYSBieSB3aGljaCBhIHJlZ2lvbiAiY29udGFpbnMiIGEgbGluZSB1c2luZyB0aGlzIHBhcmFtZXRlci4gRm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjcml0ZXJpYSwgc2VlIHRoZSBbUmVnaW9uXShkb2M6cmVnaW9uKSBtZXRob2QuPGJyLz5Db25maWd1cmVzIHRoZSBwZXJjZW50IGJ5IHdoaWNoIGEgcmVnaW9uIGFuZCBsaW5lJ3MgeC1leHRhbnQgbXVzdCBvdmVybGFwIGluIG9yZGVyIGZvciBTZW5zaWJsZSB0byBkZXRlcm1pbmUgdGhhdCB0aGUgcmVnaW9uICJjb250YWlucyIgdGhlIGxpbmUuIEZvciBleGFtcGxlLCBpZiB5b3Ugc2V0IHRoaXMgcGFyYW1ldGVyIHRvIDAuNSwgdGhlbiBTZW5zaWJsZSBkZXRlcm1pbmVzIHRoYXQgYSByZWdpb24gY29udGFpbnMgYSBsaW5lIGlmIHRoZWlyIGJvdW5kYXJ5IGJveGVzIG92ZXJsYXAgYnkgbW9yZSB0aGFuIDUwJSAgb2YgdGhlIHNtYWxsZXIgb2YgdGhlIHR3bydzIHdpZHRoLiB8CnwgcGVyY2VudE92ZXJsYXBZICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyLiBkZWZhdWx0OiAwLjggICAgICAgICB8IElmIHlvdSB1c2UgdGhlIFdpZHRoIG9yIEhlaWdodCBwYXJhbWV0ZXJzIHRvIGV4dHJhY3QgbGluZXMgY29udGFpbmVkIGluIGEgcmVnaW9uLCB0aGVuIHlvdSBjYW4gY29uZmlndXJlIHRoZSBzdHJpY3RuZXNzIG9mIHRoZSBjcml0ZXJpYSBieSB3aGljaCBhIHJlZ2lvbiAiY29udGFpbnMiIGEgbGluZSB1c2luZyB0aGlzIHBhcmFtZXRlci4gRm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjcml0ZXJpYSwgc2VlIHRoZSBbUmVnaW9uXShkb2M6cmVnaW9uKSBtZXRob2QuPGJyLz5Db25maWd1cmVzIHRoZSBwZXJjZW50IGJ5IHdoaWNoIGEgcmVnaW9uIGFuZCBsaW5lJ3MgeS1leHRhbnQgbXVzdCBvdmVybGFwIGluIG9yZGVyIGZvciBTZW5zaWJsZSB0byBkZXRlcm1pbmUgdGhhdCB0aGUgcmVnaW9uICJjb250YWlucyIgdGhlIGxpbmUuIEZvciBleGFtcGxlLCBpZiB5b3Ugc2V0IHRoaXMgcGFyYW1ldGVyIHRvIDAuNCwgdGhlbiBTZW5zaWJsZSBkZXRlcm1pbmVzIHRoYXQgYSByZWdpb24gY29udGFpbnMgYSBsaW5lIGlmIHRoZWlyIGJvdW5kYXJ5IGJveGVzIG92ZXJsYXAgYnkgbW9yZSB0aGFuIDQwJSAgb2YgdGhlIHNtYWxsZXIgb2YgdGhlIHR3bydzIGhlaWdodC4gfAoKCkV4YW1wbGVzCj09PT09CgojIyMgRXhhbXBsZSAxOiBFbXB0eSBjZWxscyBpbiB0YWJsZXMKClRoZSBmb2xsb3dpbmcgZXhhbXBsZSBzaG93cyB1c2luZyB0aGUgSW50ZXJzZWN0aW9uIG1ldGhvZCB0byBleHRyYWN0IGEgY2VsbCBmcm9tIGEgdGFibGUgdGhhdCBoYXMgZW1wdHkgY2VsbHMuCgoqKkNvbmZpZyoqCgpgYGBqc29uCnsKICAiZmllbGRzIjogWwogICAgewogICAgICAiaWQiOiAiY29sXzNfY2VsbCIsCiAgICAgICJhbmNob3IiOiAiaXRlbSAxYiIsCiAgICAgICJtZXRob2QiOiB7CiAgICAgICAgImlkIjogImludGVyc2VjdGlvbiIsCiAgICAgICAgInZlcnRpY2FsQW5jaG9yIjogImNvbDMiLAogICAgICAgICJ3aWR0aCI6IDEuMiwKICAgICAgICAiaGVpZ2h0IjogMC40CiAgICAgIH0KICAgIH0KICBdCn0KYGBgCgoqKkV4YW1wbGUgZG9jdW1lbnQqKgoKVGhlIGZvbGxvd2luZyBpbWFnZSBzaG93cyB0aGUgZXhhbXBsZSBkb2N1bWVudCB1c2VkIHdpdGggdGhpcyBleGFtcGxlIGNvbmZpZzoKCiFbQ2xpY2sgdG8gZW5sYXJnZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvaW1hZ2VzL2ZpbmFsL2ludGVyc2VjdGlvbl8yLnBuZykKCnwgRXhhbXBsZSBkb2N1bWVudCB8IFtEb3dubG9hZCBsaW5rXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9wZGZzL2ludGVyc2VjdGlvbi5wZGYpIHwKfCAtLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8CgoqKk91dHB1dCoqCgpgYGBqc29uCnsKICAiY29sXzNfY2VsbCI6IHsKICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAidmFsdWUiOiAiSXRlbSAzYiIKICB9Cn0KYGBgCgoKCiMjIyBFeGFtcGxlIDI6IFZhcmlhYmxlIHRleHQgcG9zaXRpb25zCgpUaGUgZm9sbG93aW5nIGV4YW1wbGUgc2hvd3MgZXh0cmFjdGluZyB2YXJpYWJseSBwb3NpdGlvbmVkIGxpbmVzIGJ5IHJlbGF4aW5nIHRoZSBjcml0ZXJpYSBieSB3aGljaCBTZW5zaWJsZSBkZXRlcm1pbmVzIHRoYXQgYSByZWdpb24gYXQgdGhlIGludGVyc2VjdGlvbiBwb2ludCAiY29udGFpbnMiIGxpbmVzLgoKKipDb25maWcqKgoKYGBganNvbgp7CiAgImZpZWxkcyI6IFsKICAgIHsKICAgICAgImlkIjogImFfaW5zdXJlcnMiLAogICAgICAvKiBleHRyYWN0IHRleHQgYXQgdGhlIGludGVyc2VjdGlvbiBvZiAiaW5zdXJlciBhIgogICAgICAgICBhbmQgdGhlIHZlcnRpY2FsIGFuY2hvciAodGhlIEZJUlNUIGluc3RhbmNlIG9mICJuYWljIikgKi8KICAgICAgImFuY2hvciI6ICJpbnN1cmVyIGEiLAogICAgICAvKiBjcmVhdGUgYW4gaW50ZXJzZWN0aW9uIGZvciBlYWNoIGluc3RhbmNlIG9mICJpbnN1cmVyIGEiICovICAKICAgICAgIm1hdGNoIjogImFsbCIsCiAgICAgICJtZXRob2QiOiB7CiAgICAgICAgImlkIjogImludGVyc2VjdGlvbiIsCiAgICAgICAgInZlcnRpY2FsQW5jaG9yIjogIm5haWMiLAogICAgICAgIC8qIGNyZWF0ZSBhIHplcm8taGVpZ2h0LCAxIi13aWRlIHJlY3RhbmdsZSBhdCB0aGUKICAgICAgICAgICBpbnRlcnNlY3Rpb24gcG9pbnQgYW5kIGV4dHJhY3QgYWxsIGxpbmVzIHRoYXQgb3ZlcmxhcAogICAgICAgICAgIHdpdGggdGhlIHJlY3RhbmdsZSAgKi8KICAgICAgICAid2lkdGgiOiAxLAogICAgICAgICJoZWlnaHQiOiAwLAogICAgICAgIC8qIFNldHMgdGhlIHBlcmNlbnQgYnkgd2hpY2ggCiAgICAgICAgICAgdGhlIHJlY3RhbmdsZSdzIGFuZCB0aGUKICAgICAgICAgICBsaW5lJ3Mgd2lkdGhzIG11c3Qgb3ZlcmxhcCBpbiBvcmRlciB0byAKICAgICAgICAgICBleHRyYWN0IHRoZSBsaW5lLiAKICAgICAgICAgICBUbyBleHRyYWN0IHZhcmlhYmx5IHBvc2l0aW9uZWQgbGluZXMsCiAgICAgICAgICAgdGhpcyBjb25maWcgc3BlY2lmaWVzIGEgbG93ZXIgcGVyY2VudAogICAgICAgICAgIHRoYW4gdGhlIGRlZmF1bHQgKi8KICAgICAgICAicGVyY2VudE92ZXJsYXBYIjogMC41CiAgICAgIH0KICAgIH0KICBdCn0KYGBgCgoqKkV4YW1wbGUgZG9jdW1lbnQqKgpUaGUgZm9sbG93aW5nIGltYWdlIHNob3dzIHRoZSBleGFtcGxlIGRvY3VtZW50IHVzZWQgd2l0aCB0aGlzIGV4YW1wbGUgY29uZmlnOgoKIVtDbGljayB0byBlbmxhcmdlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9pbWFnZXMvZmluYWwvaW50ZXJzZWN0aW9uX3BlcmNlbnRfb3ZlcmxhcC5wbmcpCgp8IEV4YW1wbGUgZG9jdW1lbnQgfCBbRG93bmxvYWQgbGlua10oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvcGRmcy9pbnRlcnNlY3Rpb25fcGVyY2VudF9vdmVybGFwLnBkZikgfAp8IC0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAoKKipPdXRwdXQqKgoKYGBganNvbgp7CiAgImFfaW5zdXJlcnMiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIzOTk5MyIKICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIxNjUzNSIKICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICI3MjIyMiIKICAgIH0KICBdCn0KYGBgCgojIyMgRXhhbXBsZSAzOiBNdWx0aXBsZSBjZWxscyBpbiByb3cKClRoZSBmb2xsb3dpbmcgZXhhbXBsZSBzaG93cyB1c2luZyBhIGhvcml6b250YWwgYW5jaG9yIHRvIGV4dHJhY3QgbXVsdGlwbGUgY2VsbHMgZnJvbSBhIHJvdy4gVGhpcyBpcyBhbiBhbHRlcm5hdGl2ZSB3aGVuIGl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSB0aGUgW1Jvd10oZG9jOnJvdykgbWV0aG9kLgoKKipDb25maWcqKgoKYGBganNvbgp7CiAgImZpZWxkcyI6IFsKICAgIHsKICAgICAgImlkIjogIm1heF9saW1pdF9vcHRpb25zIiwKICAgICAgImFuY2hvciI6ICJvcHRpb24iLAogICAgICAvKiBjcmVhdGUgYW4gaW50ZXJzZWN0aW9uIGZvciBlYWNoIGluc3RhbmNlIG9mICJvcHRpb24iICovICAKICAgICAgIm1hdGNoIjogImFsbCIsCiAgICAgICJtZXRob2QiOiB7CiAgICAgICAgImlkIjogImludGVyc2VjdGlvbiIsCiAgICAgICAgImhvcml6b250YWxBbmNob3IiOiAibWF4aW11bSIsCiAgICAgICAgIndpZHRoIjogMS41LAogICAgICAgICJoZWlnaHQiOiAwLjUKICAgICAgfQogICAgfQogIF0KfQpgYGAKCioqRXhhbXBsZSBkb2N1bWVudCoqClRoZSBmb2xsb3dpbmcgaW1hZ2Ugc2hvd3MgdGhlIGV4YW1wbGUgZG9jdW1lbnQgdXNlZCB3aXRoIHRoaXMgZXhhbXBsZSBjb25maWc6CgohW0NsaWNrIHRvIGVubGFyZ2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zZW5zaWJsZS1ocS9zZW5zaWJsZS1kb2NzL21haW4vcmVhZG1lLXN5bmMvYXNzZXRzL3YwL2ltYWdlcy9maW5hbC9pbnRlcnNlY3Rpb25faG9yaXpvbnRhbC5wbmcpCgp8IEV4YW1wbGUgZG9jdW1lbnQgfCBbRG93bmxvYWQgbGlua10oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvcGRmcy9pbnRlcnNlY3Rpb25faG9yaXpvbnRhbC5wZGYpIHwKfCAtLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwKCioqT3V0cHV0KioKCmBgYGpzb24KewogICJtYXhfbGltaXRfb3B0aW9ucyI6IFsKICAgIHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInZhbHVlIjogIiQyTSIKICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJ2YWx1ZSI6ICIkM00iCiAgICB9CiAgXQp9CmBgYAoAAAAAAAAAAB0iAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtDwAAAAAAAC0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtDwAAAAAAAC0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACBIgAALS0tCnRpdGxlOiAiSW50ZXJzZWN0aW9uIgpoaWRkZW46IGZhbHNlCi0tLQpFeHRyYWN0cyBhIHRhcmdldCBsaW5lIGF0IHRoZSBpbnRlcnNlY3Rpb24gb2YgYSBsaW5lIGRlZmluZWQgYnkgYW4gYW5jaG9yLCBhbmQgYSBzZWNvbmQgbGluZSBkZWZpbmVkIGJ5IGEgc2Vjb25kIGFuY2hvcjoKCiFbQ2xpY2sgdG8gZW5sYXJnZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvaW1hZ2VzL2ZpbmFsL2ludGVyc2VjdGlvbl8xLnBuZykKCkZvciBleGFtcGxlLCB0aGUgSW50ZXJzZWN0aW9uIG1ldGhvZCBpcyBhbiBhbHRlcm5hdGl2ZSB0byB0aGUgUm93IG1ldGhvZCB3aGVuIGEgdGFibGUgY29udGFpbnMgb3B0aW9uYWxseSBlbXB0eSBjZWxscy4gIEEgcm93J3MgdGllYnJlYWtlciBjYW4gcmV0dXJuIGxpbmVzIGZyb20gdW5pbnRlbmRlZCBjb2x1bW5zIGlmIGNlbGxzIGFyZSB1bnByZWRpY3RhYmx5IHBvcHVsYXRlZC4KClsqKlBhcmFtZXRlcnMqKl0oZG9jOmludGVyc2VjdGlvbiNwYXJhbWV0ZXJzKQpbKipFeGFtcGxlcyoqXShkb2M6aW50ZXJzZWN0aW9uI2V4YW1wbGVzKQoKUGFyYW1ldGVycwo9PT09PQoKKipOb3RlOioqIEZvciBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgYXZhaWxhYmxlIGZvciB0aGlzIG1ldGhvZCwgc2VlIFtHbG9iYWwgcGFyYW1ldGVycyBmb3IgbWV0aG9kc10oZG9jOm1ldGhvZCNnbG9iYWwtcGFyYW1ldGVycy1mb3ItbWV0aG9kcykuIFRoZSBmb2xsb3dpbmcgdGFibGUgc2hvd3MgcGFyYW1ldGVycyBtb3N0IHJlbGV2YW50IHRvIG9yIHNwZWNpZmljIHRvIHRoaXMgbWV0aG9kLgoKCnwga2V5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdmFsdWUgICAgICAgICAgICAgICAgICAgICAgICB8IGRlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgOi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8CnwgaWQgKCoqcmVxdWlyZWQqKikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYGludGVyc2VjdGlvbmAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgdmVydGljYWxBbmNob3I8YnIvPm9yPGJyLz5ob3Jpem9udGFsQW5jaG9yICgqKnJlcXVpcmVkKiopIHwgQW5jaG9yIG9iamVjdCAgICAgICAgICAgICAgICB8IEFuIGFuY2hvciBvYmplY3QgdGhhdCBkZWZpbmVzIGFuIGludGVyc2VjdGlvbiB3aXRoIHRoZSBmaWVsZC1sZXZlbCBhbmNob3IuIFNlbnNpYmxlIGV4dHJhY3RzIGxpbmVzIHRoYXQgb3ZlcmxhcCB0byBhbnkgZXh0ZW50IHdpdGggdGhlIGludGVyc2VjdGlvbiBwb2ludCBvZiB0d28gcGVycGVuZGljdWxhciBsaW5lcyB0aGF0IGVhY2ggYmlzZWN0IG9uZSBvZiB0aGUgdHdvIGFuY2hvcnMuPGJyLz4gV2hlbiBob3Jpem9udGFsIGFuZCB2ZXJ0aWNhbCBhbmNob3JzIGFyZSBvbiBkaWZmZXJlbnQgcGFnZXMsIHRoZSBob3Jpem9udGFsIGFuY2hvciBkZXRlcm1pbmVzIHdoaWNoIHBhZ2UgU2Vuc2libGUgZmluZCB0aGUgYW5jaG9yIG9uLjxici8+VG8gZXh0cmFjdCBtdWx0aXBsZSBpbnRlcnNlY3Rpb25zIHVzaW5nIG9uZSBmaWVsZCwgc3BlY2lmeSBgIm1hdGNoIjoiYWxsImAgZm9yIHRoZSBhbmNob3IgYXQgdGhlIGZpZWxkIGxldmVsLiBGb3IgZXhhbXBsZXMsIHNlZSBleGFtcGxlcyAyIGFuZCAzLiB8Cnwgb2Zmc2V0WCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyIGluIGluY2hlcy4gZGVmYXVsdDogMCB8IEZvciB0aGUgYW5jaG9yIGJpc2VjdGVkIGJ5IGEgdmVydGljYWwgbGluZSwgb2Zmc2V0cyB0aGUgbGluZS4gICBQb3NpdGl2ZSB2YWx1ZXMgb2Zmc2V0IHRvIHRoZSByaWdodCwgbmVnYXRpdmUgdmFsdWVzIG9mZnNldCB0byB0aGUgbGVmdC4gfAp8IG9mZnNldFkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IG51bWJlciBpbiBpbmNoZXMuIGRlZmF1bHQ6IDAgfCBGb3IgdGhlIGFuY2hvciBiaXNlY3RlZCBieSBhIGhvcml6b250YWwgbGluZSwgb2Zmc2V0cyB0aGUgbGluZS4gUG9zaXRpdmUgdmFsdWVzIG9mZnNldCBkb3duIHRoZSBwYWdlLCBuZWdhdGl2ZSB2YWx1ZXMgb2Zmc2V0IHVwIHRoZSBwYWdlLiB8CnwgaGVpZ2h0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyIGluIGluY2hlcy4gZGVmYXVsdDogMCB8IFNwZWNpZmllcyB0byBjcmVhdGUgYSByZWN0YW5ndWxhciByZWdpb24gY2VudGVyZWQgYXQgdGhlIGludGVyc2VjdGlvbiBwb2ludC4gU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgY29udGFpbmVkIGluIHRoZSByZWdpb24uIEZvciB0aGUgZnVsbCBkZWZpbml0aW9uIG9mICJjb250YWluZWQsIiBzZWUgdGhlIFtSZWdpb25dKGRvYzpyZWdpb24pIG1ldGhvZC4gPGJyLz5JZiB5b3UgZG9uJ3Qgc3BlY2lmeSB0aGlzIHBhcmFtZXRlciwgU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgdGhhdCBvdmVybGFwIHRvIGFueSBleHRlbnQgd2l0aCB0aGUgaW50ZXJzZWN0aW9uIHBvaW50LiB8Cnwgd2lkdGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyIGluIGluY2hlcy4gZGVmYXVsdDogMCB8IFNwZWNpZmllcyB0byBjcmVhdGUgYSByZWN0YW5ndWxhciByZWdpb24gY2VudGVyZWQgYXQgdGhlIGludGVyc2VjdGlvbiBwb2ludC4gU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgY29udGFpbmVkIGluIHRoZSByZWdpb24uIEZvciB0aGUgZnVsbCBkZWZpbml0aW9uIG9mICJjb250YWluZWQsIiBzZWUgdGhlIFtSZWdpb25dKGRvYzpyZWdpb24pIG1ldGhvZC4gPGJyLz5JZiB5b3UgZG9uJ3Qgc3BlY2lmeSB0aGlzIHBhcmFtZXRlciwgU2Vuc2libGUgZXh0cmFjdHMgbGluZXMgdGhhdCBvdmVybGFwIHRvIGFueSBleHRlbnQgd2l0aCB0aGUgaW50ZXJzZWN0aW9uIHBvaW50LiB8CnwgcGVyY2VudE92ZXJsYXBYICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbnVtYmVyLiBkZWZhdWx0OiAwLjkgICAgICAgICB8IElmIHlvdSB1c2UgdGhlIFdpZHRoIG9yIEhlaWdodCBwYXJhbWV0ZXJzIHRvIGV4dHJhY3QgbGluZXMgY29udGFpbmVkIGluIGEgcmVnaW9uLCB0aGVuIHlvdSBjYW4gY29uZmlndXJlIHRoZSBzdHJpY3RuZXNzIG9mIHRoZSBjcml0ZXJpYSBieSB3aGljaCBhIHJlZ2lvbiAiY29udGFpbnMiIGEgbGluZSB1c2luZyB0aGlzIHBhcmFtZXRlci4gPGJyLz5CeSBkZWZhdWx0LCBTZW5zaWJsZSBkZXRlcm1pbmVzIHRoYXQgYSByZWdpb24gY29udGFpbnMgYSBsaW5lIGlmIHRoZWlyIHdpZHRocyBvdmVybGFwIGJ5IG1vcmUgdGhhbiA5MCUgIG9mIHRoZSBzbWFsbGVyIG9mIHRoZSB0d28ncyB3aWR0aC4gTG9vc2VuIHRoZSBjcml0ZXJpYSBpZiBhIGxpbmUgY2FuIHBhcnRseSBmYWxsIG91dHNpZGUgYSByZWdpb24uIEZvciBleGFtcGxlLCAgaWYgeW91IHNldCB0aGlzIHBhcmFtZXRlciB0byAwLjUsIHRoZW4gU2Vuc2libGUgZGV0ZXJtaW5lcyB0aGF0IGEgcmVnaW9uIGNvbnRhaW5zIGEgbGluZSBpZiB0aGVpciB3aWR0aHMgb3ZlcmxhcCBieSBtb3JlIHRoYW4gNTAlICBvZiB0aGUgc21hbGxlciBvZiB0aGUgdHdvJ3Mgd2lkdGguICBOb3RlIHRoZSBsaW5lIG11c3QgYWxzbyBtZWV0IHRoZSBQZXJjZW50IE92ZXJsYXAgWSBwYXJhbWV0ZXIncyBjcml0ZXJpYS4gfAp8IHBlcmNlbnRPdmVybGFwWSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IG51bWJlci4gZGVmYXVsdDogMC44ICAgICAgICAgfCBJZiB5b3UgdXNlIHRoZSBXaWR0aCBvciBIZWlnaHQgcGFyYW1ldGVycyB0byBleHRyYWN0IGxpbmVzIGNvbnRhaW5lZCBpbiBhIHJlZ2lvbiwgdGhlbiB5b3UgY2FuIGNvbmZpZ3VyZSB0aGUgc3RyaWN0bmVzcyBvZiB0aGUgY3JpdGVyaWEgYnkgd2hpY2ggYSByZWdpb24gImNvbnRhaW5zIiBhIGxpbmUgdXNpbmcgdGhpcyBwYXJhbWV0ZXIuPGJyLz5CeSBkZWZhdWx0LCBTZW5zaWJsZSBkZXRlcm1pbmVzIHRoYXQgYSByZWdpb24gY29udGFpbnMgYSBsaW5lIGlmIHRoZWlyIGhlaWdodHMgb3ZlcmxhcCBieSBtb3JlIHRoYW4gODAlICBvZiB0aGUgc21hbGxlciBvZiB0aGUgdHdvJ3MgaGVpZ2h0LiBMb29zZW4gdGhlIGNyaXRlcmlhIGlmIGEgbGluZSBjYW4gcGFydGx5IGZhbGwgb3V0c2lkZSBhIHJlZ2lvbi4gRm9yIGV4YW1wbGUsIGlmIHlvdSBzZXQgdGhpcyBwYXJhbWV0ZXIgdG8gMC40LCB0aGVuIFNlbnNpYmxlIGRldGVybWluZXMgdGhhdCBhIHJlZ2lvbiBjb250YWlucyBhIGxpbmUgaWYgdGhlaXIgaGVpZ2h0cyBvdmVybGFwIGJ5IG1vcmUgdGhhbiA0MCUgIG9mIHRoZSBzbWFsbGVyIG9mIHRoZSB0d28ncyBoZWlnaHQuIE5vdGUgdGhlIGxpbmUgbXVzdCBhbHNvIG1lZXQgdGhlIFBlcmNlbnQgT3ZlcmxhcCBYIHBhcmFtZXRlcidzIGNyaXRlcmlhLiB8CgoKRXhhbXBsZXMKPT09PT0KCiMjIyBFeGFtcGxlIDE6IEVtcHR5IGNlbGxzIGluIHRhYmxlcwoKVGhlIGZvbGxvd2luZyBleGFtcGxlIHNob3dzIHVzaW5nIHRoZSBJbnRlcnNlY3Rpb24gbWV0aG9kIHRvIGV4dHJhY3QgYSBjZWxsIGZyb20gYSB0YWJsZSB0aGF0IGhhcyBlbXB0eSBjZWxscy4KCioqQ29uZmlnKioKCmBgYGpzb24KewogICJmaWVsZHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJjb2xfM19jZWxsIiwKICAgICAgImFuY2hvciI6ICJpdGVtIDFiIiwKICAgICAgIm1ldGhvZCI6IHsKICAgICAgICAiaWQiOiAiaW50ZXJzZWN0aW9uIiwKICAgICAgICAidmVydGljYWxBbmNob3IiOiAiY29sMyIsCiAgICAgICAgIndpZHRoIjogMS4yLAogICAgICAgICJoZWlnaHQiOiAwLjQKICAgICAgfQogICAgfQogIF0KfQpgYGAKCioqRXhhbXBsZSBkb2N1bWVudCoqCgpUaGUgZm9sbG93aW5nIGltYWdlIHNob3dzIHRoZSBleGFtcGxlIGRvY3VtZW50IHVzZWQgd2l0aCB0aGlzIGV4YW1wbGUgY29uZmlnOgoKIVtDbGljayB0byBlbmxhcmdlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9pbWFnZXMvZmluYWwvaW50ZXJzZWN0aW9uXzIucG5nKQoKfCBFeGFtcGxlIGRvY3VtZW50IHwgW0Rvd25sb2FkIGxpbmtdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zZW5zaWJsZS1ocS9zZW5zaWJsZS1kb2NzL21haW4vcmVhZG1lLXN5bmMvYXNzZXRzL3YwL3BkZnMvaW50ZXJzZWN0aW9uLnBkZikgfAp8IC0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwKCioqT3V0cHV0KioKCmBgYGpzb24KewogICJjb2xfM19jZWxsIjogewogICAgInR5cGUiOiAic3RyaW5nIiwKICAgICJ2YWx1ZSI6ICJJdGVtIDNiIgogIH0KfQpgYGAKCgoKIyMjIEV4YW1wbGUgMjogVmFyaWFibGUgdGV4dCBwb3NpdGlvbnMKClRoZSBmb2xsb3dpbmcgZXhhbXBsZSBzaG93cyBleHRyYWN0aW5nIHZhcmlhYmx5IHBvc2l0aW9uZWQgbGluZXMgYnkgcmVsYXhpbmcgdGhlIGNyaXRlcmlhIGJ5IHdoaWNoIFNlbnNpYmxlIGRldGVybWluZXMgdGhhdCBhIHJlZ2lvbiBhdCB0aGUgaW50ZXJzZWN0aW9uIHBvaW50ICJjb250YWlucyIgbGluZXMuCgoqKkNvbmZpZyoqCgpgYGBqc29uCnsKICAiZmllbGRzIjogWwogICAgewogICAgICAiaWQiOiAiYV9pbnN1cmVycyIsCiAgICAgIC8qIGV4dHJhY3QgdGV4dCBhdCB0aGUgaW50ZXJzZWN0aW9uIG9mICJpbnN1cmVyIGEiCiAgICAgICAgIGFuZCB0aGUgdmVydGljYWwgYW5jaG9yICh0aGUgRklSU1QgaW5zdGFuY2Ugb2YgIm5haWMiKSAqLwogICAgICAiYW5jaG9yIjogImluc3VyZXIgYSIsCiAgICAgIC8qIGNyZWF0ZSBhbiBpbnRlcnNlY3Rpb24gZm9yIGVhY2ggaW5zdGFuY2Ugb2YgImluc3VyZXIgYSIgKi8gIAogICAgICAibWF0Y2giOiAiYWxsIiwKICAgICAgIm1ldGhvZCI6IHsKICAgICAgICAiaWQiOiAiaW50ZXJzZWN0aW9uIiwKICAgICAgICAidmVydGljYWxBbmNob3IiOiAibmFpYyIsCiAgICAgICAgLyogY3JlYXRlIGEgemVyby1oZWlnaHQsIDEiLXdpZGUgcmVjdGFuZ2xlIGF0IHRoZQogICAgICAgICAgIGludGVyc2VjdGlvbiBwb2ludCBhbmQgZXh0cmFjdCBhbGwgbGluZXMgdGhhdCBvdmVybGFwCiAgICAgICAgICAgd2l0aCB0aGUgcmVjdGFuZ2xlICAqLwogICAgICAgICJ3aWR0aCI6IDEsCiAgICAgICAgImhlaWdodCI6IDAsCiAgICAgICAgLyogU2V0cyB0aGUgcGVyY2VudCBieSB3aGljaCAKICAgICAgICAgICB0aGUgcmVjdGFuZ2xlJ3MgYW5kIHRoZQogICAgICAgICAgIGxpbmUncyB3aWR0aHMgbXVzdCBvdmVybGFwIGluIG9yZGVyIHRvIAogICAgICAgICAgIGV4dHJhY3QgdGhlIGxpbmUuIAogICAgICAgICAgIFRvIGV4dHJhY3QgdmFyaWFibHkgcG9zaXRpb25lZCBsaW5lcywKICAgICAgICAgICB0aGlzIGNvbmZpZyBzcGVjaWZpZXMgYSBsb3dlciBwZXJjZW50CiAgICAgICAgICAgdGhhbiB0aGUgZGVmYXVsdCAqLwogICAgICAgICJwZXJjZW50T3ZlcmxhcFgiOiAwLjUKICAgICAgfQogICAgfQogIF0KfQpgYGAKCioqRXhhbXBsZSBkb2N1bWVudCoqClRoZSBmb2xsb3dpbmcgaW1hZ2Ugc2hvd3MgdGhlIGV4YW1wbGUgZG9jdW1lbnQgdXNlZCB3aXRoIHRoaXMgZXhhbXBsZSBjb25maWc6CgohW0NsaWNrIHRvIGVubGFyZ2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zZW5zaWJsZS1ocS9zZW5zaWJsZS1kb2NzL21haW4vcmVhZG1lLXN5bmMvYXNzZXRzL3YwL2ltYWdlcy9maW5hbC9pbnRlcnNlY3Rpb25fcGVyY2VudF9vdmVybGFwLnBuZykKCnwgRXhhbXBsZSBkb2N1bWVudCB8IFtEb3dubG9hZCBsaW5rXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9wZGZzL2ludGVyc2VjdGlvbl9wZXJjZW50X292ZXJsYXAucGRmKSB8CnwgLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8CgoqKk91dHB1dCoqCgpgYGBqc29uCnsKICAiYV9pbnN1cmVycyI6IFsKICAgIHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInZhbHVlIjogIjM5OTkzIgogICAgfSwKICAgIHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInZhbHVlIjogIjE2NTM1IgogICAgfSwKICAgIHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInZhbHVlIjogIjcyMjIyIgogICAgfQogIF0KfQpgYGAKCiMjIyBFeGFtcGxlIDM6IE11bHRpcGxlIGNlbGxzIGluIHJvdwoKVGhlIGZvbGxvd2luZyBleGFtcGxlIHNob3dzIHVzaW5nIGEgaG9yaXpvbnRhbCBhbmNob3IgdG8gZXh0cmFjdCBtdWx0aXBsZSBjZWxscyBmcm9tIGEgcm93LiBUaGlzIGlzIGFuIGFsdGVybmF0aXZlIHdoZW4gaXQncyBub3QgcG9zc2libGUgdG8gdXNlIHRoZSBbUm93XShkb2M6cm93KSBtZXRob2QuCgoqKkNvbmZpZyoqCgpgYGBqc29uCnsKICAiZmllbGRzIjogWwogICAgewogICAgICAiaWQiOiAibWF4X2xpbWl0X29wdGlvbnMiLAogICAgICAiYW5jaG9yIjogIm9wdGlvbiIsCiAgICAgIC8qIGNyZWF0ZSBhbiBpbnRlcnNlY3Rpb24gZm9yIGVhY2ggaW5zdGFuY2Ugb2YgIm9wdGlvbiIgKi8gIAogICAgICAibWF0Y2giOiAiYWxsIiwKICAgICAgIm1ldGhvZCI6IHsKICAgICAgICAiaWQiOiAiaW50ZXJzZWN0aW9uIiwKICAgICAgICAiaG9yaXpvbnRhbEFuY2hvciI6ICJtYXhpbXVtIiwKICAgICAgICAid2lkdGgiOiAxLjUsCiAgICAgICAgImhlaWdodCI6IDAuNQogICAgICB9CiAgICB9CiAgXQp9CmBgYAoKKipFeGFtcGxlIGRvY3VtZW50KioKVGhlIGZvbGxvd2luZyBpbWFnZSBzaG93cyB0aGUgZXhhbXBsZSBkb2N1bWVudCB1c2VkIHdpdGggdGhpcyBleGFtcGxlIGNvbmZpZzoKCiFbQ2xpY2sgdG8gZW5sYXJnZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvaW1hZ2VzL2ZpbmFsL2ludGVyc2VjdGlvbl9ob3Jpem9udGFsLnBuZykKCnwgRXhhbXBsZSBkb2N1bWVudCB8IFtEb3dubG9hZCBsaW5rXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9wZGZzL2ludGVyc2VjdGlvbl9ob3Jpem9udGFsLnBkZikgfAp8IC0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAoKKipPdXRwdXQqKgoKYGBganNvbgp7CiAgIm1heF9saW1pdF9vcHRpb25zIjogWwogICAgewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAidmFsdWUiOiAiJDJNIgogICAgfSwKICAgIHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInZhbHVlIjogIiQzTSIKICAgIH0KICBdCn0KYGBgCgAAAAAAAAAAZSAAAAAAAAAAAAAAAAAAAAAAAABlIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtDwAAAAAAAC0PAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABRAAAATk9URVM6Ci0gd2luZG93cyBjb3BpbG90IHNlZW1zIG5vdCB3b3J0aCBpdC4gY2FuJ3QgZG8gZGlyZWN0IGZpbGUgbWFuaXB1bGF0aW9uCgoK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAFEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABzAAAATk9URVM6Ci0gd2luZG93cyBjb3BpbG90IHNlZW1zIG5vdCB3b3J0aCBpdC4gY2FuJ3QgZG8gZGlyZWN0IGZpbGUgbWFuaXB1bGF0aW9uCgpsYXN0IHRpbWUgSSBib3VnaHQgYSBsYXB0b3Agd2FzIAoKCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAHMAAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ui:",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js",
		"/C/Users/franc/Documents/GitHub/sensible-api-py"
	],
	"file_history":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1500 - query-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6000 - computed-field-methods/1000 - concatenate.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6000 - computed-field-methods/1350 - pick-values.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6000 - computed-field-methods/1450 - suppress-output.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6000 - computed-field-methods/1500 - zip.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6550 - conditional.md",
		"/C/Users/franc/Downloads/cell-row-llm.json",
		"/C/Users/franc/Downloads/@horacio-penya no, RE post-processing I thought th",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/2000 - getting-started-ai.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/2000 - draft-getting-started-ai.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/00 - draft-processor.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1800 - jsonlogic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1600 -  fallbacks.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/1000 - senseml-reference-introduction.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0600 - custom-computation.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1600 - deprecated-summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1055 - multicolumn.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/email.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/email extraction/1000 - getting-started-email.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/1000 - getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/5000 - best-practices/draft-fallback-configs.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/3000 - quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/wip/check_links_lychee.yaml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7600 - postprocessor.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/1000 - fingerprint-mode.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/monitor-and-qa/4000 - validate-extractions.md",
		"/C/Users/franc/Downloads/fallback tests.txt",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1560 - coverage.md",
		"/C/Users/franc/Downloads/rework documentInPortfolio",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/0000 - jsonlogic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/0000 - postprocessor.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/0300 - accuracy-measures.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/0350 - prompt.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/1000 - overview.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/4600 - table-methods.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6700 - config-settings/1000 - fingerprint.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/3000 - portfolio.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/6000 - author.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1550 - devops-platform.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/monitor-and-qa/0310 - metrics.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/2000 - zapier-tutorial-2.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/1000 - zapier-getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/document-type-classification/1000 - classify.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/2100 - api-tutorial-async-2.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/2000 - api-tutorial-async-1.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/1000 - api-tutorial-sync.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/3000 - draft-portfolio.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/5000 - best-practices/3000 - confidence.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1600 - summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/5000 - best-practices/0200 - troubleshoot-llms.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/cheat/4000 - cheat-4.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1200 - method.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/monitoring-and-qa/4000 - validate-extractions.md",
		"/C/Users/franc/Downloads/new_toc",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1200 - page-range.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/monitoring-and-qa/0310 - metrics.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/4000 - quality-control.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/2000 - deprecated-topic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/2000 - deprecated-tfidf.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1500 - deprecated-invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1000 - deprecated-key-value.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1060 - nlp.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/5000 - best-practices/1000 - performance.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1400 - fixed-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2200 - text-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1500 - deprecated-query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1100 - deprecated-page-filter.md",
		"/C/Users/franc/Downloads/old_toc",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/3000 - portfolio.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/prompt-tips/1000 - query-group-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/prompt-tips/2000 - list-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/prompt-tips/3000 - table-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/style_images.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/style_images.sh",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0100 - add-computed-fields.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/3700 - ocr.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/3000 - prompt.md",
		"/C/Users/franc/Documents/GitHub/test-docs/mint.json",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_configuration.yml",
		"/C/Users/franc/Documents/GitHub/test-mintlify/.github/workflows/check_links.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/2000 - ocr-engine.md",
		"/C/Users/franc/Documents/GitHub/test-mintlify/mint.json",
		"/C/Users/franc/Documents/GitHub/docs/snippets/param1.md",
		"/C/Users/franc/Documents/GitHub/docs/snippets/snippet1.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/1000 - query-group-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/3000 - table-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2200 - draft-text-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1300 - document-range.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/sync_dev_guides_readme.yml",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/.gitignore",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1300 - types.md",
		"/C/Users/franc/Documents/GitHub/docs/mint.json",
		"/C/Users/franc/Documents/GitHub/bekindtoyourspine/CNAME",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1000 - box.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1500 - deprecated-invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/7600 - excel-reference.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - performance.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/00 - draft-overview.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1500 - deprecated-query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - query-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/1000 - getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/3000 - confidence.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2000 - deprecated-tfidf.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1000 - deprecated-key-value.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1100 - page-filter.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/2000 - topic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1500 - invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1600 - summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/readme.md"
	],
	"find":
	{
		"height": 32.0
	},
	"find_in_files":
	{
		"height": 125.6,
		"where_history":
		[
			"*.md, *.yaml, *.yml, *.txt",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"<open files>",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\, C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0; C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"[match",
			"source_ids",
			"source_id",
			"sourceIDs",
			"overlapy",
			"#chain",
			"y-group#example-chain-prompts-with-regex",
			"doc:query-group#chain-prompts-with-regex",
			"#chain",
			"\"list\"",
			"\"pattern",
			"query",
			"trees_pr",
			"\"queryGr",
			"list_instr",
			"ui_prompt_i",
			"nlp_table_inst",
			"senseml_basics",
			"sensible_instruct_basics",
			"senseml_basics",
			"_basics",
			"postprocessed",
			"postprocessedout",
			"pixel",
			"file-ty",
			"tiff",
			"pixel",
			"a score as follow",
			"classificationS",
			"classification_score",
			"classification",
			"average of all su",
			"validationsummaryp",
			"CoveragePortfolio",
			"approved",
			"webhook:",
			"webhook",
			"ExtractionSingleResponse",
			"RetrievalRe\nExtractionSingleResponse",
			"retrievalre",
			"reviewStatuses",
			"environment",
			"environmentresponse:",
			"environment:",
			"evironment:",
			"EnvironmentName:",
			"Environment:",
			"coverageport",
			"CoveragePortfoli",
			"environment:",
			"Environment:",
			"CoveragePortfolio:",
			"ValidationSummaryPortfolio:",
			"Environment",
			"CoveragePortfolio",
			"portfoliobase",
			"retrievalre",
			"documentinport",
			"reviewstatuses",
			"ReviewStatuses",
			"reviewstatuses",
			"types:",
			"validationssummary",
			"validationsummary",
			"Types:",
			"/coverage",
			"coverage",
			"validationssum",
			"validation_s",
			"retrievalr",
			"types:",
			"ExtractionSingleRetrievalResponse",
			"documents/{id}",
			"portfolio",
			"postproc",
			"extractioncontent",
			"extractioncontent:",
			"ExtractionContent",
			"ExtractionContentPortfolio",
			"postprocess",
			"type: object",
			"charged:",
			"custom-com",
			"jsonlogic",
			"(doc:custom-computation)",
			"(https://jsonlogic.com/)",
			"jsonlogic",
			"jsonlgoic",
			"draft-json",
			" ](",
			" )[",
			"types:",
			"DocumentTypeNames",
			"the document types cont",
			"llm example",
			"tax.*?form",
			"tax.*?f",
			"tax",
			"tax_f",
			"  ",
			"tax",
			"tax.*?forms",
			"configuration-library",
			"results like",
			"(doc:jsonlogi",
			"(doc:table-tips)",
			"(doc:nlp-table-tips)",
			"(doc:query-group-tips)",
			"(doc:list-tips)",
			"[List method](doc:list-tips)",
			"list-tips",
			"prompt-tips",
			"prompt tips",
			"a *full",
			"https://github.com/sensible-hq/sensible-configuration-library/",
			"(doc:test-before-",
			"testing before",
			"Using fallbacks](doc:fallbacks)",
			"using fallbacks",
			"doc:methods",
			"(doc:human-review",
			"(human-review",
			"[human-review",
			"[Reviewing extractions](doc:human-review)",
			"reviewing extractions",
			"prompt-tips",
			"[Choosing a table method](doc:table-methods)",
			"choosing a table method]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"#example-chain",
			"doc:query-group#example-chain-prompts-with-regex",
			"layout_basics",
			"llm_basics",
			"layout_basics",
			"(doc:jsonlogic)",
			"json",
			"(doc:nlp-table)",
			"(doc:query-group)",
			"(doc:list)",
			"[List method](doc:list)",
			"Fallback strategies](doc:fallbacks)",
			"[Human review](doc:human-review)",
			"[Table methods](doc:table-methods)",
			"[Monitoring extraction metrics](doc:metrics)",
			"Advanced LLM prompt configuration](doc:prompt",
			"doc:deprecated-bag-of-words",
			"!",
			"doc:deprecated-invoice",
			"LLM-based",
			"large language",
			"[LLM-based methods](doc:llm-based-methods)",
			"doc:llm-based-methods",
			"Query Group method",
			"(doc:query-group#",
			"[Query Group](doc:query-group#",
			"[Query Group](doc:query-group-tips)",
			"[Query Group](doc:query-group)",
			"model",
			"insurer",
			"**Publish configuration**",
			"from sensibleapi",
			"index.py",
			"Python",
			"size and types",
			"https://github.com/sensible-hq/sensible-api-js#readme",
			"Node",
			"node",
			"-node",
			"node",
			"Node",
			"node",
			"doc:config-settings"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 51267,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										278,
										288
									],
									[
										660,
										670
									],
									[
										801,
										811
									],
									[
										979,
										989
									],
									[
										1138,
										1148
									],
									[
										1274,
										1284
									],
									[
										1424,
										1434
									],
									[
										1702,
										1712
									],
									[
										2763,
										2773
									],
									[
										3405,
										3415
									],
									[
										4690,
										4700
									],
									[
										4825,
										4835
									],
									[
										4961,
										4971
									],
									[
										5105,
										5115
									],
									[
										5346,
										5356
									],
									[
										5546,
										5556
									],
									[
										5686,
										5696
									],
									[
										5872,
										5882
									],
									[
										6015,
										6025
									],
									[
										6189,
										6199
									],
									[
										6523,
										6533
									],
									[
										6688,
										6698
									],
									[
										7000,
										7010
									],
									[
										7150,
										7160
									],
									[
										8219,
										8229
									],
									[
										8861,
										8871
									],
									[
										10149,
										10159
									],
									[
										10354,
										10364
									],
									[
										10658,
										10668
									],
									[
										10830,
										10840
									],
									[
										11211,
										11221
									],
									[
										11472,
										11482
									],
									[
										11809,
										11819
									],
									[
										11977,
										11987
									],
									[
										12307,
										12317
									],
									[
										12850,
										12860
									],
									[
										13179,
										13189
									],
									[
										13583,
										13593
									],
									[
										14143,
										14153
									],
									[
										14577,
										14587
									],
									[
										15709,
										15719
									],
									[
										15871,
										15881
									],
									[
										16049,
										16059
									],
									[
										16573,
										16583
									],
									[
										17144,
										17154
									],
									[
										17521,
										17531
									],
									[
										18051,
										18061
									],
									[
										18372,
										18382
									],
									[
										18634,
										18644
									],
									[
										18797,
										18807
									],
									[
										18949,
										18959
									],
									[
										19099,
										19109
									],
									[
										19244,
										19254
									],
									[
										19625,
										19635
									],
									[
										20082,
										20092
									],
									[
										20254,
										20264
									],
									[
										20593,
										20603
									],
									[
										20766,
										20776
									],
									[
										21129,
										21139
									],
									[
										21330,
										21340
									],
									[
										21687,
										21697
									],
									[
										22012,
										22022
									],
									[
										22180,
										22190
									],
									[
										22477,
										22487
									],
									[
										22677,
										22687
									],
									[
										23021,
										23031
									],
									[
										23279,
										23289
									],
									[
										23435,
										23445
									],
									[
										24421,
										24427
									],
									[
										24745,
										24751
									],
									[
										25260,
										25266
									],
									[
										25711,
										25717
									],
									[
										26284,
										26290
									],
									[
										27640,
										27646
									],
									[
										27889,
										27895
									],
									[
										28462,
										28468
									],
									[
										30384,
										30390
									],
									[
										31005,
										31011
									],
									[
										31207,
										31213
									],
									[
										32217,
										32223
									],
									[
										34192,
										34198
									],
									[
										35862,
										35868
									],
									[
										37721,
										37727
									],
									[
										39250,
										39256
									],
									[
										40788,
										40794
									],
									[
										42109,
										42115
									],
									[
										43241,
										43247
									],
									[
										44435,
										44441
									],
									[
										45304,
										45310
									],
									[
										45844,
										45850
									],
									[
										48301,
										48307
									],
									[
										49940,
										49946
									],
									[
										50754,
										50760
									],
									[
										51110,
										51116
									],
									[
										51267,
										51267
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								24419,
								24472
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 6,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 12351.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "v0/senseml-reference/2000 - layout-based-methods/1450 - intersection.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8293,
						"regions":
						{
						},
						"selection":
						[
							[
								3885,
								3885
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1009.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"pinned_build_system": "",
	"project": "f_project.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"postpr",
				"sensible-docs\\readme-sync\\v0\\senseml-reference\\7600 - postprocessor.md"
			],
			[
				"api-tutorial",
				"sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\index.md"
			],
			[
				"draft",
				"sensible-docs\\readme-sync\\v0\\data-extraction\\3000 - draft-portfolio.md"
			],
			[
				"overview",
				"sensible-docs\\readme-sync\\v0\\welcome\\1000 - overview.md"
			],
			[
				"classi",
				"sensible-docs\\readme-sync\\v0\\document-type-classification\\1000 - classify.md"
			],
			[
				"",
				"Find Results"
			],
			[
				"metric",
				"sensible-docs\\readme-sync\\v0\\monitoring-and-qa\\0310 - metrics.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 257.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 285.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
