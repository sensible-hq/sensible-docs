{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
			"settings":
			{
				"buffer_size": 1924884,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAACUDAAAAAAAAJgMAAAAAAAAAAAAAJgMAAAAAAAAnAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUDAAAAAAAAJQMAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "  /extra"
					},
					"CAAAACYDAAAAAAAAJwMAAAAAAAAAAAAAJwMAAAAAAAAoAwAAAAAAAAAAAAAoAwAAAAAAACkDAAAAAAAAAAAAACkDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAuAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYDAAAAAAAAJgMAAAAAAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "ct/bulk"
					},
					"BwAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4DAAAAAAAALgMAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					3,
					"left_delete",
					null,
					"AwAAADQDAAAAAAAANAMAAAAAAAABAAAAazMDAAAAAAAAMwMAAAAAAAABAAAAbDIDAAAAAAAAMgMAAAAAAAABAAAAdQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUDAAAAAAAANQMAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "atch/"
					},
					"BQAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIDAAAAAAAAMgMAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADcDAAAAAAAAOQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcDAAAAAAAANwMAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "batch_d"
					},
					"BwAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgDAAAAAAAAOAMAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAD4DAAAAAAAAPwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4DAAAAAAAAPgMAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEEDAAAAAAAAQgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEDAAAAAAAAQQMAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABFAwAAAAAAAAAAAABFAwAAAAAAAEcDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIDAAAAAAAAQgMAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "  post:"
					},
					"BwAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAABHAwAAAAAAAEgDAAAAAAAAAAAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAABKAwAAAAAAAEsDAAAAAAAAAAAAAEsDAAAAAAAATAMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUDAAAAAAAARQMAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					10,
					"left_delete",
					null,
					"CgAAAEADAAAAAAAAQAMAAAAAAAABAAAAfT8DAAAAAAAAPwMAAAAAAAABAAAAZD4DAAAAAAAAPgMAAAAAAAABAAAAaT0DAAAAAAAAPQMAAAAAAAABAAAAXzwDAAAAAAAAPAMAAAAAAAABAAAAaDsDAAAAAAAAOwMAAAAAAAABAAAAYzoDAAAAAAAAOgMAAAAAAAABAAAAdDkDAAAAAAAAOQMAAAAAAAABAAAAYTgDAAAAAAAAOAMAAAAAAAABAAAAYjcDAAAAAAAANwMAAAAAAAABAAAAew",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEDAAAAAAAAQQMAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAADYDAAAAAAAANgMAAAAAAAABAAAALw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcDAAAAAAAANwMAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABIAwAAAAAAAAAAAABIAwAAAAAAAEoDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMDAAAAAAAAQwMAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"paste",
					null,
					"AQAAAEoDAAAAAAAApQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoDAAAAAAAASgMAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					4,
					"left_delete",
					null,
					"BAAAAE4DAAAAAAAATgMAAAAAAAACAAAAICBMAwAAAAAAAEwDAAAAAAAAAgAAACAgSgMAAAAAAABKAwAAAAAAAAIAAAAgIEgDAAAAAAAASAMAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFADAAAAAAAAUAMAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgDAAAAAAAASAMAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "gen"
					},
					"BAAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABYAwAAAAAAABwAAABleHRyYWN0LWRhdGEtZnJvbS1hLWRvY3VtZW50WAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcDAAAAAAAAcwMAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					3,
					"left_delete",
					null,
					"AwAAAFkDAAAAAAAAWQMAAAAAAAABAAAAblgDAAAAAAAAWAMAAAAAAAABAAAAZVcDAAAAAAAAVwMAAAAAAAABAAAAZw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoDAAAAAAAAWgMAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "create-bat"
					},
					"CgAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAABcAwAAAAAAAF0DAAAAAAAAAAAAAF0DAAAAAAAAXgMAAAAAAAAAAAAAXgMAAAAAAABfAwAAAAAAAAAAAABfAwAAAAAAAGADAAAAAAAAAAAAAGADAAAAAAAAYQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcDAAAAAAAAVwMAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "ch-id"
					},
					"BQAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAGQDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAABmAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEDAAAAAAAAYQMAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					3,
					"left_delete",
					null,
					"AwAAAGUDAAAAAAAAZQMAAAAAAAABAAAAZGQDAAAAAAAAZAMAAAAAAAABAAAAaWMDAAAAAAAAYwMAAAAAAAABAAAALQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYDAAAAAAAAZgMAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "Create"
					},
					"BwAAAHMDAAAAAAAAdAMAAAAAAAAAAAAAdAMAAAAAAAB0AwAAAAAAABwAAABFeHRyYWN0IGRhdGEgZnJvbSBhIGRvY3VtZW50dAMAAAAAAAB1AwAAAAAAAAAAAAB1AwAAAAAAAHYDAAAAAAAAAAAAAHYDAAAAAAAAdwMAAAAAAAAAAAAAdwMAAAAAAAB4AwAAAAAAAAAAAAB4AwAAAAAAAHkDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8DAAAAAAAAcwMAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAHkDAAAAAAAAegMAAAAAAAAAAAAAegMAAAAAAAB7AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkDAAAAAAAAeQMAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " batch"
					},
					"BgAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAfwMAAAAAAACAAwAAAAAAAAAAAACAAwAAAAAAAIEDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsDAAAAAAAAewMAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAIEDAAAAAAAAggMAAAAAAAAAAAAAggMAAAAAAACDAwAAAAAAAAAAAACDAwAAAAAAAIQDAAAAAAAAAAAAAIQDAAAAAAAAhQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEDAAAAAAAAgQMAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " grouping"
					},
					"CQAAAIUDAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAACHAwAAAAAAAAAAAACHAwAAAAAAAIgDAAAAAAAAAAAAAIgDAAAAAAAAiQMAAAAAAAAAAAAAiQMAAAAAAACKAwAAAAAAAAAAAACKAwAAAAAAAIsDAAAAAAAAAAAAAIsDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACNAwAAAAAAAAAAAACNAwAAAAAAAI4DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUDAAAAAAAAhQMAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " extractions"
					},
					"DAAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAACWAwAAAAAAAJcDAAAAAAAAAAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACZAwAAAAAAAAAAAACZAwAAAAAAAJoDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4DAAAAAAAAjgMAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " by"
					},
					"AwAAAJoDAAAAAAAAmwMAAAAAAAAAAAAAmwMAAAAAAACcAwAAAAAAAAAAAACcAwAAAAAAAJ0DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoDAAAAAAAAmgMAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ4DAAAAAAAAnwMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4DAAAAAAAAngMAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"paste",
					null,
					"AQAAAJ8DAAAAAAAArQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8DAAAAAAAAnwMAAAAAAAAAAAAAAADwvw"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "    "
					},
					"BAAAAJ8DAAAAAAAAoAMAAAAAAAAAAAAAoAMAAAAAAAChAwAAAAAAAAAAAAChAwAAAAAAAKIDAAAAAAAAAAAAAKIDAAAAAAAAowMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8DAAAAAAAAnwMAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALEDAAAAAAAAsgMAAAAAAAAAAAAAsgMAAAAAAAC2AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEDAAAAAAAAsQMAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAALYDAAAAAAAAtwMAAAAAAAAAAAAAtwMAAAAAAAC4AwAAAAAAAAAAAAC4AwAAAAAAALkDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYDAAAAAAAAtgMAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALoDAAAAAAAAuwMAAAAAAAAAAAAAsgMAAAAAAACyAwAAAAAAAAcAAAAgICAgICAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoDAAAAAAAAugMAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "      "
					},
					"BgAAALIDAAAAAAAAswMAAAAAAAAAAAAAswMAAAAAAAC0AwAAAAAAAAAAAAC0AwAAAAAAALUDAAAAAAAAAAAAALUDAAAAAAAAtgMAAAAAAAAAAAAAtgMAAAAAAAC3AwAAAAAAAAAAAAC3AwAAAAAAALgDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIDAAAAAAAAsgMAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"paste",
					null,
					"AQAAALgDAAAAAAAA4gMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgDAAAAAAAAuAMAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIDAAAAAAAA4gMAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"cut",
					null,
					"AQAAACUDAAAAAAAAJQMAAAAAAAC+AAAACiAgL2V4dHJhY3QvYmF0Y2g6CiAgICBwb3N0OiAgCiAgICAgIG9wZXJhdGlvbklkOiBjcmVhdGUtYmF0Y2gKICAgICAgc3VtbWFyeTogQ3JlYXRlIGEgYmF0Y2ggZm9yIGdyb3VwaW5nIGV4dHJhY3Rpb25zIGJ5CgogICAgZGVzY3JpcHRpb246IHwKICAgICAgQ3JlYXRlIGEgYmF0Y2ggZm9yIGdyb3VwaW5nIGV4dHJhY3Rpb25zIGJ5Lg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUDAAAAAAAA4wMAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\n\n\n\n\n"
					},
					"BQAAACUDAAAAAAAAJgMAAAAAAAAAAAAAJgMAAAAAAAAnAwAAAAAAAAAAAAAnAwAAAAAAACgDAAAAAAAAAAAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUDAAAAAAAAJQMAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"paste",
					null,
					"AQAAACcDAAAAAAAAkgsAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcDAAAAAAAAJwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "extract/bat"
					},
					"DAAAACoDAAAAAAAAKwMAAAAAAAAAAAAAKwMAAAAAAAArAwAAAAAAABIAAABnZW5lcmF0ZV9jc3Yve2lkc30rAwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC8DAAAAAAAAAAAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUDAAAAAAAANQMAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "   "
					},
					"AwAAACYDAAAAAAAAJwMAAAAAAAAAAAAAJwMAAAAAAAAoAwAAAAAAAAAAAAAoAwAAAAAAACkDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYDAAAAAAAAJgMAAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAACgDAAAAAAAAKAMAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkDAAAAAAAAKQMAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAACgDAAAAAAAAKQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgDAAAAAAAAKAMAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " private."
					},
					"CQAAACkDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC8DAAAAAAAAAAAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADIDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkDAAAAAAAAKQMAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": " unpublished"
					},
					"DAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIDAAAAAAAAMgMAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAABAAwAAAAAAAEEDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4DAAAAAAAAPgMAAAAAAAAAAAAAAADwvw"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": " Read"
					},
					"BQAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABDAwAAAAAAAAAAAABDAwAAAAAAAEQDAAAAAAAAAAAAAEQDAAAAAAAARQMAAAAAAAAAAAAARQMAAAAAAABGAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEDAAAAAAAAQQMAAAAAAAAAAAAAAADwvw"
				],
				[
					165,
					1,
					"left_delete",
					null,
					"AQAAAEUDAAAAAAAARQMAAAAAAAABAAAAZA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYDAAAAAAAARgMAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAEUDAAAAAAAARgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUDAAAAAAAARQMAAAAAAAAAAAAAAADwvw"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAEUDAAAAAAAARQMAAAAAAAABAAAAbQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYDAAAAAAAARgMAAAAAAAAAAAAAAADwvw"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "dme."
					},
					"BAAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAABHAwAAAAAAAEgDAAAAAAAAAAAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUDAAAAAAAARQMAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "batch"
					},
					"BgAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB5AwAAAAAAAAcAAABnZXQtY3N2eQMAAAAAAAB6AwAAAAAAAAAAAAB6AwAAAAAAAHsDAAAAAAAAAAAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgDAAAAAAAAfwMAAAAAAAAAAAAAAADwvw"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "batch"
					},
					"BgAAAJgDAAAAAAAAmQMAAAAAAAAAAAAAmQMAAAAAAACZAwAAAAAAAAcAAABHZXQgQ1NWmQMAAAAAAACaAwAAAAAAAAAAAACaAwAAAAAAAJsDAAAAAAAAAAAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACdAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgDAAAAAAAAnwMAAAAAAAAAAAAAAADwvw"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "/{}"
					},
					"AwAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAABcAwAAAAAAAF0DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoDAAAAAAAAWgMAAAAAAAAAAAAAAADwvw"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "ids"
					},
					"AwAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABeAwAAAAAAAAAAAABeAwAAAAAAAF8DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwDAAAAAAAAXAMAAAAAAAAAAAAAAADwvw"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "hidden/unp"
					},
					"CwAAADMDAAAAAAAANAMAAAAAAAAAAAAANAMAAAAAAAA0AwAAAAAAAAsAAAB1bnB1Ymxpc2hlZDQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADcDAAAAAAAAAAAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADoDAAAAAAAAAAAAADoDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAAD0DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMDAAAAAAAAPgMAAAAAAAAAAAAAAADwvw"
				],
				[
					192,
					1,
					"left_delete",
					null,
					"AQAAADwDAAAAAAAAPAMAAAAAAAABAAAAcA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0DAAAAAAAAPQMAAAAAAAAAAAAAAADwvw"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "publishd"
					},
					"CAAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwDAAAAAAAAPAMAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					1,
					"left_delete",
					null,
					"AQAAAEMDAAAAAAAAQwMAAAAAAAABAAAAZA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQDAAAAAAAARAMAAAAAAAAAAAAAAADwvw"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "ed"
					},
					"AgAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABFAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMDAAAAAAAAQwMAAAAAAAAAAAAAAADwvw"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " via"
					},
					"BAAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAABHAwAAAAAAAEgDAAAAAAAAAAAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUDAAAAAAAARQMAAAAAAAAAAAAAAADwvw"
				],
				[
					198,
					1,
					"left_delete",
					null,
					"AQAAAEkDAAAAAAAASQMAAAAAAAAEAAAAIGluIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkDAAAAAAAATQMAAAAAAAAAAAAAAADwvw"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkDAAAAAAAASgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkDAAAAAAAASQMAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": " dahs"
					},
					"BQAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFADAAAAAAAAUAMAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					2,
					"left_delete",
					null,
					"AgAAAFQDAAAAAAAAVAMAAAAAAAABAAAAc1MDAAAAAAAAUwMAAAAAAAABAAAAaA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUDAAAAAAAAVQMAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "shboard"
					},
					"BwAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAABVAwAAAAAAAFYDAAAAAAAAAAAAAFYDAAAAAAAAVwMAAAAAAAAAAAAAVwMAAAAAAABYAwAAAAAAAAAAAABYAwAAAAAAAFkDAAAAAAAAAAAAAFkDAAAAAAAAWgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMDAAAAAAAAUwMAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAACgDAAAAAAAAKAMAAAAAAACdCAAAIyBwcml2YXRlLiBoaWRkZW4vdW5wdWJsaXNoZWQgdmlhIFJlYWRtZSBkYXNoYm9hcmQuCiAgL2V4dHJhY3QvYmF0Y2gve2lkc306CiAgICBnZXQ6CiAgICAgIG9wZXJhdGlvbklkOiBiYXRjaC1leHRyYWN0aW9uCiAgICAgIHN1bW1hcnk6IGJhdGNoIGV4dHJhY3Rpb24KICAgICAgZGVzY3JpcHRpb246IHwKICAgICAgICBZb3UgY2FuIHVzZSB0aGlzIGVuZHBvaW50IHRvIGdldCBDU1YgZmlsZXMgZnJvbSBkb2N1bWVudHMsIGZvciBleGFtcGxlLCBmcm9tIFBERnMuIEluIG1vcmUgZGV0YWlsLCB0aGlzIGVuZHBvaW50IGNvbnZlcnRzIHlvdXIgSlNPTiBkb2N1bWVudCBleHRyYWN0aW9uIHRvIGEgY29tbWEtc2VwYXJhdGVkIHZhbHVlcy4KICAgICAgICBUbyBjb21waWxlIG11bHRpcGxlIGRvY3VtZW50cyBpbnRvIG9uZSBDU1YgZmlsZSwgc3BlY2lmeSB0aGUgSURzIG9mIHRoZWlyIHJlY2VudCBleHRyYWN0aW9ucyBpbiB0aGUgcmVxdWVzdCBzZXBhcmF0ZWQgYnkgY29tbWFzLCBmb3IgZXhhbXBsZSwKICAgICAgICBgL2dlbmVyYXRlX2Nzdi84Njc1MTRjYy1mY2U3LTQwZWItOGU5ZC1lNmVjNDhjZGFjMzQsNTA5M2M2NWYtMDViZC00NmEzLThkZjctZGEzZWQwMGY2ZDM1YC4KICAgICAgICBGb3IgdGhlIGJlc3QgY29tcGlsZWQgc3ByZWFkc2hlZXQgcmVzdWx0cywgY29uZmlndXJlIHlvdXIgU2Vuc2VNTCBzbyB0aGF0IHRoZSBkb2N1bWVudHMgb3V0cHV0IGlkZW50aWNhbGx5IG5hbWVkIGZpZWxkcy4KICAgICAgICBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY29udmVyc2lvbiBwcm9jZXNzLCBzZWUgW1NlbnNlTUwgdG8gc3ByZWFkc2hlZXQgcmVmZXJlbmNlXShkb2M6ZXhjZWwtcmVmZXJlbmNlKS4KICAgICAgICBGb3IgYSBsaXN0IG9mIGRvY3VtZW50IGZpbGUgdHlwZXMgdGhhdCBTZW5zaWJsZSBjYW4gZXh0cmFjdCBkYXRhIGZyb20sIHNlZSBbU3VwcG9ydGVkIGZpbGUgdHlwZXNdKGRvYzpmaWxlLXR5cGVzKS4KICAgICAgICBDYWxsIHRoaXMgZW5kcG9pbnQgYWZ0ZXIgYW4gZXh0cmFjdGlvbiBjb21wbGV0ZXMuIEZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IGNoZWNraW5nIGV4dHJhY3Rpb24gc3RhdHVzLAogICAgICAgIHNlZSB0aGUgYEdFVCAvZG9jdW1lbnRzL3tpZH1gIGVuZHBvaW50LgogICAgICBwYXJhbWV0ZXJzOgogICAgICAgIC0gJHJlZjogJyMvY29tcG9uZW50cy9wYXJhbWV0ZXJzL2lkcycKICAgICAgdGFnczoKICAgICAgLSBHZXQgRXhjZWwgZnJvbSBkb2N1bWVudHMKICAgICAgcmVzcG9uc2VzOgogICAgICAgICcyMDAnOgogICAgICAgICAgZGVzY3JpcHRpb246IHwKICAgICAgICAgICAgSW5kaWNhdGVzIHRoZSBleHRyYWN0aW9uIHN1Y2Nlc3NmdWxseSBjb252ZXJ0ZWQgdG8gYW4gQ1NWIGZpbGUuIFRoaXMgcmVzcG9uc2UgY29udGFpbnMgdGhlIGRvd25sb2FkIFVSTCBmb3IgdGhlIENTViBmaWxlLiBUaGUgbGluawogICAgICAgICAgICBleHBpcmVzIGFmdGVyIDE1IG1pbnV0ZXMuCiAgICAgICAgICBjb250ZW50OgogICAgICAgICAgICBhcHBsaWNhdGlvbi9qc29uOgogICAgICAgICAgICAgIHNjaGVtYToKICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgIHVybDoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IHVybAogICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBUaGUgZG93bmxvYWQgVVJMIGZvciB0aGUgQ1NWIGZpbGUKICAgICAgICAgICAgICAgICAgICBleGFtcGxlOiBodHRwczovL3NlbnNpYmxlLXNvLWRvY3VtZW50LXR5cGUtYnVja2V0LWRldi11cy13ZXN0LTIuczMudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vc2Vuc2libGUvZmMzNDg0YzUtM2YzNS00MTI5LWJiMjktMGFkMTI5MWVlOWY4L0VYVFJBQ1RJT04vMTRkODI3ODMtYzEyYi00ZTcwLWIwYWUtY2ExY2UzNWE5ODM2LmNzdj9SRURBQ1RFRAoKICAgICAgICAnNDAxJzoKICAgICAgICAgICRyZWY6ICcjL2NvbXBvbmVudHMvcmVzcG9uc2VzLzQwMScKICAgICAgICAnNDAwJzoKICAgICAgICAgICRyZWY6ICcjL2NvbXBvbmVudHMvcmVzcG9uc2VzLzQwMCcKICAgICAgICAnNDE1JzoKICAgICAgICAgICRyZWY6ICcjL2NvbXBvbmVudHMvcmVzcG9uc2VzLzQxNScKICAgICAgICAnNTAwJzoKICAgICAgICAgICRyZWY6ICcjL2NvbXBvbmVudHMvcmVzcG9uc2VzLzUwMCcK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAwAAAAAAAMULAAAAAAAAAAAAAAAAN0A"
				],
				[
					12,
					3,
					"left_delete",
					null,
					"AwAAACsDAAAAAAAAKwMAAAAAAAABAAAAICoDAAAAAAAAKgMAAAAAAAABAAAACikDAAAAAAAAKQMAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAACgDAAAAAAAAKAMAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAwAAAAAAACkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "Title"
					},
					"BgAAAGrSAAAAAAAAa9IAAAAAAAAAAAAAa9IAAAAAAABr0gAAAAAAABQAAABGaWxlbmFtZSBvZiB0aGUgUERGLmvSAAAAAAAAbNIAAAAAAAAAAAAAbNIAAAAAAABt0gAAAAAAAAAAAABt0gAAAAAAAG7SAAAAAAAAAAAAAG7SAAAAAAAAb9IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAatIAAAAAAAB+0gAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " asi"
					},
					"BAAAAG/SAAAAAAAAcNIAAAAAAAAAAAAAcNIAAAAAAABx0gAAAAAAAAAAAABx0gAAAAAAAHLSAAAAAAAAAAAAAHLSAAAAAAAAc9IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb9IAAAAAAABv0gAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAHLSAAAAAAAActIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAc9IAAAAAAABz0gAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "signed"
					},
					"BgAAAHLSAAAAAAAAc9IAAAAAAAAAAAAAc9IAAAAAAAB00gAAAAAAAAAAAAB00gAAAAAAAHXSAAAAAAAAAAAAAHXSAAAAAAAAdtIAAAAAAAAAAAAAdtIAAAAAAAB30gAAAAAAAAAAAAB30gAAAAAAAHjSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAActIAAAAAAABy0gAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAHjSAAAAAAAAedIAAAAAAAAAAAAAedIAAAAAAAB60gAAAAAAAAAAAAB60gAAAAAAAHvSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeNIAAAAAAAB40gAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAHvSAAAAAAAAfNIAAAAAAAAAAAAAfNIAAAAAAAB90gAAAAAAAAAAAAB90gAAAAAAAH7SAAAAAAAAAAAAAH7SAAAAAAAAf9IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe9IAAAAAAAB70gAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " PDF"
					},
					"BAAAAH/SAAAAAAAAgNIAAAAAAAAAAAAAgNIAAAAAAACB0gAAAAAAAAAAAACB0gAAAAAAAILSAAAAAAAAAAAAAILSAAAAAAAAg9IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf9IAAAAAAAB/0gAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " by"
					},
					"AwAAAIPSAAAAAAAAhNIAAAAAAAAAAAAAhNIAAAAAAACF0gAAAAAAAAAAAACF0gAAAAAAAIbSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAg9IAAAAAAACD0gAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAIbSAAAAAAAAh9IAAAAAAAAAAAAAh9IAAAAAAACI0gAAAAAAAAAAAACI0gAAAAAAAInSAAAAAAAAAAAAAInSAAAAAAAAitIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhtIAAAAAAACG0gAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " PDF"
					},
					"BAAAAIrSAAAAAAAAi9IAAAAAAAAAAAAAi9IAAAAAAACM0gAAAAAAAAAAAACM0gAAAAAAAI3SAAAAAAAAAAAAAI3SAAAAAAAAjtIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAitIAAAAAAACK0gAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " producer."
					},
					"CgAAAI7SAAAAAAAAj9IAAAAAAAAAAAAAj9IAAAAAAACQ0gAAAAAAAAAAAACQ0gAAAAAAAJHSAAAAAAAAAAAAAJHSAAAAAAAAktIAAAAAAAAAAAAAktIAAAAAAACT0gAAAAAAAAAAAACT0gAAAAAAAJTSAAAAAAAAAAAAAJTSAAAAAAAAldIAAAAAAAAAAAAAldIAAAAAAACW0gAAAAAAAAAAAACW0gAAAAAAAJfSAAAAAAAAAAAAAJfSAAAAAAAAmNIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjtIAAAAAAACO0gAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAHKTAAAAAAAAc5MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcpMAAAAAAABykwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAAHKTAAAAAAAAcpMAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAc5MAAAAAAABzkwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANuTAAAAAAAA3JMAAAAAAAAAAAAA3JMAAAAAAADikwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA25MAAAAAAADbkwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": ">-"
					},
					"AgAAAIWTAAAAAAAAhpMAAAAAAAAAAAAAhpMAAAAAAACHkwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhZMAAAAAAACFkwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIeTAAAAAAAAiJMAAAAAAAAAAAAAiJMAAAAAAACOkwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh5MAAAAAAACHkwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAI6TAAAAAAAAkJMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjpMAAAAAAACOkwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAO2TAAAAAAAA75MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7ZMAAAAAAADtkwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "shows"
					},
					"BQAAAPiTAAAAAAAA+ZMAAAAAAAAAAAAA+ZMAAAAAAAD6kwAAAAAAAAAAAAD6kwAAAAAAAPuTAAAAAAAAAAAAAPuTAAAAAAAA/JMAAAAAAAAAAAAA/JMAAAAAAAD9kwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+JMAAAAAAAD4kwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAP2TAAAAAAAA/pMAAAAAAAAAAAAA/pMAAAAAAAD/kwAAAAAAAAAAAAD/kwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/ZMAAAAAAAD9kwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAGUAAAAAAAAApQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAZQAAAAAAAABlAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					10,
					"left_delete",
					null,
					"CgAAAAGUAAAAAAAAAZQAAAAAAAABAAAAIACUAAAAAAAAAJQAAAAAAAABAAAAZf+TAAAAAAAA/5MAAAAAAAABAAAAaP6TAAAAAAAA/pMAAAAAAAABAAAAdP2TAAAAAAAA/ZMAAAAAAAABAAAAIPyTAAAAAAAA/JMAAAAAAAABAAAAc/uTAAAAAAAA+5MAAAAAAAABAAAAd/qTAAAAAAAA+pMAAAAAAAABAAAAb/mTAAAAAAAA+ZMAAAAAAAABAAAAaPiTAAAAAAAA+JMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "displays"
					},
					"CAAAAPiTAAAAAAAA+ZMAAAAAAAAAAAAA+ZMAAAAAAAD6kwAAAAAAAAAAAAD6kwAAAAAAAPuTAAAAAAAAAAAAAPuTAAAAAAAA/JMAAAAAAAAAAAAA/JMAAAAAAAD9kwAAAAAAAAAAAAD9kwAAAAAAAP6TAAAAAAAAAAAAAP6TAAAAAAAA/5MAAAAAAAAAAAAA/5MAAAAAAAAAlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+JMAAAAAAAD4kwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAACUAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAOUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAAOUAAAAAAAABJQAAAAAAAAAAAAABJQAAAAAAAAFlAAAAAAAAAAAAAAFlAAAAAAAAAaUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " ext"
					},
					"BAAAAAaUAAAAAAAAB5QAAAAAAAAAAAAAB5QAAAAAAAAIlAAAAAAAAAAAAAAIlAAAAAAAAAmUAAAAAAAAAAAAAAmUAAAAAAAACpQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABpQAAAAAAAAGlAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "raction"
					},
					"BwAAAAqUAAAAAAAAC5QAAAAAAAAAAAAAC5QAAAAAAAAMlAAAAAAAAAAAAAAMlAAAAAAAAA2UAAAAAAAAAAAAAA2UAAAAAAAADpQAAAAAAAAAAAAADpQAAAAAAAAPlAAAAAAAAAAAAAAPlAAAAAAAABCUAAAAAAAAAAAAABCUAAAAAAAAEZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACpQAAAAAAAAKlAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " history"
					},
					"CAAAABGUAAAAAAAAEpQAAAAAAAAAAAAAEpQAAAAAAAATlAAAAAAAAAAAAAATlAAAAAAAABSUAAAAAAAAAAAAABSUAAAAAAAAFZQAAAAAAAAAAAAAFZQAAAAAAAAWlAAAAAAAAAAAAAAWlAAAAAAAABeUAAAAAAAAAAAAABeUAAAAAAAAGJQAAAAAAAAAAAAAGJQAAAAAAAAZlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEZQAAAAAAAARlAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " views"
					},
					"BgAAABmUAAAAAAAAGpQAAAAAAAAAAAAAGpQAAAAAAAAblAAAAAAAAAAAAAAblAAAAAAAAByUAAAAAAAAAAAAAByUAAAAAAAAHZQAAAAAAAAAAAAAHZQAAAAAAAAelAAAAAAAAAAAAAAelAAAAAAAAB+UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGZQAAAAAAAAZlAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAB+UAAAAAAAAIJQAAAAAAAAAAAAAIJQAAAAAAAAhlAAAAAAAAAAAAAAhlAAAAAAAACKUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAH5QAAAAAAAAflAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAACKUAAAAAAAAI5QAAAAAAAAAAAAAI5QAAAAAAAAklAAAAAAAAAAAAAAklAAAAAAAACWUAAAAAAAAAAAAACWUAAAAAAAAJpQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIpQAAAAAAAAilAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " Sensible"
					},
					"CQAAACaUAAAAAAAAJ5QAAAAAAAAAAAAAJ5QAAAAAAAAolAAAAAAAAAAAAAAolAAAAAAAACmUAAAAAAAAAAAAACmUAAAAAAAAKpQAAAAAAAAAAAAAKpQAAAAAAAArlAAAAAAAAAAAAAArlAAAAAAAACyUAAAAAAAAAAAAACyUAAAAAAAALZQAAAAAAAAAAAAALZQAAAAAAAAulAAAAAAAAAAAAAAulAAAAAAAAC+UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJpQAAAAAAAAmlAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAAC+UAAAAAAAAMJQAAAAAAAAAAAAAMJQAAAAAAAAxlAAAAAAAAAAAAAAxlAAAAAAAADKUAAAAAAAAAAAAADKUAAAAAAAAM5QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAL5QAAAAAAAAvlAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADOUAAAAAAAANJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM5QAAAAAAAAzlAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					2,
					"left_delete",
					null,
					"AgAAABqUAAAAAAAAGpQAAAAAAAAGAAAAdmlld3MgGZQAAAAAAAAZlAAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAAGpQAAAAAAAAglAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABmUAAAAAAAAGpQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGZQAAAAAAAAZlAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\nand"
					},
					"BQAAAC6UAAAAAAAAL5QAAAAAAAAAAAAAL5QAAAAAAAA3lAAAAAAAAAAAAAA3lAAAAAAAADiUAAAAAAAAAAAAADiUAAAAAAAAOZQAAAAAAAAAAAAAOZQAAAAAAAA6lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALpQAAAAAAAAulAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADqUAAAAAAAAO5QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOpQAAAAAAAA6lAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					5,
					"left_delete",
					null,
					"BQAAAEeUAAAAAAAAR5QAAAAAAAAIAAAAZmlsZW5hbWVGlAAAAAAAAEaUAAAAAAAAAQAAACBFlAAAAAAAAEWUAAAAAAAAAQAAAGVElAAAAAAAAESUAAAAAAAAAQAAAGhDlAAAAAAAAEOUAAAAAAAAAQAAAHQ",
					"AQAAAAAAAAABAAAAR5QAAAAAAABPlAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "it"
					},
					"AgAAAEOUAAAAAAAARJQAAAAAAAAAAAAARJQAAAAAAABFlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQ5QAAAAAAABDlAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					2,
					"left_delete",
					null,
					"AgAAAAKUAAAAAAAAApQAAAAAAAABAAAAdAGUAAAAAAAAAZQAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAAAGUAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAASUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAZQAAAAAAAABlAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAASUAAAAAAAABZQAAAAAAAAAAAAABZQAAAAAAAAGlAAAAAAAAAAAAAAGlAAAAAAAAAeUAAAAAAAAAAAAAAeUAAAAAAAACJQAAAAAAAAAAAAACJQAAAAAAAAJlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABJQAAAAAAAAElAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					2,
					"left_delete",
					null,
					"AgAAAEqUAAAAAAAASpQAAAAAAAABAAAAdEmUAAAAAAAASZQAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAS5QAAAAAAABLlAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAAEmUAAAAAAAASpQAAAAAAAAAAAAASpQAAAAAAABLlAAAAAAAAAAAAABLlAAAAAAAAEyUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASZQAAAAAAABJlAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAEyUAAAAAAAATZQAAAAAAAAAAAAATZQAAAAAAABOlAAAAAAAAAAAAABOlAAAAAAAAE+UAAAAAAAAAAAAAE+UAAAAAAAAUJQAAAAAAAAAAAAAUJQAAAAAAABRlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATJQAAAAAAABMlAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					4,
					"left_delete",
					null,
					"BAAAABPTAAAAAAAAE9MAAAAAAAABAAAAZhLTAAAAAAAAEtMAAAAAAAABAAAAZBHTAAAAAAAAEdMAAAAAAAABAAAAcBDTAAAAAAAAENMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAFNMAAAAAAAAU0wAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "for the following table represented in json,\ngive me flatted json dot notation to access each value of the limits array.\n\n```json\n\"insurer_b_table\": {\n    \"columns\": [\n      {\n        \"id\": \"make_and_model\",\n        \"values\": [\n          {\n            \"value\": \"Honda Accord\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"Honda Accord\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"Honda Accord\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      {\n        \"id\": \"vehicle_vin\",\n        \"values\": [\n          {\n            \"value\": \"92343156\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"92343156\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"92343156\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      {\n        \"id\": \"policy_effective_date\",\n        \"values\": [\n          {\n            \"value\": \"12/19/20\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"12/19/20\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"12/19/20\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      {\n        \"id\": \"limits\",\n        \"values\": [\n          {\n            \"value\": \"Property damage*\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"Bodily injury**\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"Auto only*\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      {\n        \"id\": \"dollar_amount_per_limit\",\n        \"values\": [\n          {\n            \"value\": \"$6,000\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"$4,000\",\n            \"type\": \"string\"\n          },\n          {\n            \"value\": \"$1,000\",\n            \"type\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"title\": {\n      \"type\": \"string\",\n      \"value\": \"Insurer B\"\n    },\n    \"footer\": {\n      \"type\": \"string\",\n      \"value\": \"* per person ** per accident\"\n    }\n  },\n\n```\n",
			"settings":
			{
				"buffer_size": 2072,
				"line_ending": "Windows",
				"name": "for the following table represented in json,"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAkAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": "\n\n\nfor"
					},
					"CwAAAJAHAAAAAAAAkQcAAAAAAAAAAAAAkQcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAJQHAAAAAAAAlgcAAAAAAAAAAAAAkQcAAAAAAACRBwAAAAAAAAIAAAAgIJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACXBwAAAAAAAAAAAACSBwAAAAAAAJIHAAAAAAAAAgAAACAglQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAJcHAAAAAAAAmAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQBwAAAAAAAJAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAJgHAAAAAAAAmQcAAAAAAAAAAAAAmQcAAAAAAACaBwAAAAAAAAAAAACaBwAAAAAAAJsHAAAAAAAAAAAAAJsHAAAAAAAAnAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYBwAAAAAAAJgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " following"
					},
					"CgAAAJwHAAAAAAAAnQcAAAAAAAAAAAAAnQcAAAAAAACeBwAAAAAAAAAAAACeBwAAAAAAAJ8HAAAAAAAAAAAAAJ8HAAAAAAAAoAcAAAAAAAAAAAAAoAcAAAAAAAChBwAAAAAAAAAAAAChBwAAAAAAAKIHAAAAAAAAAAAAAKIHAAAAAAAAowcAAAAAAAAAAAAAowcAAAAAAACkBwAAAAAAAAAAAACkBwAAAAAAAKUHAAAAAAAAAAAAAKUHAAAAAAAApgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcBwAAAAAAAJwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " json"
					},
					"BQAAAKYHAAAAAAAApwcAAAAAAAAAAAAApwcAAAAAAACoBwAAAAAAAAAAAACoBwAAAAAAAKkHAAAAAAAAAAAAAKkHAAAAAAAAqgcAAAAAAAAAAAAAqgcAAAAAAACrBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmBwAAAAAAAKYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " table"
					},
					"BgAAAKsHAAAAAAAArAcAAAAAAAAAAAAArAcAAAAAAACtBwAAAAAAAAAAAACtBwAAAAAAAK4HAAAAAAAAAAAAAK4HAAAAAAAArwcAAAAAAAAAAAAArwcAAAAAAACwBwAAAAAAAAAAAACwBwAAAAAAALEHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrBwAAAAAAAKsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"cut",
					null,
					"AQAAAJUHAAAAAAAAlQcAAAAAAAAcAAAAZm9yIHRoZSBmb2xsb3dpbmcganNvbiB0YWJsZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxBwAAAAAAAJUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n\n````"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAlAcAAAAAAACUBwAAAAAAAAIAAAAgIAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "```"
					},
					"AwAAAJgHAAAAAAAAmQcAAAAAAAAAAAAAmQcAAAAAAACaBwAAAAAAAAAAAACaBwAAAAAAAJsHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYBwAAAAAAAJgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAAUAAAAAAAAABQAAAAAAAAABAAAAYA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "json"
					},
					"BAAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " following"
					},
					"CgAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " table"
					},
					"BgAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " represented"
					},
					"DAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACYAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " json,"
					},
					"BgAAACYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACwAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\ngive"
					},
					"BQAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " me"
					},
					"AwAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA2AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYAAAAAAAAANwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAADYAAAAAAAAANgAAAAAAAAABAAAAIDUAAAAAAAAANQAAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "flatted"
					},
					"BwAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAPAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " json"
					},
					"BQAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " dot"
					},
					"BAAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAAAAAAAAAEEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " notation"
					},
					"CQAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAAAAAAAAAE4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " access"
					},
					"BwAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRAAAAAAAAAFEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " each"
					},
					"BQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdAAAAAAAAAF0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "element"
					},
					"BwAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAZQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAAAAAAAAAF4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGgAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAAAAAAAAAGUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGwAAAAAAAAAbQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BgAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABfAAAAAAAAAAcAAABlbGVtZW50XwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAAAAAAAAAGUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "limits"
					},
					"BgAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAAAAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHEAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAAAAAAAAAGsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " array"
					},
					"BgAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAB2AAAAAAAAAHcAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAAAAAAAAAHEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHcAAAAAAAAAeAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AAAAAAAAAHcAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "Searching 159 files for \"grouping\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3000 - lines.md:\n   28  To configure this default sorting behavior, see [the Sort Lines parameter](doc:method).\n   29  \n   30: Line grouping\n   31  ---\n   32  \n   ..\n   35  For the Label method, Sensible groups lines together using whitespace and x- and y-axis positions. Sometimes, Sensible's line groups are more restrictive than a human reader might expect. In particular, Sensible groups lines separated by vertical space solely if they align at the *left* edge of each line boundary by default:\n   36  \n   37: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_grouping.png)\n   38  \n   39  To capture unaligned lines, use the [Document Range](doc:document-range) method.\n\n2 matches in 1 file\n\n\nSearching 159 files for \"capture\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n  941      Coverage:\n  942        type: number\n  943:       description: The coverage score measures how fully an extraction captured all your target data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For mor... <skipped 71 characters> ...\n  944        example: 0.75\n  945      Environment:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\0300 - metrics.md:\n   13  ---\n   14  \n   15: Extraction coverage measures how fully an extraction captures your target data from the document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of output fields are null. A low percentage can indicate a poor-quality extraction. Or, it can indicate that your documents contain sparse data. For example, if you d... <skipped 198 characters> ...\n   16  \n   17  Since coverage success criteria can vary by document type, you can set your own ranges for each document type in the Sensible app. To set ranges for coverage for past extractions, click **Dashboard** and scroll to the **Extraction coverage** section. In the section, configure date range, document type, and extraction coverage range filters:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\2500 - handwriting.md:\n   25    \n   26  \n   27: - **Defining regions:** Handwriting can occupy an unpredictable region or even overlap other lines. To capture handwriting, Sensible recommends defining a [region](doc:region) with a small height and long width that runs through the middle of the area that can contain the handwriting. The green boxes in the following image show this approach: \n   28  \n   29    ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/handwriting_1.png) \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  426  \n  427  - You can use a [Column method](doc:column) to return all the listed premiums ($90, $15, $130).\n  428: - The limits listed in the table are tricky for the Row method to capture since they can be a variable number of lines. Row methods depend on strict horizontal alignment of lines, so Sensible extracts the first line. Instead, use the [Table method](doc:table) to more reliably capture the data in each cell of the whole table. Or, use an `xRangeFilter` parameter in the [Document Range method](doc:document-range) to capture the limits.  \n  429: - What if the document listed emails, and you just wanted to capture all those emails? You could use a regular expression (regex) in a `\"match\":\"all\"` anchor coupled with a [Passthrough method](doc:passthrough), or the [Regex method](doc:regex).\n  430  - You can split the policy period into two dates, either by using the [Split computed field method](doc:split), or by setting the [Date](doc:types#date) type on the field and using a tiebreaker.\n  431  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\1000 - color.md:\n    9  | ------------------------------------------------ | ------------------------------------ |\n   10  | [Yellow box](doc:color#yellow-box)               | anchor                               |\n   11: | [Blue box](doc:color#blue-box)                   | captured method data                 |\n   12  | [Green box](doc:color#green-box)                 | box, region, table, or chunk         |\n   13  | [Green point](doc:color#green-point)             | starting point for recognizing a box |\n   ..\n  114  ===\n  115  \n  116: ***Dotted blue boxes*** represent discarded method data. Sensible methods filter out captured data depending on parameters you set in the field, the anchor, and the method.\n  117  \n  118: For example, in the following image, a Row method captures everything to the right of the text \"Python\", but a tiebreaker selects \"0\" (dark blue box) and discards \"first\" (dotted blue box).\n  119  \n  120  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_method.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n  128  - The **fingerprint** tells Sensible to preferentially run this config if the document contains the terms \"anyco\" or \"quoted coverage changes.\" For more information about using fingerprints to improve performance, and other configuration settings, see [Configuration Settings](doc:config-settings).\n  129  \n  130: - The **computed field** `\"driver_name_last\"` extracts the last name from the raw output of the `_driver_name_raw` field. For more information about transforming field output, see [Computed field methods](doc:computed-field-methods).  You can also capture the full name as typed output. See [types](doc:types).\n  131  \n  132   \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   24  | wordFilters                 | string array                                                 | Filters out the specified strings from the method results.   |\n   25  | whitespaceFilter            | `spaces`, `all`                                              | Remove extra whitespaces.<br/> `spaces` - remove solely extra spaces.<br/> `all` - remove all whitespace characters, including newlines. |\n   26: | xRangeFilter                | object                                                       | Defines left and right boundaries in which to capture lines. For example, in combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom by text.  This column excludes any lines that partially fall outside the defined rectangular region. Parameters: <br/>`start` - `right`,`left`  - Defines the starting point of the \"column\" at either the right or left boundary of the anchor line.<br/> `offsetX` - Adjusts the horizontal position of the starting point defined by the Start parameter. <br/> `width` - The width of the page region to capture, in inches.<br/><br/> For an example, see the Examples section. |\n   27  | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28  | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter corrects this problem by sorting lines by their likely reading order. |\n   ..\n   42  **SOLUTION**\n   43  \n   44: To reliably capture the first and last name in their left-to-right order,  set `\"sortLines\": \"readingOrderLeftToRight\"`.\n   45  \n   46  *Config*\n   ..\n  161  In this example, the X Range Filter parameter is the best option:\n  162  \n  163: - Document Range by itself isn't a good option, because it captures the address of the importer as well as the supplier. \n  164  - The Fixed Table and Table methods aren't the best options, because the table formatting is hard to recognize.\n  165  - The Text Table method with `\"detectMultipleLinesPerRow\": true` configured is an alternate solution for this example.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n  154  Returns a transformed type you define using an array of types. In the array, each successive type in the array takes the previous type's output as its input. For example, use this type:\n  155  \n  156: - As a more syntactically concise alternative to the [Regex](doc:regex) method or to [Computed Field methods](doc:computed-field-methods). For example, you can write a field to capture a date-typed field, then transform the field's output with the [Split](doc:split) method. Or, see the following example to transform dates using the Compose type.\n  157  - To transform table cell contents. As an alternative, see the [NLP table](doc:nlp-table) method for writing natural-language instructions to transform table cell contents.\n  158  \n  ...\n  385  | relaxedWithCents          | Boolean. default: false                                      | Use this parameter when poor-quality scans or photographed documents result in erroneous OCR output for the decimal separator or thousands separator.  <br/> If true, Sensible overrides all other Currency typ... <skipped 371 characters> ...eriod or comma: <br/>`.,;: _ `  (period, comma, semicolon, colon, space, underscore)<br/><br/>For example, if you set this parameter to true, then for the erroneous OCR output  `\"7.859:36\"`, Sensible returns: <br>{\"source\": \"7.859:36\",<br/>\"type\": \"currency\",<br/>\"unit\": \"$\",<br/>\"value\": 7859.36} |\n  386  | accountingNegative        | `default`, `anyParentheses`, `bothParentheses`, `suffixNegativeSign` Default: `null` | Replaces the deprecated Accounting Currency type. Specifies to recognize accounting sign conventions for negative numbers.<br/>`null` Sensible recognizes negative numbers as described... <skipped 377 characters> ...y recognized as other characters.<br/>`suffixNegativeSign` - Sensible assigns a negative value to number suffixed by a negative sign.<br/>`default`  Replaces the behavior of the Accounting Currency type for backward compatibility. The equivalent of `bothParentheses` and `suffixNegativeSign`. <br/> |\n  387: | alwaysNegative            | boolean                                                      | If true, Sensible assigns a negative value to a number and ignores sign symbols in the document. For example, use this to capture values in the debit column of an accounting document, where negative signs are omitted. |\n  388  | removeSpaces              | boolean                                                      | Removes whitespace in a line for better currency recognition. For example, changes the line `$  12.45` to `$12.45`. |\n  389  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   50  | Parameter                                                    | Value                                              | Description                                                  |\n   51  | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n   52: <skipped 96 characters> ...                    | Sensible uses the ID as the key in the structured key/value output. In the API response, this output is in the `parsed_document` section.<br/>To specify fallbacks, use the same ID in multiple fields. Succeeding fields act as fallbacks if the first returns null. For example, to capture differences in wording between document revisions, define two fields with the same ID, which anchor on synonymous text that may be present or absent in different document revisions. Fallback fields can be of any kind. For example, you can fallback from a field, to a computed field, to a section gro... <skipped 155 characters> ...\n   53  | anchor (**required**) except for fields that use [NLP methods](doc:natural-language-methods) | object                                             | The anchor identifies one or more lines of text in the document at which Sensible starts executing a method. Can be a string, Match object, or array of Match objects. For more information, see [Anchor object](doc:anchor) and [Match object](doc:match). |\n   54  | method (**required**)                                        | object                                             | The method describes how Sensible expands from the anchor and extracts the target data. For more information, see [Methods](doc:methods), [Natural language methods](doc:natural-language-methods), and [Method object](doc:method). |\n   55: | type                                                         | see [Types](doc:types)                             | The data type to extract, for example, a currency, an address, or a custom type you define. This structured output includes the type information. If the field captures other data in addition to the data matching the type, Sensible suppresses the additional data from the output. For more information, see [Types](doc:types). |\n   56  | match                                                        | `first`,`last`,`all`, `allWithNull`,`mostFrequent` | If there are multiple anchors, specifies which one to use to extract output. <br/> <br/>- `first`  specifies the first anchor in the document that returns non-null output.<br/><br/>-... <skipped 1023 characters> ... a scanned document repeats a box titled `1 Wages` four times with the same dollar value, `21850.20`. Due to OCR errors, the extracted outputs are `21050.20`, `21850.20`, `21850.20` and `21850.58`.  This option returns the most frequent, and therefore the mostly likely correct output,  `21850.20`. |\n   57  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1650 - nearest-checkbox.md:\n   11  - If the document is a PDF that contains checkbox metadata, then Sensible preferentially uses the metadata to extract selection status.  \n   12  \n   13: - If there's no metadata, Sensible falls back to Azure Form Recognizer’s checkbox detection. This detection uses OCR and machine learning and captures a wide range of checkbox formats.\n   14  \n   15  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1800 - regex.md:\n   18  | ---------------------- | ----------------------------------------------------- | ------------------------------------------------------------ |\n   19  | id (**required**)      | `regex`                                               | Specifies to include the anchor line in the method's output. |\n   20: | pattern (**required**) | Javascript-flavored regex                             | Returns the first capturing group. To capture more than one group, you can use one field for each group, then concatenate them with the [Concatenate](doc:concatenate) computed field method. <br/>Double escape special characters since the regex is in a JSON object. For example, `\\\\s`, not `\\s` , to represent a whitespace character.<br/>Sensible... <skipped 94 characters> ...\n   21  | flags                  | Javascript-flavored regex flags. default: none        | Flags to apply to the regex. For example, \"i\" for case-insensitive. |\n   22  | stop                   | Match object or array of match objects. default: none | Stops extraction at the matched line. Matched line isn't included in the method output. If unspecified, matches to the end of the document. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n   49  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_4.png)\n   50  \n   51: Now Sensible captures the full date range, because the region starts at the middle of the complete line \"White house tenure\".\n   52  \n   53  Try out this example in the Sensible app using the following documents and config:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\index.md:\n   19  | key                   | value                      | description                                                  |\n   20  | :-------------------- | :------------------------- | :----------------------------------------------------------- |\n   21: <skipped 46 characters> ...       | Sensible uses the ID as the key in the structured key/value output. In the API response, this output is in the `parsed_document` section. To specify fallbacks, use the same ID for multiple Computed Field methods. Succeeding fields act as fallbacks if the first returns null. For example, to capture differences in wording between document revisions, define two fields with the same ID, which use synonymous source ids that may be present or absent in different document revisions. |\n   22  | method (**required**) | object                     | The method describes the Computed Field method used to transform fields. This object's ID parameter specifies the method. The possible ID values are:<br/>[Concatenate](doc:concatenate)<br/>[Constant](doc:constant)<br/>[Mapper](doc:mapper)<br/>[pickValues](doc:pick-values)<br/>[Split](doc:split)<br/>[suppressOutput](doc:suppress-output)<br/>[Zip](doc:zip) |\n   23  | type                  | string (default: `string`) | Specifies the type of the output value. For more information about types, see [Field query object](doc:field-query-object). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\1000 - sections-example-loss-run.md:\n    6  The following example shows extracting repeated fields from a section group containing a list of claims:\n    7  \n    8: - It captures Sept and Oct claims by specifying  sections that start with \"claim number\" and  section group range that starts with \"September\" and ends with \"November\".\n    9: - From each section, it excludes intervening text that isn't part of a section but that does repeat (`monthly_number_unprocessed_claims`) using a Stop parameter. Instead, it captures this information outside of sections with  `\"match:all\"`.\n   10  \n   11  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\3000 - sections-example-labeled-rows.md:\n    4  ---\n    5  \n    6: The following example shows using a vertical section group to capture a table that has both column labels and row labels. It also shows using the Column Selection parameter to create sections out of all but the last and first columns. For more information about the Column Selection parameter, see [Section nuances](doc:section-nuances#column-selection).\n    7  \n    8  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\8000 - sections-example-copy-from-sections.md:\n   13  1. A parent section group's range contains the entire vehicle declaration.\n   14  \n   15: 2. A child section group captures data such as the vehicle description and VIN.\n   16  \n   17: 3. A child section group captures data such as the coverages and premiums:\n   18  \n   19  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/copy_from_sections_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\9000 - sections-example-copy-to-section.md:\n   13    \"fields\": [\n   14      {\n   15:       /* capture raw policy # to copy into \n   16        each claim using copy_to_section */\n   17        \"id\": \"_raw_policy_number\",\n   ..\n   24      },\n   25      {\n   26:       /* capture raw policy name to copy into \n   27        each claim using copy_to_section */\n   28        \"id\": \"_raw_policy_name\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n   65  | --------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   66  | direction       | `horizontal`, `vertical`. default: `horizontal`              | If set to `vertical`, Sensible searches for columns in a sections group. <br/>In detail, Sensible searches  left-to-right for columns in the first-found document area defined by the Range parameter, rather than the default behavior of continuing to search for matches for the Range parameter. For an illustration of this behavior, see [section nuances](doc:section-nuances). |\n   67: | columnSelection | array of index selections where each \"index selection\" can be:<br/>- a column index or comma-delimited indices<br><br>- an array with two comma-delimited indices, meaning all the columns in the indices range<br/><br/> default: capture all columns (`[]`) | Use to configure which columns to treat as sections. Sensible adds *unselected* columns to each section, for example so they can be used as anchor candidates. For an illustration, see [Section nuances](doc:section-nuances#column-selection).<br/> `[[0,5]]` selects 1st through 6t... <skipped 341 characters> ...\n   68  | ignoredColumns  | integer array.                                               | Removes unwanted columns from both the output *and* from the SenseML search scope. For example, this is useful if the columns contain text that interferes with anchoring on other columns. |\n   69  | minColumnGap    | number in inches. default: 0                                 | Configures column recognition by specifying the smallest allowed width of the gutters separating the columns. For an example, see [Table grid example](doc:sections-example-table-grid). Use when text in a column contains whitespace gaps such that Sensible can split one column into two. To avoid this split, set a minimum gap that's larger than the gaps inside the column. The default (0) means that zero-width vertical lines define the column boundaries. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0300 - accuracy-measures.md:\n   11  - **Confidence signals**: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report that it found multiple answer candidates. For more information, see [Qualifying LLM accuracy](doc:confidence).\n   12  \n   13: - **Extraction coverage:**  A score that measures how fully an extraction captured all the data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For more inform... <skipped 49 characters> ...\n   14  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1500 - coverage.md:\n    6  **Note:** If you're familiar with extraction coverage, this detailed topic is for you. If you're new to Sensible, see [Monitoring extractions](doc:metrics).\n    7  \n    8: Extraction coverage measures how fully an extraction captures your target data from the document. Sensible calculates the coverage for each extraction as follows:\n    9  \n   10  `coverage` = (`non-null fields extracted` - `validation penalties` )  ÷  (`total fields extracted`) \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3000 - lines.md:\n   37  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_grouping.png)\n   38  \n   39: To capture unaligned lines, use the [Document Range](doc:document-range) method.\n   40  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4500 - draft-senseml-order.md:\n   39  Take the raw text representation (from OCR or directly from the PDF), clean it, and put it in a standard format for Sensible to use.\n   40  \n   41: - Standardize the text to an array of pages, each containing an array of lines with bounding box data. Also capture transformation metadata (e.g., page rotation).\n   42  \n   43  - Apply non-configurable, global preprocessors (for example, clean up whitespaces, sort lines, merge and deduplicate lines).\n\n35 matches across 22 files\n\n\nSearching 159 files for \"capturing\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  454  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_error_1.png)\n  455  \n  456: That seems like sloppy document formatting, but let's work with it. There are several options for capturing the policy period reliably, including:  \n  457  \n  458  - Document Range method\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n  141  | ---------------------- | ------------------------ | ------------------------------------------------------------ |\n  142  | type (**required**)    | `regex`                  |                                                              |\n  143: | pattern (**required**) | valid  JS regex          | Javascript-flavored regular expression. This parameter doesn't support capturing groups. See the [Regex method](doc:regex) instead.<br/>Double escape special characters since the regex is in a JSON object. For example, `\\\\s`, not `\\s` , to represent a whitespace character.<br/>Sensible throws an error if you specify a pattern that can match an empty string, for example, `.*`. |\n  144  | flags                  | JS-flavored regex flags. | Flags to apply to the regex. for example: \"i\" for case-insensitive. |\n  145  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n  192                    \"id\": \"date\"\n  193                  },\n  194:                 /* convert date type's output to YYYY-MM using a capturing group */\n  195                  {\n  196                    \"id\": \"custom\",\n  ...\n  421  | ---------------------- | ------------------------ | ------------------------------------------------------------ |\n  422  | id (**required**)      | `custom`                 |                                                              |\n  423: | pattern (**required**) | Valid JS regex           | Javascript-flavored regular expression. Returns the first capturing group.<br/>Double escape special characters since the regex is in a JSON object. For example, `\\\\s`, not `\\s` , to represent a whitespace character.<br/>Sensible doesn't validate regular expressions for custom types. |\n  424  | flags                  | JS-flavored regex flags. | Flags to apply to the regex. for example: \"i\" for case-insensitive. |\n  425  | matchMultipleLines     | Boolean. default: false  | If true, matches regular expressions that span multiple lines. To enable this behavior, Sensible joins the lines returned by the method using whitespaces as the separators, and runs the regular expression on the joined text.<br/>  `^` matches the start of the first line returned by the method, and `$` matches the end of the last line. For example,  `^[0-9 ]+$` matches all the joined text returned by the method, if all the characters are digits or whitespaces. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1700 - passthrough.md:\n  109  ===\n  110  \n  111: Often, you use the Passthrough method in combination with regular expressions. Because anchors don't support regex capturing groups, the Passthrough method returns the full contents of the matched line. If you want instead to use a capturing group to return part of a matched line, see the [Regex method](doc:regex).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1800 - regex.md:\n    3  hidden: false\n    4  ---\n    5: Extracts lines matching a regular expression. Often, you use a capturing group in this method to narrow down text you matched in an anchor. \n    6  \n    7  [**Parameters**](doc:regex#parameters)\n    .\n   18  | ---------------------- | ----------------------------------------------------- | ------------------------------------------------------------ |\n   19  | id (**required**)      | `regex`                                               | Specifies to include the anchor line in the method's output. |\n   20: | pattern (**required**) | Javascript-flavored regex                             | Returns the first capturing group. To capture more than one group, you can use one field for each group, then concatenate them with the [Concatenate](doc:concatenate) computed field method. <br/>Double escape special characters since the regex is in a JSON object. For example, `\\\\s`, not `\\s` , to represent a whitespace chara... <skipped 112 characters> ...\n   21  | flags                  | Javascript-flavored regex flags. default: none        | Flags to apply to the regex. For example, \"i\" for case-insensitive. |\n   22  | stop                   | Match object or array of match objects. default: none | Stops extraction at the matched line. Matched line isn't included in the method output. If unspecified, matches to the end of the document. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\index.md:\n   19  | [**Nearest Checkbox**](doc:nearest-checkbox) | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/nearest_checkbox.png) | Extracts true/false for the selection status of the checkbox nearest to the anchor. |\n   20  | **[Passthrough](doc:passthrough)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/passthrough.png) | Extracts anchor text, optionally using RegEx.                |\n   21: | **[Regex](doc:regex)**                       |                                                              | Extracts text matching RegEx. Use RegEx capturing groups in this method to clean up extracted data in combination with the Passthrough method. |\n   22  | **[Region](doc:region)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/region_ssn.png) | Extracts data from a rectangular region defined by coordinates. Faster alternative to Box method. |\n   23  | **[Row](doc:row)**                           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/row.png) | Extracts text aligned in a row.                              |\n\n9 matches across 6 files\n\n\nSearching 159 files for \"jsonlogic]\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\4000 - validate-extractions.md:\n    6   \n    7  \n    8: Quality control the data extractions in a document type by writing validations using  [JsonLogic](https://jsonlogic.com/):\n    9  \n   10  - Test extracted fields using Boolean, logic, numeric, array, string, and other operations.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0600 - custom-computation.md:\n   15  | :----------------------- | :----------------------------------------- | :----------------------------------------------------------- |\n   16  | id (**required**)        | `customComputation`                        | This method has access to the  `parsed_document` object at [verbosity](doc:verbosity) = 0. <br/>This method doesn't infer [Sensible types](doc:types). It outputs `string, number, boolean, null` , or an array of those. For example, adding two currencies results in a number. This method returns null if you attempt to reference a variable that Sensible can't find in the `parsed_document`. |\n   17: | jsonLogic (**required**) | [JsonLogic](https://jsonlogic.com/) object | Transforms the output of one or more [Field objects](https://docs.sensible.so/docs/field-query-object) using JsonLogic. Supports all [JsonLogic operations](https://jsonlogic.com/operations.html) and extends them with Sensible operations. For more information, see th... <skipped 223 characters> ...\n   18  \n   19  ## Sensible operations\n   ..\n   24  \n   25  ```json\n   26: {\"exists\":[JsonLogic]}\n   27  ```\n   28  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0300 - accuracy-measures.md:\n    7  \n    8  \n    9: - **Logical validations**:  Write validations in [JsonLogic](https://jsonlogic.com/) to check that fields extracted from documents meet your conditions. For example, configure Sensible to return errors if a quoted rate is null, a broker's email isn't in string@string format, or if a zip code has more than 5 digits.  For more information, see [Validate extrac... <skipped 35 characters> ...\n   10  - **OCR confidence scores**: Get a score for the quality of text images. For example, check that text in a scanned or photographed document isn't blurry or illegible.  For more information, see [Validate extractions](doc:validate-extractions).  \n   11  - **Confidence signals**: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report that it found multiple answer candidates. For more information, see [Qualifying LLM accuracy](doc:confidence).\n\n4 matches across 3 files\n\n\nSearching 158 files for \"contains the foll\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   21  | offsetX           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset to the right, negative values offset to the left. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   22  | offsetY           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page.  For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   23: | offsetBoxes       | object. default: `none`                                      | Recognize a box offset from the point defined in the Position parameter by a number of contiguous boxes that share borders. For example, use this parameter for tables or grids where borders surround every cell. Contains the following parameters:<br/>\\- `direction`: The direction to search in (`above, below, right, left`, relative to the starting box.<br/>\\- `number`: The number of boxes to offset by.<br/>For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   24  | darknessThreshold | number between 0 and 1. default: 0.9                         | The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br/>If the document has a ... <skipped 36 characters> ...is 0.9.<br/>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   25  | includeAnchor     | `true`, `false`. default: false                              | If true, includes anchors lines that are inside the box borders in the method output. Ignores anchor lines that are outside box borders. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n   50  | --------------------- | -------------------------------------------------- | ------------------------------------------------------------ |\n   51  | anchor (**required**) | [Anchor](anchor) object, or array of Match objects | Anchor parameters have a special meaning in the context of sections, as follows:<br/><br/> **start**: Ignores anything in the document before this line. if undefined, Sensible searches for the section group starting at th... <skipped 684 characters> ...cognizes columns as sections automatically. For more information, see [Section nuances](doc:section-nuances#vertical-sections).<br/><br/>**end**: Ignores any anchor matches in the document after this line. For example, to extract solely September claims in the preceding image, specify `\"October\"`. |\n   52: <skipped 221 characters> ... example, use the external range with the [Intersection](doc:intersection) method when sections lack internal anchoring candidates.<br/>The external range defines a vertical range anywhere in the document. You can configure the external range to be static, or to repeat relative to each section.<br/>Contains the following parameters:<br/><br/>`anchor`  (**required**):  An [Anchor](https://docs.sensible.so/docs/anchor) object. The external range starts at the top boundary of this starting line, and the range's scope includes text to the left of this line. If the start of the range lacks an easy-to-match line, yo... <skipped 1536 characters> ...\n   53  | stop                  | [Anchor](anchor) object, or array of Match objects | **horizontal sections:**  Specifies the repeated end of the section after its anchor. For example, if you specify `\"Date of claim\"`, then each section stops at a horizontal line below the bottom boundary of the stop line ... <skipped 592 characters> ...span multiple columns. If not specified, Sensible ends the section group at the first line that spans multiple columns. If the spanning lines occur mid-column, you can also configure the Line Filters parameter.<br/>For more information, see [Section nuances](doc:section-nuances#vertical-sections). |\n   54  | requireStop           | Boolean. default: false                            | **horizontal sections:**  If true, the Stop parameter is required, and the section ends when it matches the Stop parameter, instead of the default behavior of ending at the next starting line specified in the anchor's Mat... <skipped 278 characters> ...e in the section. In such a case, Sensible ignores any zero-height sections generated by this horizontal line's matches. For more information, see [Multiple anchors in section](doc:section-nuances#multiple-anchors-in-section).<br/><br/>**vertical sections:** N/A, not allowed for vertical sections. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\2000 - tfidf.md:\n   61  | id (**required**)        | `tfidf`      | TFIDF  (term frequency--inverse document frequency) is an NLP technique that determine a category for the extracted text by matching it to a relevant Document parameter. |\n   62  | source_id (**required**) | field ID     | For every field you want to classify, create a TFIDF computed field and specify the field ID. If the source field outputs an array, then this method returns the classifications as a parallel array. |\n   63: | corpus                   | object array | Array of corpus objects. Each contains the following parameters:<br/>`id`: the category or classification you want applied to an element in the source ID array, if it scores highly against this corpus object. It's best practice to choose categories that are mutually exclusive. If the categories aren't mutually exclusive, then Sensible chooses a ... <skipped 262 characters> ...\n   64  \n   65  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\3000 - prompt.md:\n   54  | chunkSize              | `0.5`, `1` default:  see each method's [reference topic](doc:natural-language-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The size of the chunks Sensible splits the document into, as a page fraction. For example, `... <skipped 49 characters> ...lies to each Sensible Instruct field in the config. <br/>Often, chunk count and chunk size are related. For example, if you know that the data you seek is contained in one cover page, you can set chunk size to 1 and a chunk count to 1. | Overrides config-level parameter for a single field.         |\n   55  | chunkOverlapPercentage | `0`, `0.25`, `0.5` default: see each method's [reference topic](doc:natural-language-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The extent to which chunks overlap, as a percentage of the chunks' height. For exampl... <skipped 120 characters> ...br/>Sensible recommends setting a non-zero overlap to avoid splitting data across chunks. Set overlap to 0 solely if you're confident that your document layout doesn't flow across page boundaries and you're using a one-page chunk size. | Overrides config-level parameter for a single field.         |\n   56: <skipped 133 characters> ...ent. For details about context and chunks, see the Notes section.<br/>If specified, Sensible creates chunks in the page range and ignores other pages. For example, use this parameter to improve performance, or to avoid extracting unwanted data if your prompt has multiple candidate answers.<br/><br/>Contains the following parameters: <br/>`startPage`:  Zero-based index of the page at which Sensible starts creating chunks (inclusive). <br/>`endPage`: Zero-based index of the page at which Sensible stops creating chunks (exclusive).<br/><br/>**Note:** Sensible ignores this parameter when searching for a field's an... <skipped 197 characters> ...\n   57  \n   58  \n\n4 matches across 4 files\n\n\nSearching 158 files for \"in inches\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  517  ```\n  518  \n  519: This field defines a region in inches relative to the anchor. Since the region overlaps the anchor, specify a Word Filters parameter to remove the anchor text in the output. See the green box representing the region in the editor? This box dynamically resizes as you adjust the region parameters (such as the Height and Start parameters)... <skipped 62 characters> ...\n  520  \n  521  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_error_3.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n   32  | key           | values                  | description                                                  |\n   33  | ------------- | ----------------------- | ------------------------------------------------------------ |\n   34: | minimumHeight | number                  | The minimum height of the matched line's boundaries, in inches. Not valid as a top-level parameter for a Boolean match, but valid for individual matches in its array. |\n   35: | maximumHeight | number                  | The maximum height of the matched line's boundaries, in inches. Not valid as a top-level parameter for a Boolean match, but valid for individual matches in its array. |\n   36  | reverse       | boolean. default: false | Use in match arrays. Don't set this to true for the first match in the array, except in the External Range parameter for [sections](doc:sections).<br/>  If true, searches for a match in lines that precede the previous match in the array. For example, in an array with matches A and B, if B is a First match with `\"reverse\":true`, then Sensible matches the first line that *precedes* the line matched by A. For an example, see [Match arrays](doc:match-arrays#reverse-match). |\n   37: | xRangeFilter  |                         | The left-to-right range of the document, in inches, in which Sensible searches for a match. Contains the following parameters:<br/> |\n   38  \n   39  Simple match\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   24  | wordFilters                 | string array                                                 | Filters out the specified strings from the method results.   |\n   25  | whitespaceFilter            | `spaces`, `all`                                              | Remove extra whitespaces.<br/> `spaces` - remove solely extra spaces.<br/> `all` - remove all whitespace characters, including newlines. |\n   26: <skipped 407 characters> ...eters: <br/>`start` - `right`,`left`  - Defines the starting point of the \"column\" at either the right or left boundary of the anchor line.<br/> `offsetX` - Adjusts the horizontal position of the starting point defined by the Start parameter. <br/> `width` - The width of the page region to capture, in inches.<br/><br/> For an example, see the Examples section. |\n   27  | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28  | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter corrects this problem by sorting lines by their likely reading order. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   19  | id (**required**) | `box`                                                        | Extracts all lines in a box. If you define an anchor that's outside the box borders, then use offset parameters to define a point that's inside the box borders so that Sensible recognizes the box. |\n   20  | position          | `right`, `left`, `below`, `above`. default: center of the anchor line's bounding box | Use this parameter to fine tune box recognition. Defines the starting point for the box recognition relative to the anchor. For example, `right` specifies starting at the midpoint of the anchor line's right boundary, and `below` specifies starting at the midpoint of the anchor line's bottom boundary.  Sensible searches outward from this point until it finds dark pixels signifying the box border. <br/> For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   21: | offsetX           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset to the right, negative values offset to the left. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   22: | offsetY           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page.  For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   23  | offsetBoxes       | object. default: `none`                                      | Recognize a box offset from the point defined in the Position parameter by a number of contiguous boxes that share borders. For example, use this parameter for tables or grids where borders surround every cell. Contains the following parameters:<br/>\\- `direction`: The direction to search in (`above, below, right, left`, relative to the starting box.<br/>\\- `number`: The number of boxes to offset by.<br/>For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   24  | darknessThreshold | number between 0 and 1. default: 0.9                         | The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br/>If the document has a ... <skipped 36 characters> ...is 0.9.<br/>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   ..\n  220  - as an alternative to the Offset Boxes parameter. Offsets provide faster performance, but are more sensitive to inconsistent box positioning across documents and require more configuration. \n  221  \n  222: The following example shows the same document as the Offset Boxes example, but uses distances in inches rather than boxes to define the offsets.\n  223  \n  224  \n  ...\n  271  | ------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n  272  \n  273: The red arrows in the preceding image show the offsets in inches from the point defined by the Position parameter. The green dots move as you adjust the inches coordinates, so you can visually tweak your measurements in the Sensible app.\n  274  \n  275  **Output**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1100 - checkbox.md:\n   23  | id (**required**) | `checkbox`                      |                                                              |\n   24  | position          | `left`, `right`                 | Searches horizontally for a checkbox starting at the left or right anchor line boundaries and ending at the page margin. <br/> |\n   25: | offsetX           | number in inches. default: 0    | Indicates a point inside the checkbox. Instead of searching horizontally, Sensible  expands the search out in all directions from the point specified to find the checkbox bounding box.<br/><br/> For difficult pixel recognition, for example for large checkboxes or selection marks wi... <skipped 133 characters> ...\n   26: | offsetY           | number in inches. default: 0    | Indicates a point inside the checkbox. Instead of searching horizontally, Sensible  expands the search out in all directions from the point specified to find the checkbox bounding box.<br/><br/>For difficult pixel recognition, for example for large checkboxes or selection marks wit... <skipped 132 characters> ...\n   27: | width             | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Spec... <skipped 80 characters> ...\n   28: | height            | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Spec... <skipped 80 characters> ...\n   29  | darknessThreshold | number between 1 and 0.         | **For pixel recognition:**  The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document.<br/> |\n   30  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1300 - document-range.md:\n   22  | includeAnchor     | boolean. default: `false`                                    | Includes the anchor line in the method output.               |\n   23  | includeImages     | boolean. default: `false`                                    | Returns the zero-indexed page number and coordinates of regions containing images in the document range . **Notes**:<br/>  If you set  `true`,  also set`\"type\": \"images\"` in the `field` object (see Examples section for an example). <br/>Returns image region coordinates, not image bytes or text lines. |\n   24: | offsetY           | number in inches.                                            | Offsets the start of the document range. Positive values offset down the page, negative values offset up the page. For an example, see the Examples section.<br/> |\n   25  \n   26  Examples\n   ..\n  262  - Convert Sensible's coordinates for the image region to pixel per inch (PPI) coordinates. Sensible's region coordinates follow these conventions:\n  263    - they're in reference to a 0.0 origin at the *top left* corner of the page (not the bottom left origin, as is for example the convention with the popular PDF.js library)\n  264:   - they're in inches (to convert inches to pixels, multiply the inches coordinates by your PPI setting. For example, an x-coordinate of 3.156 inches is ~227 pixels for a PPI setting of 72 (72 PPI * 3.156 inches)).\n  265    - they're ordered clockwise from top left: (top left), (top right), (bottom right), (bottom left)\n  266  - Extract a partial bitmap defined by the PPI coordinates of the image from the rendered page.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1450 - intersection.md:\n   22  | id (**required**)             | `intersection`               |                                                              |\n   23  | verticalAnchor (**required**) | Anchor object                | An anchor object that defines a vertical line that bisects that anchor. Sensible extracts the line that's at the intersection of this vertical line, and the horizontal line defined by the field's anchor. The Vertical Anchor can be on a different page from the anchor. |\n   24: | offsetX                       | number in inches. default: 0 | Offsets the vertical line that bisects the vertical anchor.  Positive values offset to the right, negative values offset to the left. |\n   25: | offsetY                       | number in inches. default: 0 | Offsets the horizontal line that bisects the anchor. Positive values offset down the page, negative values offset up the page. |\n   26: | height                        | number in inches. default: 0 | Specifies to create a rectangular region centered at the intersection point. Sensible extracts lines that overlap to any extent with the region. If you don't specify the Width parameter, Sensible sets it to 0. |\n   27: | width                         | number in inches. default: 0 | Specifies to create a rectangular region centered at the intersection point. Sensible extracts lines that overlap to any extent with the region. If you don't specify the Height parameter, Sensible sets it to 0. |\n   28  \n   29  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1600 - label.md:\n   20  | position (**required**) | `above`, `below`, `left`, `right`                     | Specifies the direction of the target data relative to the anchor point. <br>For matching text above or below, by default the left boundary of the target line must align with the left boundary of the anchor line. If it's not aligned, then configure the Text Alignment parameter. <br/>For matching text to the left or right, this method returns the rest of the anchor line. For example, if the anchor line is <br/>`Comprehensive premium:$500` <br/>you can anchor on `\"comprehensive premium:\"` and return `$500` using`\"position\": \"right\"`. |\n   21  | stop                    | `first`, `gap`, or a Match object. default: `first`   | Use with  `\"position\": \"below\"`. <br/>Specifies to extract consecutive lines succeeding a label, rather than the default first line. <br/>For `gap` ,  the gaps between consecutive lines must be 0.1 inches or less. Th... <skipped 489 characters> ...ight of matching lines.<br/>3. Stops matching when it finds the specified stop. SenseML doesn't include the line that matches the Stop parameter in the output.<br/><br/>You can use the Tiebreaker parameter in combination with the Stop parameter to target a single nonconsecutive line after a label. |\n   22: <skipped 124 characters> ...tion\": \"above\"`. <br/>Matches lines that align to either the left or right boundaries of the anchor line. <br/> `hangingIndent` applies to  `\"position\": \"below\"`.  The vertical gap separating the anchor's and the first indented line's boundaries must be 0.3 inches or less. There are no restrictions in inches for the width of the indent. |\n   23  | includeAnchor           | boolean. default: `false`                             | Specifies whether to include the anchor text in the output. The text can be a partial line.  |\n   24  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1650 - nearest-checkbox.md:\n   27  | id (**required**)       | `nearestCheckbox`            | Sensible returns true for selected checkboxes and false for unselected checkboxes. |\n   28  | position (**required**) | `left`, `right`              | Defines the starting point for searching for the nearest selection mark. Sensible searches outward from this point in all directions.  `right`  specifies starting at the midpoint of the anchor line's right boundary, and `left` specifies starting at the midpoint of the anchor line's left boundary. |\n   29: | offsetX                 | number in inches. default: 0 | Searches for a selection mark starting at a point offset from the point defined by the Position parameter. Positive values offset to the right, negative values offset to the left. |\n   30: | offsetY                 | number in inches. default: 0 | Searches for a selection mark starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page. |\n   31  \n   32  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1900 - region.md:\n    5  ---\n    6  \n    7: Extracts data in a rectangular region, defined in inches. The region extracts lines contained inside the region (for the definition of \"contained\", see the Parameters section). \n    8  \n    9  In general, use this method:\n   ..\n   25  | id (**required**)      | `region`                          | Extracts lines contained in the region, where \"contained\" means:<br/>  - condition 1: the region and the line's boundary box overlap for at least 90% of either the region *or* the line's width (\"x extent\").<br/> AND<br/> - condition 2: t... <skipped 196 characters> ...xtents. For example, if the line is less wide than the region, condition 1 is met if the overlap is 90% of the line's width. If the region is less wide than the line, condition 1 is met if the overlap is 90% of the region's width.  The same logic for calculating percentages applies to condition 2. |\n   26  | start (**required**)   | `above`, `below`, `left`, `right` | Defines the starting point for the extraction region relative to the anchor. For example,  `right`  specifies starting at the midpoint of the anchor line's right boundary, and `below` specifies starting at the midpoint of the anchor line's bottom boundary. |\n   27: | offsetX (**required**) | number                            | The horizontal offset in inches from the point defined in the Start parameter to the top left corner of the region. Positive values offset to the right, negative values offset to the left.<br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking... <skipped 89 characters> ...\n   28: | offsetY (**required**) | number                            | The vertical offset in inches from the point defined in the Start parameter to the top left corner of the region. Positive values offset down the page, negative values offset up the page.<br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clickin... <skipped 90 characters> ...\n   29: | width (**required**)   | number                            | The width in inches of the region. <br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking a point in the document in the Sensible app, then dragging to display inch dimensions. |\n   30: | height (**required**)  | number                            | The height in inches of the region. <br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking a point in the document in the Sensible app, then dragging to display inch dimensions. |\n   31  | isAbsoluteOffset       | boolean. default: `false`         | Makes the offsets relative to the 0,0 origin at the top left of the page rather than to the Start parameter. |\n   32  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - draft-text-table.md:\n    8  | :------------------- | :------ | :----------------------------------------------------------- |\n    9  | id **required**      | `table` | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   10: <skipped 37 characters> ... array of objects with the following parameters:<br/> -`id` (**required**): The id for the column in the extraction output. <br/>**To specify fallbacks, use the same ID for multiple columns. Succeeding columns act as fallbacks if the first returns null.** <br/> -`minX` (**required**):  The distance in inches on the page from the left edge of the page to the left edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions.  <br/>  -`maxX` (**required**):  The distance in inches on the page from the left edge of the page to the right edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions. <br/>  -`type`: The table cell's type. For more information about types, see [Types](doc:types)... <skipped 517 characters> ...\n   11  |                      |         |                                                              |\n   12  |                      |         |                                                              |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - text-table.md:\n    3  hidden: false\n    4  ---\n    5: Matches tables based on column coordinates in inches and returns their collated column contents.  Anchor on the table title, or use a negative Offset Y parameter to enable anchoring on a column heading.\n    6  \n    7  This method's advantages are:\n    .\n   25  | :------------------------ | :------------------------------------------------------- | :----------------------------------------------------------- |\n   26  | id **required**           | `table`                                                  | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   27: | columns **required**      | array                                                    | An array of objects with the following parameters:<br/> -`id` (**required**): The id for the column in the extraction output.<br/> -`minX` (**required**):  The distance in inches on the page from the left edge of the page to the left edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions.  <br/>  -`maxX` (**required**):  The distance in inches on the page from the left edge of the page to the right edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions. <br/>  -`type`: The table cell's type. For more information about types, see [Types](doc:types)... <skipped 517 characters> ...\n   28: | offsetY                   | number in inches.                                        | Defines a starting point for recognizing a table, offset vertically from the anchor line's lower boundary. <br/>For example, if no table title precedes the table, then anchor instead on a column heading and use a negative Offset Y parameter to define a starting point above the table. |\n   29: | stop                      | Match object, array of Match objects, or number (inches) | (**Recommended**) Line to match or number in inches to stop table recognition:.<br/>  - A Match object or array specifies to stop table recognition when Sensible matches text.<br/> - A number specifies the end of the table as the number of the inches offset along a Y-axis from the start of the table.<br/><br/>Specify this parameter to prevent extrac... <skipped 575 characters> ...\n   30  | startOnRow                | integer. default: 0                                      | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n   31  | detectMultipleLinesPerRow | boolean. default: false                                  | If true, Sensible detects table cells containing multiple lines, rather than the default of treating each line as a new row. In detail, Sensible detects that a cell contains multiple lines if the vertical gap between two lines is less than half the height of the second line.<br/>Set this to false if row gutters are narrow. For example, if vertical gaps between lines in the cells are the same height as row gutters, Sensible can incorrectly merge multiple rows into one. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n   18  | ------------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)     | `deskew` |                                                    |\n   20: <skipped 452 characters> ...h` - the text to match for the Fixed Point. Choose `\"type\": \"startsWith\"`  or `\"type\": \"endsWith\"` to avoid problems with lines oversplit by skew. See [Match object](doc:match) for more details.<br/>`targetPosition` - contains  `x` and  `y` parameters that define the coordinates of the Fixed Points in inches relative to the 0,0 origin at the top left corner of the page. For more information defining the positions, see the Examples section. |\n   21  | start | `left` , `right`. default: `left` | Specifies whether the Fixed Point is at the upper-*left* corner of the anchor line's boundaries, or the upper-*right* corner. <br/>With a Match parameter of `\"type\": \"startsWith\"`, use `left`.<br/>With a Match parameter of `\"type\": \"endsWith\"`, use `right`. |\n   22  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1050 - merge-lines.md:\n   25  | adjacentThreshold (**required**)         | number >= 0.6                          | Corrects oversplit lines. <br/>Specifies the fraction of line height under which to merge two adjacent lines distributed along an x-axis *with* a space. The built-in merger uses 0.6, so choosing a larger number merges more aggressively.<br> For an example, see the Examples section. |\n   26  | yOverlapThreshold                        | number between 0 and 1.0. default: 1.0 | Merges lines that aren't perfectly aligned at the same height on the page. <br/> Specifies the y overlap above which the Merge Lines preprocessor merges two adjacent lines. Y overlap is the section of the joint y-axis range of two lines that's occupied by both lines. For example, if two lines share the same minimum and maximum y-axis values, their overlap is 1. If one line's extent is from 0 to 10 and the other line’s extent is from 2 to 12 on the y-axis, their overlap is .667 (8 / 12). <br/>For an example, see the Examples section. |\n   27: | minXGapThreshold                         | number in inches                       | Configure this parameter if two lines overlap on an x-axis. The default behavior is to merge these overlapping lines into one line. To split them instead, set a cap on the amount of allowable overlap. For example:<br/>0 - splits lines if their line boundaries are touching bu... <skipped 216 characters> ...\n   28  \n   29  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   22  | startsOnPage | integer. default: 1 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   23  | match | [Match](doc:match) object or array of Match objects | Bypasses automatic footer recognition.<br/>Removes all text on the page below the bottom boundary of the matched line.<br>If Sensible doesn't find the match, it doesn't perform footer removal. |\n   24: | offsetY | number in inches. default: 0 | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the bottom of the page.<br>If used with the Match parameter, o... <skipped 60 characters> ...\n   25  \n   26  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   20  | startsOnPage        | integer. default: 1                                 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   21  | match               | [Match](doc:match) object or array of Match objects | Bypasses automatic header recognition.<br/>Removes all text on the page above the top boundary of the matched line.<br/>If Sensible doesn't find the match, it doesn't perform header removal. |\n   22: | offsetY             | number in inches. default: 0                        | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the top of the page.<br/>If used with t... <skipped 78 characters> ...\n   23  \n   24  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n   20  | ------------------- | ---------------- | ------------------------------------------------------------ |\n   21  | type (**required**) | `scale`          |                                                              |\n   22: <skipped 432 characters> ...ent. For example, don't create a sample that can match to both a heading 1 and a heading 4 style.<br/>- Choose samples that appear on each page, such as headers or footers.<br/>Each example object has the following parameters:<br/> `match`: a [Match](doc:match) object<br/>`targetHeight`: the number in inches of the match at 100% scale. |\n   23  | perPage             | boolean          | If true, Sensible rescales each page individually against the Target Height parameter, taking the average of  all matches' heights on that page rather than in the whole document. For example, if a tax return contains multiple W-2 forms, but each W-2 can be scanned at an unpredictable scale, then you can set this parameter to true and match on text such as the `\"Wage and Tax\"` and the `W-2` titles in the W-2 form. |\n   24  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n   53  | stop                  | [Anchor](anchor) object, or array of Match objects | **horizontal sections:**  Specifies the repeated end of the section after its anchor. For example, if you specify `\"Date of claim\"`, then each section stops at a horizontal line below the bottom boundary of the stop line ... <skipped 592 characters> ...span multiple columns. If not specified, Sensible ends the section group at the first line that spans multiple columns. If the spanning lines occur mid-column, you can also configure the Line Filters parameter.<br/>For more information, see [Section nuances](doc:section-nuances#vertical-sections). |\n   54  | requireStop           | Boolean. default: false                            | **horizontal sections:**  If true, the Stop parameter is required, and the section ends when it matches the Stop parameter, instead of the default behavior of ending at the next starting line specified in the anchor's Mat... <skipped 278 characters> ...e in the section. In such a case, Sensible ignores any zero-height sections generated by this horizontal line's matches. For more information, see [Multiple anchors in section](doc:section-nuances#multiple-anchors-in-section).<br/><br/>**vertical sections:** N/A, not allowed for vertical sections. |\n   55: | offsetY               | number in inches                                   | Specifies an offset from the anchor Match parameter.  Positive values offset down the page, negative values offset up the page. <br/><br/> **horizontal sections:** Specifies the number of inches to offset the section's top boundary from the anchor Match parameter... <skipped 486 characters> ...\n   56: | stopOffsetY           | number in inches                                   | Specifies the number of inches to offset from the Stop parameter. <br/><br/>**horizontal sections:**  Offsets each section's stop from the Stop horizontal line.<br><br/>**vertical sections:** Offsets the section *group's* stop from the Stop horizontal line. |\n   57  \n   58  ### Range parameters for columns\n   ..\n   67  | columnSelection | array of index selections where each \"index selection\" can be:<br/>- a column index or comma-delimited indices<br><br>- an array with two comma-delimited indices, meaning all the columns in the indices range<br/><br/> default: capture all columns (`[]`) | Use to configure which c... <skipped 295 characters> ...lines from any other columns to each section. <br/>`[1,3,-1]`  selects 2nd, 4th, and the last columns. Use negative indices to offset from the last column. <br/> `[1,[3,7]]` selects the 2nd column and the 4th through 8th columns.<br/>  `[[0, -2]]` selects 1st through 2nd-to-last columns.<br/><br/> |\n   68  | ignoredColumns  | integer array.                                               | Removes unwanted columns from both the output *and* from the SenseML search scope. For example, this is useful if the columns contain text that interferes with anchoring on other columns. |\n   69: | minColumnGap    | number in inches. default: 0                                 | Configures column recognition by specifying the smallest allowed width of the gutters separating the columns. For an example, see [Table grid example](doc:sections-example-table-grid). Use when text in a column contains whitespace gaps such that Sensibl... <skipped 203 characters> ...\n   70  | lineFilters     | Match object, or array of Match objects                      | Use to ignore lines that span columns and break column recognition. For example, if the lines occur mid-column, use this parameter rather than a Stop parameter to exclude the lines. Sensible excludes the lines both from the output and from the SenseML search scope.<br/>You don't need to configure this parameter if you specify a Stop parameter. For more information, see [Section nuances](doc:section-nuances#vertical-sections). |\n   71  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - advanced-methods\\2000 - signature.md:\n    9  | id               | `signature`                                         |                                                              |\n   10  | start            | Direction, one of `above`, `below`, `left`, `right` | A direction specifying where to start relative to the anchor point. `right` starts at the middle of the right edge, `below` starts at the middle of the bottom edge, and so forth |\n   11: | offsetX          | number                                              | The offset in inches from the starting point along the X axis. Positive values offset to the right, negative values offset to the left. |\n   12: | offsetY          | number                                              | The offset in inches from the starting point along the Y axis. Positive values offset down the page, negative values offset up the page. |\n   13: | width            | number                                              | The width in inches of the extraction region                 |\n   14: | height           | number                                              | The height in inches of the extraction region                |\n   15  | isAbsoluteOffset | `true`, `false`                                     | optional, default false  A flag to make the offsets relative to the top left of the page rather than to the anchor start point |\n   16  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4600 - table-methods.md:\n   13  | Table       | layout   | Extracts tables based on bag-of-words scoring.               | For tables that have variable column formatting.           |\n   14  | Fixed Table | layout   | Extracts tables with a fixed number and layout of columns.   | Faster than Table method.                                  |\n   15: | Text Table  | layout   | Extracts tables based on column coordinates in inches.       | Fastest table method.                                      |\n   16  \n   17  ### Features supported\n\n47 matches across 20 files\n\n\nSearching 158 files for \"x range\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   24  | wordFilters                 | string array                                                 | Filters out the specified strings from the method results.   |\n   25  | whitespaceFilter            | `spaces`, `all`                                              | Remove extra whitespaces.<br/> `spaces` - remove solely extra spaces.<br/> `all` - remove all whitespace characters, including newlines. |\n   26: | xRangeFilter                | object                                                       | Defines left and right boundaries in which to capture lines. For example, in combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom by text.  This column excludes any lines that partially fall outside the defined rectangular region. Parameters: <br/>`start` - `right`,`left`  - Defines the starting point of the \"column\" at either the right or left boundary ... <skipped 244 characters> ...\n   27  | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28  | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter corrects this problem by sorting lines by their likely reading order. |\n   ..\n  148  \n  149  \n  150: X Range Filter example\n  151  ----\n  152  \n  153: In combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom by text.\n  154  \n  155  The following image shows using this parameter to extract a \"cell\" of text that doesn't fit other methods:\n  ...\n  159  \n  160  \n  161: In this example, the X Range Filter parameter is the best option:\n  162  \n  163  - Document Range by itself isn't a good option, because it captures the address of the importer as well as the supplier. \n\n4 matches in 1 file\n\n\nSearching 158 files for \"inches\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_configuration.yml:\n 1425                This PDF is password protected. Please resubmit with password protection disabled\n 1426                This PDF is empty\n 1427:               This PDF exceeds the maximum dimensions for OCR of 17 x 17 inches\n 1428                This PDF exceeds the maximum size for OCR of 50MB\n 1429                No fingerprints match for this PDF and fingerprint_mode is set to strict\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n  717                This PDF is password protected. Please resubmit with password protection disabled\n  718                This PDF is empty\n  719:               This PDF exceeds the maximum dimensions for OCR of 17 x 17 inches\n  720                This PDF exceeds the maximum size for OCR of 50MB\n  721                No fingerprints match for this PDF and fingerprint_mode is set to strict\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  313      }\n  314  \n  315: This returns null, because the Label method works for text in the same line or in proximate lines. In this case, the problem is that the gap between the two lines of text is more than 0.2 inches:\n  316  \n  317  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_concept_2.png)\n  ...\n  517  ```\n  518  \n  519: This field defines a region in inches relative to the anchor. Since the region overlaps the anchor, specify a Word Filters parameter to remove the anchor text in the output. See the green box representing the region in the editor? This box dynamically resizes as you adjust the region parameters (such as the Height and Start parameters)... <skipped 62 characters> ...\n  520  \n  521  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_error_3.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n   32  | key           | values                  | description                                                  |\n   33  | ------------- | ----------------------- | ------------------------------------------------------------ |\n   34: | minimumHeight | number                  | The minimum height of the matched line's boundaries, in inches. Not valid as a top-level parameter for a Boolean match, but valid for individual matches in its array. |\n   35: | maximumHeight | number                  | The maximum height of the matched line's boundaries, in inches. Not valid as a top-level parameter for a Boolean match, but valid for individual matches in its array. |\n   36  | reverse       | boolean. default: false | Use in match arrays. Don't set this to true for the first match in the array, except in the External Range parameter for [sections](doc:sections).<br/>  If true, searches for a match in lines that precede the previous match in the array. For example, in an array with matches A and B, if B is a First match with `\"reverse\":true`, then Sensible matches the first line that *precedes* the line matched by A. For an example, see [Match arrays](doc:match-arrays#reverse-match). |\n   37: | xRangeFilter  |                         | Defines a left-to-right range, or \"column\", in which to search for a match. Contains the following parameters:<br/>`minX` Defines the left boundary of the range, in zero-indexed inches from the left side of the page.<br/>`maxX` Defines the right boundary of the range, in zero-indexed inches from the left side of the page.<br/>Not valid as a top-level parameter for a Boolean match, but valid for individual matches in its array. |\n   38  \n   39  Simple match\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   24  | wordFilters                 | string array                                                 | Filters out the specified strings from the method results.   |\n   25  | whitespaceFilter            | `spaces`, `all`                                              | Remove extra whitespaces.<br/> `spaces` - remove solely extra spaces.<br/> `all` - remove all whitespace characters, including newlines. |\n   26: <skipped 433 characters> ...rs: <br/>`start` - `right`,`left`  - Defines the starting point of the \"column\" at either the right or left boundary of the anchor line.<br/> `offsetX` - Adjusts the horizontal position of the starting point defined by the Start parameter. <br/> `width` - The width of the page region to capture, in inches.<br/><br/> For an example, see the Examples section. |\n   27  | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28  | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter corrects this problem by sorting lines by their likely reading order. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   19  | id (**required**) | `box`                                                        | Extracts all lines in a box. If you define an anchor that's outside the box borders, then use offset parameters to define a point that's inside the box borders so that Sensible recognizes the box. |\n   20  | position          | `right`, `left`, `below`, `above`. default: center of the anchor line's bounding box | Use this parameter to fine tune box recognition. Defines the starting point for the box recognition relative to the anchor. For example, `right` specifies starting at the midpoint of the anchor line's right boundary, and `below` specifies starting at the midpoint of the anchor line's bottom boundary.  Sensible searches outward from this point until it finds dark pixels signifying the box border. <br/> For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   21: | offsetX           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset to the right, negative values offset to the left. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   22: | offsetY           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page.  For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   23  | offsetBoxes       | object. default: `none`                                      | Recognize a box offset from the point defined in the Position parameter by a number of contiguous boxes that share borders. For example, use this parameter for tables or grids where borders surround every cell. Contains the following parameters:<br/>\\- `direction`: The direction to search in (`above, below, right, left`, relative to the starting box.<br/>\\- `number`: The number of boxes to offset by.<br/>For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   24  | darknessThreshold | number between 0 and 1. default: 0.9                         | The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br/>If the document has a ... <skipped 36 characters> ...is 0.9.<br/>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   ..\n  220  - as an alternative to the Offset Boxes parameter. Offsets provide faster performance, but are more sensitive to inconsistent box positioning across documents and require more configuration. \n  221  \n  222: The following example shows the same document as the Offset Boxes example, but uses distances in inches rather than boxes to define the offsets.\n  223  \n  224  \n  ...\n  271  | ------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n  272  \n  273: The red arrows in the preceding image show the offsets in inches from the point defined by the Position parameter. The green dots move as you adjust the inches coordinates, so you can visually tweak your measurements in the Sensible app.\n  274  \n  275  **Output**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1100 - checkbox.md:\n    9  - If the document is a PDF that contains checkbox metadata, then Sensible preferentially uses the metadata to extract selection status.  \n   10  \n   11: - If there's no metadata, Sensible falls back to pixel recognition. By default Sensible recognizes pixels as checkboxes if they have a light background and dark, continuous borders. The maximum checkbox size supported by default for pixel recognition is a square with sides 0.3 inches long. Sensible returns true if  there are more that 5% darkened pixels within the box, indicating that it contains a selection mark.  Sensible  returns false if the box is empty. \n   12  \n   13  [**Parameters**](doc:checkbox#parameters)\n   ..\n   23  | id (**required**) | `checkbox`                      |                                                              |\n   24  | position          | `left`, `right`                 | Searches horizontally for a checkbox starting at the left or right anchor line boundaries and ending at the page margin. <br/> |\n   25: | offsetX           | number in inches. default: 0    | Indicates a point inside the checkbox. Instead of searching horizontally, Sensible  expands the search out in all directions from the point specified to find the checkbox bounding box.<br/><br/> For difficult pixel recognition, for example for large checkboxes or selection marks wi... <skipped 133 characters> ...\n   26: | offsetY           | number in inches. default: 0    | Indicates a point inside the checkbox. Instead of searching horizontally, Sensible  expands the search out in all directions from the point specified to find the checkbox bounding box.<br/><br/>For difficult pixel recognition, for example for large checkboxes or selection marks wit... <skipped 132 characters> ...\n   27: | width             | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Spec... <skipped 80 characters> ...\n   28: | height            | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Spec... <skipped 80 characters> ...\n   29  | darknessThreshold | number between 1 and 0.         | **For pixel recognition:**  The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document.<br/> |\n   30  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1300 - document-range.md:\n   22  | includeAnchor     | boolean. default: `false`                                    | Includes the anchor line in the method output.               |\n   23  | includeImages     | boolean. default: `false`                                    | Returns the zero-indexed page number and coordinates of regions containing images in the document range . **Notes**:<br/>  If you set  `true`,  also set`\"type\": \"images\"` in the `field` object (see Examples section for an example). <br/>Returns image region coordinates, not image bytes or text lines. |\n   24: | offsetY           | number in inches.                                            | Offsets the start of the document range. Positive values offset down the page, negative values offset up the page. For an example, see the Examples section.<br/> |\n   25  \n   26  Examples\n   ..\n  262  - Convert Sensible's coordinates for the image region to pixel per inch (PPI) coordinates. Sensible's region coordinates follow these conventions:\n  263    - they're in reference to a 0.0 origin at the *top left* corner of the page (not the bottom left origin, as is for example the convention with the popular PDF.js library)\n  264:   - they're in inches (to convert inches to pixels, multiply the inches coordinates by your PPI setting. For example, an x-coordinate of 3.156 inches is ~227 pixels for a PPI setting of 72 (72 PPI * 3.156 inches)).\n  265    - they're ordered clockwise from top left: (top left), (top right), (bottom right), (bottom left)\n  266  - Extract a partial bitmap defined by the PPI coordinates of the image from the rendered page.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1450 - intersection.md:\n   22  | id (**required**)             | `intersection`               |                                                              |\n   23  | verticalAnchor (**required**) | Anchor object                | An anchor object that defines a vertical line that bisects that anchor. Sensible extracts the line that's at the intersection of this vertical line, and the horizontal line defined by the field's anchor. The Vertical Anchor can be on a different page from the anchor. |\n   24: | offsetX                       | number in inches. default: 0 | Offsets the vertical line that bisects the vertical anchor.  Positive values offset to the right, negative values offset to the left. |\n   25: | offsetY                       | number in inches. default: 0 | Offsets the horizontal line that bisects the anchor. Positive values offset down the page, negative values offset up the page. |\n   26: | height                        | number in inches. default: 0 | Specifies to create a rectangular region centered at the intersection point. Sensible extracts lines that overlap to any extent with the region. If you don't specify the Width parameter, Sensible sets it to 0. |\n   27: | width                         | number in inches. default: 0 | Specifies to create a rectangular region centered at the intersection point. Sensible extracts lines that overlap to any extent with the region. If you don't specify the Height parameter, Sensible sets it to 0. |\n   28  \n   29  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1600 - label.md:\n   17  | Key                     | Value                                                 | Description                                                  |\n   18  | ----------------------- | ----------------------------------------------------- | ------------------------------------------------------------ |\n   19: | id (**required**)       | `label`                                               | The gap between the borders of the target line and the anchor line must be 0.2 inches or less. |\n   20  | position (**required**) | `above`, `below`, `left`, `right`                     | Specifies the direction of the target data relative to the anchor point. <br>For matching text above or below, by default the left boundary of the target line must align with the left boundary of the anchor line. If it's not aligned, then configure the Text Alignment parameter. <br/>For matching text to the left or right, this method returns the rest of the anchor line. For example, if the anchor line is <br/>`Comprehensive premium:$500` <br/>you can anchor on `\"comprehensive premium:\"` and return `$500` using`\"position\": \"right\"`. |\n   21: | stop                    | `first`, `gap`, or a Match object. default: `first`   | Use with  `\"position\": \"below\"`. <br/>Specifies to extract consecutive lines succeeding a label, rather than the default first line. <br/>For `gap` ,  the gaps between consecutive lines must be 0.1 inches or less. The method stops when it reaches a vertical gap of 0.2 inches between line boundaries.<br/>For a Match object, this method stops when it reaches a matching line.<br/>.<br/>When you specify this parameter, this method:<br/>1. Matches the first target line.<br/> 2. Continues down the page matching lines aligned to the left boundary of the first matching line, u... <skipped 430 characters> ...\n   22: <skipped 82 characters> ...| Use with `\"position\": \"below\"` or `\"position\": \"above\"`. <br/>Matches lines that align to either the left or right boundaries of the anchor line. <br/> `hangingIndent` applies to  `\"position\": \"below\"`.  The vertical gap separating the anchor's and the first indented line's boundaries must be 0.3 inches or less. There are no restrictions in inches for the width of the indent. |\n   23  | includeAnchor           | boolean. default: `false`                             | Specifies whether to include the anchor text in the output. The text can be a partial line.  |\n   24  \n   ..\n   31  2. The `one_line_label` field extracts text to the right of a label on the same line, and filters out an unwanted string. \n   32  3. The `hanging_indent_label` field extracts consecutive lines of text by using a Stop parameter. The method extracts indented lines (`\"textAlignment\": \"hangingIndent\"`) , and the match does **not** include lines to the left or right of matching aligned lines. \n   33: 4. The `only_looks_like_a_label` field returns `null` because labels don't work for lines separated by more than 0.2 inches.\n   34  \n   35  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1650 - nearest-checkbox.md:\n   27  | id (**required**)       | `nearestCheckbox`            | Sensible returns true for selected checkboxes and false for unselected checkboxes. |\n   28  | position (**required**) | `left`, `right`              | Defines the starting point for searching for the nearest selection mark. Sensible searches outward from this point in all directions.  `right`  specifies starting at the midpoint of the anchor line's right boundary, and `left` specifies starting at the midpoint of the anchor line's left boundary. |\n   29: | offsetX                 | number in inches. default: 0 | Searches for a selection mark starting at a point offset from the point defined by the Position parameter. Positive values offset to the right, negative values offset to the left. |\n   30: | offsetY                 | number in inches. default: 0 | Searches for a selection mark starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page. |\n   31  \n   32  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1900 - region.md:\n    5  ---\n    6  \n    7: Extracts data in a rectangular region, defined in inches. The region extracts lines contained inside the region (for the definition of \"contained\", see the Parameters section). \n    8  \n    9  In general, use this method:\n   ..\n   25  | id (**required**)      | `region`                          | Extracts lines contained in the region, where \"contained\" means:<br/>  - condition 1: the region and the line's boundary box overlap for at least 90% of either the region *or* the line's width (\"x extent\").<br/> AND<br/> - condition 2: t... <skipped 196 characters> ...xtents. For example, if the line is less wide than the region, condition 1 is met if the overlap is 90% of the line's width. If the region is less wide than the line, condition 1 is met if the overlap is 90% of the region's width.  The same logic for calculating percentages applies to condition 2. |\n   26  | start (**required**)   | `above`, `below`, `left`, `right` | Defines the starting point for the extraction region relative to the anchor. For example,  `right`  specifies starting at the midpoint of the anchor line's right boundary, and `below` specifies starting at the midpoint of the anchor line's bottom boundary. |\n   27: | offsetX (**required**) | number                            | The horizontal offset in inches from the point defined in the Start parameter to the top left corner of the region. Positive values offset to the right, negative values offset to the left.<br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking... <skipped 89 characters> ...\n   28: | offsetY (**required**) | number                            | The vertical offset in inches from the point defined in the Start parameter to the top left corner of the region. Positive values offset down the page, negative values offset up the page.<br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clickin... <skipped 90 characters> ...\n   29: | width (**required**)   | number                            | The width in inches of the region. <br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking a point in the document in the Sensible app, then dragging to display inch dimensions. |\n   30: | height (**required**)  | number                            | The height in inches of the region. <br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking a point in the document in the Sensible app, then dragging to display inch dimensions. |\n   31  | isAbsoluteOffset       | boolean. default: `false`         | Makes the offsets relative to the 0,0 origin at the top left of the page rather than to the Start parameter. |\n   32  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2000 - row.md:\n    5  Matches all lines to the left or right of the anchor line. \n    6  \n    7:  A \"row\" is lines of text distributed along a horizontal line. Each matching line in the \"row\" must have a top boundary that's within 0.08 inches below or above the anchor's top boundary (total range is 0.16\" inches). For example, the following image shows a red line that defines the alignment for a row of text:\n    8  \n    9  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/row_align.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - draft-text-table.md:\n    8  | :------------------- | :------ | :----------------------------------------------------------- |\n    9  | id **required**      | `table` | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   10: <skipped 40 characters> ...ray of objects with the following parameters:<br/> -`id` (**required**): The id for the column in the extraction output. <br/>**To specify fallbacks, use the same ID for multiple columns. Succeeding columns act as fallbacks if the first returns null.** <br/> -`minX` (**required**):  The distance in inches on the page from the left edge of the page to the left edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions.  <br/>  -`maxX` (**required**):  The distance in inches on the page from the left edge of the page to the right edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions. <br/>  -`type`: The table cell's type. For more information about types, see [Types](doc:types)... <skipped 517 characters> ...\n   11  |                      |         |                                                              |\n   12  |                      |         |                                                              |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - text-table.md:\n    3  hidden: false\n    4  ---\n    5: Matches tables based on column coordinates in inches and returns their collated column contents.  Anchor on the table title, or use a negative Offset Y parameter to enable anchoring on a column heading.\n    6  \n    7  This method's advantages are:\n    .\n   25  | :------------------------ | :------------------------------------------------------- | :----------------------------------------------------------- |\n   26  | id **required**           | `table`                                                  | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   27: | columns **required**      | array                                                    | An array of objects with the following parameters:<br/> -`id` (**required**): The id for the column in the extraction output.<br/> -`minX` (**required**):  The distance in inches on the page from the left edge of the page to the left edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions.  <br/>  -`maxX` (**required**):  The distance in inches on the page from the left edge of the page to the right edge of the column. To visually determine this coordinate, click a point in the document in the Sensible app, then drag to display inch dimensions. <br/>  -`type`: The table cell's type. For more information about types, see [Types](doc:types)... <skipped 517 characters> ...\n   28: | offsetY                   | number in inches.                                        | Defines a starting point for recognizing a table, offset vertically from the anchor line's lower boundary. <br/>For example, if no table title precedes the table, then anchor instead on a column heading and use a negative Offset Y parameter to define a starting point above the table. |\n   29: | stop                      | Match object, array of Match objects, or number (inches) | (**Recommended**) Line to match or number in inches to stop table recognition:.<br/>  - A Match object or array specifies to stop table recognition when Sensible matches text.<br/> - A number specifies the end of the table as the number of the inches offset along a Y-axis from the start of the table.<br/><br/>Specify this parameter to prevent extracting non-table data and to enable recognizing a table that spans pages. If you don't specify this parameter, the table extends to the end of the page.<br/><br/>**Tip:**  In advanced use cases, you ca... <skipped 376 characters> ...\n   30  | startOnRow                | integer. default: 0                                      | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n   31  | detectMultipleLinesPerRow | boolean. default: false                                  | If true, Sensible detects table cells containing multiple lines, rather than the default of treating each line as a new row. In detail, Sensible detects that a cell contains multiple lines if the vertical gap between two lines is less than half the height of the second line.<br/>Set this to false if row gutters are narrow. For example, if vertical gaps between lines in the cells are the same height as row gutters, Sensible can incorrectly merge multiple rows into one. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\draft-nlp-table-title.md:\n   11  \n   12  -  Sensible extracts lines contained in a rectangular region immediately above each table, since that region is likely to contain the table title. \n   13: -  The height of that region equals the line height of the first non-empty cell of the table + 0.1 inches, and the region extends down to the top boundary of the table.\n   14  -  For information about how Sensible determines if lines are \"contained\" in a region, see [Region](doc:region).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n   18  | ------------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)     | `deskew` |                                                    |\n   20: <skipped 455 characters> ...- the text to match for the Fixed Point. Choose `\"type\": \"startsWith\"`  or `\"type\": \"endsWith\"` to avoid problems with lines oversplit by skew. See [Match object](doc:match) for more details.<br/>`targetPosition` - contains  `x` and  `y` parameters that define the coordinates of the Fixed Points in inches relative to the 0,0 origin at the top left corner of the page. For more information defining the positions, see the Examples section. |\n   21  | start | `left` , `right`. default: `left` | Specifies whether the Fixed Point is at the upper-*left* corner of the anchor line's boundaries, or the upper-*right* corner. <br/>With a Match parameter of `\"type\": \"startsWith\"`, use `left`.<br/>With a Match parameter of `\"type\": \"endsWith\"`, use `right`. |\n   22  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1050 - merge-lines.md:\n   25  | adjacentThreshold (**required**)         | number >= 0.6                          | Corrects oversplit lines. <br/>Specifies the fraction of line height under which to merge two adjacent lines distributed along an x-axis *with* a space. The built-in merger uses 0.6, so choosing a larger number merges more aggressively.<br> For an example, see the Examples section. |\n   26  | yOverlapThreshold                        | number between 0 and 1.0. default: 1.0 | Merges lines that aren't perfectly aligned at the same height on the page. <br/> Specifies the y overlap above which the Merge Lines preprocessor merges two adjacent lines. Y overlap is the section of the joint y-axis range of two lines that's occupied by both lines. For example, if two lines share the same minimum and maximum y-axis values, their overlap is 1. If one line's extent is from 0 to 10 and the other line’s extent is from 2 to 12 on the y-axis, their overlap is .667 (8 / 12). <br/>For an example, see the Examples section. |\n   27: | minXGapThreshold                         | number in inches                       | Configure this parameter if two lines overlap on an x-axis. The default behavior is to merge these overlapping lines into one line. To split them instead, set a cap on the amount of allowable overlap. For example:<br/>0 - splits lines if their line boundaries are touching but not overlapping.<br/>0.1 - splits lines if their boundaries overlap a little, up to 0.1 inches.<br/>2.0 - splits lines even when they overlap a lot, up to 2.0 inches.<br/>For an example, see the Examples section. |\n   28  \n   29  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   22  | startsOnPage | integer. default: 1 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   23  | match | [Match](doc:match) object or array of Match objects | Bypasses automatic footer recognition.<br/>Removes all text on the page below the bottom boundary of the matched line.<br>If Sensible doesn't find the match, it doesn't perform footer removal. |\n   24: | offsetY | number in inches. default: 0 | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the bottom of the page.<br>If used with the Match parameter, o... <skipped 60 characters> ...\n   25  \n   26  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   20  | startsOnPage        | integer. default: 1                                 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   21  | match               | [Match](doc:match) object or array of Match objects | Bypasses automatic header recognition.<br/>Removes all text on the page above the top boundary of the matched line.<br/>If Sensible doesn't find the match, it doesn't perform header removal. |\n   22: | offsetY             | number in inches. default: 0                        | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the top of the page.<br/>If used with t... <skipped 78 characters> ...\n   23  \n   24  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n   20  | ------------------- | ---------------- | ------------------------------------------------------------ |\n   21  | type (**required**) | `scale`          |                                                              |\n   22: <skipped 435 characters> .... For example, don't create a sample that can match to both a heading 1 and a heading 4 style.<br/>- Choose samples that appear on each page, such as headers or footers.<br/>Each example object has the following parameters:<br/> `match`: a [Match](doc:match) object<br/>`targetHeight`: the number in inches of the match at 100% scale. |\n   23  | perPage             | boolean          | If true, Sensible rescales each page individually against the Target Height parameter, taking the average of  all matches' heights on that page rather than in the whole document. For example, if a tax return contains multiple W-2 forms, but each W-2 can be scanned at an unpredictable scale, then you can set this parameter to true and match on text such as the `\"Wage and Tax\"` and the `W-2` titles in the W-2 form. |\n   24  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n   50  | --------------------- | -------------------------------------------------- | ------------------------------------------------------------ |\n   51  | anchor (**required**) | [Anchor](anchor) object, or array of Match objects | Anchor parameters have a special meaning in the context of sections, as follows:<br/><br/> **start**: Ignores anything in the document before this line. if undefined, Sensible searches for the section group starting at th... <skipped 684 characters> ...cognizes columns as sections automatically. For more information, see [Section nuances](doc:section-nuances#vertical-sections).<br/><br/>**end**: Ignores any anchor matches in the document after this line. For example, to extract solely September claims in the preceding image, specify `\"October\"`. |\n   52: <skipped 1812 characters> ...le-static).<br/><br/>`stop`: (Match object) (**required**) A Match object defining the end of the external range. Sensible defines the Stop horizontal line by finding the top boundary of the stop line, then applies a default offset of 0.08\" down the page.<br/><br/>`offsetY`: Specifies the number of inches to offset the range's top boundary from the anchor's Match parameter.<br/><br/>`stopOffsetY`: Specifies the number of inches to offset from the Stop parameter.<br/><br/><br/>**vertical sections:** N/A, external range isn't allowed for vertical sections. |\n   53  | stop                  | [Anchor](anchor) object, or array of Match objects | **horizontal sections:**  Specifies the repeated end of the section after its anchor. For example, if you specify `\"Date of claim\"`, then each section stops at a horizontal line below the bottom boundary of the stop line ... <skipped 592 characters> ...span multiple columns. If not specified, Sensible ends the section group at the first line that spans multiple columns. If the spanning lines occur mid-column, you can also configure the Line Filters parameter.<br/>For more information, see [Section nuances](doc:section-nuances#vertical-sections). |\n   54  | requireStop           | Boolean. default: false                            | **horizontal sections:**  If true, the Stop parameter is required, and the section ends when it matches the Stop parameter, instead of the default behavior of ending at the next starting line specified in the anchor's Mat... <skipped 278 characters> ...e in the section. In such a case, Sensible ignores any zero-height sections generated by this horizontal line's matches. For more information, see [Multiple anchors in section](doc:section-nuances#multiple-anchors-in-section).<br/><br/>**vertical sections:** N/A, not allowed for vertical sections. |\n   55: | offsetY               | number in inches                                   | Specifies an offset from the anchor Match parameter.  Positive values offset down the page, negative values offset up the page. <br/><br/> **horizontal sections:** Specifies the number of inches to offset the section's top boundary from the anchor Match parameter. By default a section starts at the top boundary of the matched line. If you specify Offset Y, the section starts at that top boundary plus the offset. For example, configure this when the section lacks an easy-to-match first line.<br/><br/>**vertical sections:** Specifies the number of inches to offset the section *group's* top boundary from the anchor Match parameter. For example, configure this when when you want to exclude non-columnar text from a vertical section.<br/><br/> |\n   56: | stopOffsetY           | number in inches                                   | Specifies the number of inches to offset from the Stop parameter. <br/><br/>**horizontal sections:**  Offsets each section's stop from the Stop horizontal line.<br><br/>**vertical sections:** Offsets the section *group's* stop from the Stop horizontal line. |\n   57  \n   58  ### Range parameters for columns\n   ..\n   67  | columnSelection | array of index selections where each \"index selection\" can be:<br/>- a column index or comma-delimited indices<br><br>- an array with two comma-delimited indices, meaning all the columns in the indices range<br/><br/> default: capture all columns (`[]`) | Use to configure which c... <skipped 295 characters> ...lines from any other columns to each section. <br/>`[1,3,-1]`  selects 2nd, 4th, and the last columns. Use negative indices to offset from the last column. <br/> `[1,[3,7]]` selects the 2nd column and the 4th through 8th columns.<br/>  `[[0, -2]]` selects 1st through 2nd-to-last columns.<br/><br/> |\n   68  | ignoredColumns  | integer array.                                               | Removes unwanted columns from both the output *and* from the SenseML search scope. For example, this is useful if the columns contain text that interferes with anchoring on other columns. |\n   69: | minColumnGap    | number in inches. default: 0                                 | Configures column recognition by specifying the smallest allowed width of the gutters separating the columns. For an example, see [Table grid example](doc:sections-example-table-grid). Use when text in a column contains whitespace gaps such that Sensibl... <skipped 203 characters> ...\n   70  | lineFilters     | Match object, or array of Match objects                      | Use to ignore lines that span columns and break column recognition. For example, if the lines occur mid-column, use this parameter rather than a Stop parameter to exclude the lines. Sensible excludes the lines both from the output and from the SenseML search scope.<br/>You don't need to configure this parameter if you specify a Stop parameter. For more information, see [Section nuances](doc:section-nuances#vertical-sections). |\n   71  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - advanced-methods\\2000 - signature.md:\n    9  | id               | `signature`                                         |                                                              |\n   10  | start            | Direction, one of `above`, `below`, `left`, `right` | A direction specifying where to start relative to the anchor point. `right` starts at the middle of the right edge, `below` starts at the middle of the bottom edge, and so forth |\n   11: | offsetX          | number                                              | The offset in inches from the starting point along the X axis. Positive values offset to the right, negative values offset to the left. |\n   12: | offsetY          | number                                              | The offset in inches from the starting point along the Y axis. Positive values offset down the page, negative values offset up the page. |\n   13: | width            | number                                              | The width in inches of the extraction region                 |\n   14: | height           | number                                              | The height in inches of the extraction region                |\n   15  | isAbsoluteOffset | `true`, `false`                                     | optional, default false  A flag to make the offsets relative to the top left of the page rather than to the anchor start point |\n   16  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4600 - table-methods.md:\n   13  | Table       | layout   | Extracts tables based on bag-of-words scoring.               | For tables that have variable column formatting.           |\n   14  | Fixed Table | layout   | Extracts tables with a fixed number and layout of columns.   | Faster than Table method.                                  |\n   15: | Text Table  | layout   | Extracts tables based on column coordinates in inches.       | Fastest table method.                                      |\n   16  \n   17  ### Features supported\n\n74 matches across 24 files\n\n\nSearching 158 files for \"left side\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n   35  | maximumHeight | number                  | The maximum height of the matched line's boundaries, in inches. Not valid as a top-level parameter for a Boolean match, but valid for individual matches in its array. |\n   36  | reverse       | boolean. default: false | Use in match arrays. Don't set this to true for the first match in the array, except in the External Range parameter for [sections](doc:sections).<br/>  If true, searches for a match in lines that precede the previous match in the array. For example, in an array with matches A and B, if B is a First match with `\"reverse\":true`, then Sensible matches the first line that *precedes* the line matched by A. For an example, see [Match arrays](doc:match-arrays#reverse-match). |\n   37: | xRangeFilter  |                         | Defines a left-to-right range, or \"column\", in which to search for a match. Contains the following parameters:<br/>`minX` Defines the left boundary of the range, in zero-indexed inches from the left side of the page.<br/>`maxX` Defines the right boundary of the range, in inches from the left side of the page.<br/>Not valid as a top-level parameter for a Boolean match, but valid for individual matches in its array. |\n   38  \n   39  Simple match\n\n2 matches in 1 file\n\n\nSearching 158 files for \"\"type\":\"table\"\"\n\n0 matches\n\nSearching 158 files for \"\"type\": \"table\"\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n  178        \"id\": \"maintenance_records\",\n  179        \"anchor\": \"date\",\n  180:       \"type\": \"table\",\n  181        \"method\": {\n  182          \"id\": \"table\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1400 - fixed-table.md:\n   23  | key                        | value                                                        | description                                                  |\n   24  | :------------------------- | :----------------------------------------------------------- | :----------------------------------------------------------- |\n   25: | id (**required**)          | `fixedTable`                                                 | When you specify this, you must also specify `\"type\": \"table\"` in the field's parameters. See the Stop parameter for details about how Sensible recognizes a table. |\n   26  | columnCount (**required**) | integer                                                      | The number of columns the tables must have.                  |\n   27  | columns (**required**)     | array                                                        | An array of objects with the following parameters: <br/> -`id` (**required**): The ID for the column in the extraction output <br/> - `index` (**required**): The zero-based column index <br/>-`type` : The t... <skipped 168 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   ..\n   45        \"id\": \"agile_risks_table\",\n   46        \"anchor\": \"agile software\",\n   47:       \"type\": \"table\",\n   48        \"method\": {\n   49          \"id\": \"fixedTable\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1500 - invoice.md:\n   17  | key                  | value     | description                                                  |\n   18  | :------------------- | :-------- | :----------------------------------------------------------- |\n   19: | id (**required**)    | `invoice` | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   20  | columns **required** | array     | An array of objects with the following parameters: <br/> -`id` (**required**): The id for the column in the extraction output. <br/> -`terms` (**required**): An array of terms to score positively during column recognition. Usually, you include column heading term... <skipped 407 characters> ...d` (default false): If true, Sensible omits a row if its cell is empty in this column. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   21  \n   ..\n   38      {\n   39        \"id\": \"invoice\",\n   40:       \"type\": \"table\",\n   41        \"method\": {\n   42          \"id\": \"invoice\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2100 - table.md:\n   20  | key                    | value                                               | description                                                  |\n   21  | :--------------------- | :-------------------------------------------------- | :----------------------------------------------------------- |\n   22: | id (**required**)      | `table`                                             | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. See the Stop parameter for details about how Sensible recognizes a table. |\n   23  | columns (**required**) | array                                               | An array of objects with the following parameters: <br/> -`id` (**required**): The id for the column in the extraction output. <br/>  -`terms` (**required**): An array of terms to score positively during column recognit... <skipped 501 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   24  | stop                   | [Match object](doc:match) or array of Match objects | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Amazon Web Service OCR  pro... <skipped 105 characters> ...n you specify a stop, Sensible supports:<br/>- merged cells in tables. Sensible populates \"empty\" spanned cells with the spanned value. For an example, see [Merged cell example](doc:table#example-merged-cells).<br/> - checkboxes in cells. Returns checkbox selection status as `[true]` or `[false]`. |\n   ..\n   44        \"id\": \"agile_risks_table_updates_monthly\",\n   45        \"anchor\": \"agile software\",\n   46:       \"type\": \"table\",\n   47        \"method\": {\n   48          \"id\": \"table\",\n   ..\n  139        \"id\": \"merged_cells_example\",\n  140        \"anchor\": \"start of table\",\n  141:       \"type\": \"table\",\n  142        \"method\": {\n  143          \"id\": \"table\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - draft-text-table.md:\n    7  | key                  | value   | description                                                  |\n    8  | :------------------- | :------ | :----------------------------------------------------------- |\n    9: | id **required**      | `table` | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   10  | columns **required** | array   | An array of objects with the following parameters:<br/> -`id` (**required**): The id for the column in the extraction output. <br/>**To specify fallbacks, use the same ID for multiple columns. Succeeding columns act as fallbacks if the first returns null.** <br/> -... <skipped 822 characters> ... one column, Sensible omits the row for *all* columns, even if the row had content under other columns.<br/><br/>**Tip:** You can define columns with overlapping coordinates, for example in order to output data in a single column as multiple columns. For more information, see the Examples section. |\n   11  |                      |         |                                                              |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - text-table.md:\n   24  | key                       | value                                                    | description                                                  |\n   25  | :------------------------ | :------------------------------------------------------- | :----------------------------------------------------------- |\n   26: | id **required**           | `table`                                                  | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   27  | columns **required**      | array                                                    | An array of objects with the following parameters:<br/> -`id` (**required**): The id for the column in the extraction output.<br/> -`minX` (**required**):  The distance in inches on the page from the left edge o... <skipped 743 characters> ... one column, Sensible omits the row for *all* columns, even if the row had content under other columns.<br/><br/>**Tip:** You can define columns with overlapping coordinates, for example in order to output data in a single column as multiple columns. For more information, see the Examples section. |\n   28  | offsetY                   | number in inches.                                        | Defines a starting point for recognizing a table, offset vertically from the anchor line's lower boundary. <br/>For example, if no table title precedes the table, then anchor instead on a column heading and use a negative Offset Y parameter to define a starting point above the table. |\n   ..\n   52        \"id\": \"text_table_example\",\n   53        \"anchor\": \"outline\",\n   54:       \"type\": \"table\",\n   55        \"method\": {\n   56          \"id\": \"textTable\",\n   ..\n  155        \"id\": \"split_column_into_two\",\n  156        \"anchor\": \"credit card\",\n  157:       \"type\": \"table\",\n  158        \"method\": {\n  159          \"id\": \"textTable\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   63        /* the id is a user-friendly name for the target list */\n   64        \"id\": \"dinners\",\n   65:       \"type\": \"table\",\n   66        \"method\": {\n   67          \"id\": \"list\",\n   ..\n   87      {\n   88        \"id\": \"desserts\",\n   89:       \"type\": \"table\",\n   90        \"method\": {\n   91          \"id\": \"list\",\n   ..\n  108      {\n  109        \"id\": \"wines\",\n  110:       \"type\": \"table\",\n  111        \"method\": {\n  112          \"id\": \"list\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n   68        /* the id is a user-friendly name for the target table */\n   69        \"id\": \"insured_vehicles_table\",\n   70:       \"type\": \"table\",\n   71        \"method\": {\n   72          \"id\": \"nlpTable\",\n   ..\n   90      {\n   91        \"id\": \"transactions_table\",\n   92:       \"type\": \"table\",\n   93        \"method\": {\n   94          \"id\": \"nlpTable\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1500 - zip.md:\n   47        \"id\": \"_insured_vehicles_table\",\n   48        \"anchor\": \"insured vehicles\",\n   49:       \"type\": \"table\",\n   50        \"method\": {\n   51          \"id\": \"fixedTable\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\5000 - sections-example-nested-table.md:\n   61          {\n   62            \"id\": \"reduction_subtable\",\n   63:           \"type\": \"table\",\n   64            \"method\": {\n   65              \"id\": \"textTable\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0100 - add-computed-fields.md:\n   67        \"id\": \"_raw_insurer_a_table\",\n   68        \"anchor\": \"insurer a\",\n   69:       \"type\": \"table\",\n   70        \"method\": {\n   71          \"id\": \"table\",\n   ..\n  101        \"id\": \"_raw_insurer_b_table\",\n  102        \"anchor\": \"insurer b\",\n  103:       \"type\": \"table\",\n  104        \"method\": {\n  105          \"id\": \"table\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\cheat\\2000 - cheat-2.md:\n   32        \"id\": \"snack_table\",\n   33        \"anchor\": \"tables and rows\",\n   34:       \"type\": \"table\",\n   35        \"method\": {\n   36          \"id\": \"fixedTable\",\n   ..\n   78        \"id\": \"snack_table\",\n   79        \"anchor\": \"mix it up\",\n   80:       \"type\": \"table\",\n   81        \"method\": {\n   82          \"id\": \"fixedTable\",\n   ..\n  137        \"id\": \"snack_table\",\n  138        \"anchor\": \"tables and rows\",\n  139:       \"type\": \"table\",\n  140        \"method\": {\n  141          \"id\": \"fixedTable\",\n\n24 matches across 12 files\n\n\nSearching 158 files for \"readingOrderLeft\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   26  | xRangeFilter                | object                                                       | Defines left and right boundaries in which to capture lines. For example, in combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom... <skipped 194 characters> ...nt of the \"column\" at either the right or left boundary of the anchor line.<br/> `offsetX` - Adjusts the horizontal position of the starting point defined by the Start parameter. <br/> `width` - The width of the page region to capture, in inches.<br/><br/> For an example, see the Examples section. |\n   27  | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28: | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter c... <skipped 70 characters> ...\n   29  \n   30  Examples\n   ..\n   42  **SOLUTION**\n   43  \n   44: To reliably capture the first and last name in their left-to-right order,  set `\"sortLines\": \"readingOrderLeftToRight\"`.\n   45  \n   46  *Config*\n   ..\n   61        \"method\": {\n   62          \"id\": \"region\",\n   63:         \"sortLines\": \"readingOrderLeftToRight\",\n   64          \"start\": \"left\",\n   65          \"width\": 2.5,\n\n4 matches in 1 file\n\n\nSearching 158 files for \"introduction\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\3000 - quickstart.md:\n    5  ---\n    6  \n    7: Introduction\n    8  ====\n    9  In this quickstart, use an example SenseML configuration and example document to get a quick \"hello world\" API response. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n    4  ---\n    5  \n    6: Introduction\n    7  ----\n    8  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n    1  ---\n    2: title: \"SenseML reference introduction\"\n    3  hidden: false\n    4  ---\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   39  | description (**required**) | string                                                       | A prompt describing the list's subject matter as a whole.    |\n   40  | properties (**required**)  | object                                                       | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the data in the extraction output. <br/>  -`description` (**required**):  A prompt describing the list item that you want to extract. The prompt can include instructions to reformat or filter the data. For example, provide prompts like `\" transaction amount. return the absolute value\"` or `\"vehicle make (not model)\"`.  <br/> -`type`: The list item's type. For more information, see [types](doc:types). |\n   41: | promptIntroduction         | string. default: `Using the provided context fill out the table below. If the context doesn't contain any of the described items, leave it empty.` | Overwrites the default text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for... <skipped 183 characters> ...\n   42  | llmEngine                  | `fast`, `thorough`. default: `fast`                          | Specifies the LLM model to which Sensible submits the full prompt, and affects the number of chunks that Sensible submits to the LLM.<br/>If the Fast parameter results in incomplete extractions for multi-pa... <skipped 87 characters> ...el (GPT-3.5 Turbo) and can submit a smaller number of chunks than specified by the Chunk Count parameter.<br/>- `thorough`: Sensible uses a slower LLM model (GPT-4 Turbo) and submits exactly the number of chunks specified by the Chunk Count parameter.<br/>For more information, see [Notes](#notes). |\n   43  | contextDescription         |                                                              | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n   43  | description            | string                                                       | A prompt that describes the table's subject matter as a whole. As part of finding the best-matching table, Sensible compares the table title, if present, to this description. For more details about how Sensible uses the description, see the Notes section. |\n   44  | columns (**required**) | array                                                        | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the column in the extraction output. <br/>  -`description` (**required**):  A prompt that describes the data... <skipped 423 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   45: | promptIntroduction     | string. default: `Below is a sample table. Please transform the data from the sample table into the target table where the target table's column headers are provided. Please do not modify the target table's headers. If cells in the sample table don't contain data, leave the corresponding cell of the new table blank. Finally return the transformed table without the header and header seperator line.`When `\"confidenceSignals: true\"`:<br/>When `\"rewriteTable\":true`, Sensible ignores this parameter and instead uses a nonconfigurable introduction. | Overwrites the default text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field.<br/>For example, overwrite with: `Below is a sample table. Please transform the data from the sample table into the target table where the targ... <skipped 265 characters> ...\n   46  | rewriteTable           | Boolean. default: true                                       | If true, you can use the column descriptions to prompt the LLM to split or merge columns or otherwise restructure the table.<br/>Configure this to false to improve performance and to avoid LLM token overflow er... <skipped 32 characters> ...d 4,000 [tokens](https://platform.openai.com/tokenizer).<br/>If false, skips the full table restructure described in the Notes section. As a result, the LLM returns the table body unchanged from the OCR extraction, and the only change you can make is to rename the column headings using column IDs. |\n   47  | pageSpanThreshold      | object                                                       | Configure the Page Span Threshold parameter to troubleshoot automatic multi-page table recognition. <br/>By default, Sensible detects multi-page tables by checking if the table is near the top or bottom of the ... <skipped 698 characters> ...ext page for a continuation of a multi-page table if the table ends in the bottom 20% of the page. Change the percent using this parameter.<br/>Sensible continues merging the multi-page table until the Page Span Threshold conditions are no longer met, or until Sensible encounters LLM token limits. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query.md:\n   29  | description(**required**) | string                                                       | A free-text question about information in the document. For example, `\"what's the policy period?\"` or `\"what's the client's first and last name?\"`.  For more information about how to write questions (or \"prompts\"), see [Query extraction tips](doc:query-tips). |\n   30  | chunkScoringText          | string                                                       | Configures context's content. For details about context and chunks, see the Notes section.<br/>A representative snippet of text from the part of the document where you expect to find the answer to your promp... <skipped 682 characters> ...ovide a snippet with an example street address that contains newlines, like `123 Main Street\\nLondon, England`. If the chunk contains a street address in a free-text paragraph, then provide an unformatted street address in the snippet.<br/>For an example, see [Example 3](doc:query#example-3).<br/> |\n   31: | promptIntroduction        | string. defaults:<br/>When `\"confidenceSignals: false\"`:<br/>  `Answer the question as truthfully and concisely as possible using the provided context, and if the answer is not contained within the text below, say \\\"I don't know.\\\"`<br/><br/>When `\"confidenceSignals: true\"`:<br/>Sensible ignores this parameter and instead uses a nonconfigurable introduction that prompts for confidence signals. | Overwrites the default text at the beginning of the prompt that Sensible submits to the LLM for this field.<br/>For example: `Answer the question as truthfully and concisely as possible using the provided context, and if the answer is not contained within the ... <skipped 307 characters> ...\n   32  | confidenceSignals         |                                                              | For information about this parameter, see [Advanced prompt configuration](doc:prompt). |\n   33  | contextDescription        |                                                              | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1060 - nlp.md:\n   18  | ---------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)    | `nlp`  |                                                              |\n   20: | query                  | object | Parameters:<br/>- `promptIntroduction`<br/>For more information about these parameters, see [Query](doc:query#parameters). |\n   21: | nlpTable               | object | Parameters:<br/>- `promptIntroduction`<br/>- `rewriteTable`<br/>- `pageSpanThreshold`<br/>For more information about these parameters, see [NLP Table](doc:nlp-table#parameters). |\n   22: | list                   | object | Parameters:<br/>- `promptIntroduction`<br/>- `llmEngine`<br/>For more information about these parameters, see [List](doc:list#parameters). |\n   23  | contextDescription     |        | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n   24  | pageHinting            |        | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n   ..\n   51            */\n   52        \"query\": {\n   53:         \"promptIntroduction\": \"Answer the question as truthfully and concisely as possible using the provided context. If the answer is not contained within the provided context below, but you know the answer because of your general knowledge about USA history, then answer the question.\"\n   54        }\n   55      }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4000 - senseml.md:\n   49  | [method](doc:method)            | Defines how to expand out from the anchor and extract data. In this example, the Label method extracts data that's below the anchor (`\"position\": \"below\"`). For a list of methods, see [Methods](doc:methods). |\n   50  \n   51:  For a more complete SenseML example, see the [SenseML introduction](doc:senseml-reference-introduction).\n   52  \n   53  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\cheat\\4000 - cheat-4.md:\n   75  - Check out the [SenseML method reference docs](doc:methods) to write your own extractions.\n   76  - See the [API quickstart](doc:quickstart) to try out calling an Sensible extraction API endpoint.\n   77: - Learn about other SenseML features such as preprocessors. For an overview of all features, see [SenseML reference introduction](doc:senseml-reference-introduction).\n   78  - Learn more about [validations](doc:validate-extractions) to test the quality of your extractions in production.\n   79  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\3000 - prompt.md:\n    9  When you write a prompt in a Sensible Instruct method, Sensible combines your prompt with other information to create the full prompt it submits to a large-language model (LLM). The full prompt includes:\n   10  \n   11: - a prompt introduction\n   12  - \"context\", made up of chunks excerpted from the document and of page metadata. For more information about chunks, see the Notes section.\n   13  - concatenated descriptive prompts you configure in a Sensible Instruct method, such as in the [List](doc:list-tips) or [Query](doc:query-tips) methods.\n   ..\n   21  | key  | description                                                  | global parameter name                                        |\n   22  | ---- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   23: | A    | Prompt introduction. Includes asking for truthfulness and describing the format of the data to extract, for example, query, table, or table.<br/>The preceding image shows an example of a user-configured introduction overriding the default. | Prompt Introduction<br/>Confidence Signals                   |\n   24  | B    | Overall description of the chunks.<br/>The preceding image shows an example of a user-configured context description overriding the default. | Context Description                                          |\n   25  | C    | Page metadata for chunks.                                    | Page Hinting                                                 |\n   ..\n   47  | SenseML parameter      | value                                                        | config-level description:<br/>configure in [NLP preprocessor](doc:nlp) or in Sensible Instruct configuration settings | method-level description:<br/>configure in a field           |\n   48  | :--------------------- | :----------------------------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   49: | promptIntroduction     | string. default: the prompt introduction default varies for each Sensible Instruct method. | Overwrites the default text at the beginning of the full prompt that Sensible submits to the LLM. <br/> This parameter applies to each method of a specified type in a config.<br/>The default for the prompt introduction differs for each Sensible Instruct method. For more information and for an example, see [NLP](doc:nlp) preprocessor.<br/>**Note**: If you set the Confidence Signals parameter to true, Sensible ignores this parameter and instead uses a nonconfigurable introduction that prompts for confidence signals. | Overrides config-level parameter for a single field.<br/> For more information, see the Sensible Instruct reference topic for the method you want to edit, for example, [List](doc:list#parameters). |\n   50  | confidenceSignals      | boolean.<br/>defaults: true in  Sensible Instruct editor,<br/> false in SenseML editor | If specified, Sensible prompts the LLM to report any uncertainties it has about the accuracy of its response.  For more information, see [Qualifying LLM accuracy](doc:confidence).<br/>Applies to each supported method in the config. Sensible currently supports this parameter for the [Query](doc:query) method. | Overrides config-level parameter for a single field.         |\n   51  | contextDescription     | string. default: `The below context is an excerpt from a document.` | Configures context's metadata. For details about context and chunks, see the Notes section.<br/>Overwrites the default context description.<br/>Applies to each Sensible Instruct field in the config.<br/>... <skipped 73 characters> ... card that contains botanical information about a single plant species, including phenology information.`<br/>\\- `The below context is an excerpt from an email. Assume the sender is always an automated system from an insurance broker.` | Overrides config-level parameter for a single field.         |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\instruct\\1000 - query-tips.md:\n   18  \n   19    -  [Prompt engineering](https://platform.openai.com/docs/guides/prompt-engineering)\n   20:   -  [Introduction to prompt engineering](https://learn.microsoft.com/en-us/azure/cognitive-services/openai/concepts/prompt-engineering)\n   21    -  [Short course: Building systems with the ChatGPT API](https://www.deeplearning.ai/short-courses/building-systems-with-chatgpt/) and [Short course: ChatGPT Prompt Engineering for Developers](https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/). \n   22  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n   14  \n   15  - For extraction and classification response schemas, see the [Sensible API reference](https://docs.sensible.so/reference/choosing-an-endpoint).\n   16: - For configuring document extractions, see [SenseML reference](https://docs.sensible.so/docs/senseml-reference-introduction).\n   17  \n   18  ## Versions\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n   14  \n   15  - For extraction and classification response schemas, see the [Sensible API reference](https://docs.sensible.so/reference/choosing-an-endpoint).\n   16: - For configuring document extractions, see [SenseML reference](https://docs.sensible.so/docs/senseml-reference-introduction).\n   17  \n   18  ## Versions\n\n27 matches across 13 files\n\n\nSearching 158 files for \"deprecated\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n 1077  \n 1078  \n 1079:     # deprecated:\n 1080      ExtractionSingleRetrievalResponse: # through /documents/{id} endpoint\n 1081        allOf:\n ....\n 1086                $ref: '#/components/schemas/DownloadUrlDocument'\n 1087  \n 1088:     # deprecated:\n 1089      ExtractionPortfolioRetrievalResponse:\n 1090        allOf:\n ....\n 1177  \n 1178  \n 1179:     # deprecated?\n 1180      ExtractionSingleBase:\n 1181        type: object\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   25  | whitespaceFilter            | `spaces`, `all`                                              | Remove extra whitespaces.<br/> `spaces` - remove solely extra spaces.<br/> `all` - remove all whitespace characters, including newlines. |\n   26  | xRangeFilter                | object                                                       | Defines left and right boundaries in which to capture lines. For example, in combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom... <skipped 194 characters> ...nt of the \"column\" at either the right or left boundary of the anchor line.<br/> `offsetX` - Adjusts the horizontal position of the starting point defined by the Start parameter. <br/> `width` - The width of the page region to capture, in inches.<br/><br/> For an example, see the Examples section. |\n   27: | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28  | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter corrects this problem by sorting lines by their likely reading order. |\n   29  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n   41  [Table](doc:types#table)\n   42  [Weight](doc:types#weight)\n   43: [Deprecated types](doc:types#deprecated-types)\n   44  \n   45  Address\n   ..\n  384  | minValue                  | number. Default: infinity                                    | The minimum currency amount to recognize. Use this to extract an amount with a known range. |\n  385  | relaxedWithCents          | Boolean. default: false                                      | Use this parameter when poor-quality scans or photographed documents result in erroneous OCR output for the decimal separator or thousands separator.  <br/> If true, Sensible overrides all other Currency typ... <skipped 371 characters> ...eriod or comma: <br/>`.,;: _ `  (period, comma, semicolon, colon, space, underscore)<br/><br/>For example, if you set this parameter to true, then for the erroneous OCR output  `\"7.859:36\"`, Sensible returns: <br>{\"source\": \"7.859:36\",<br/>\"type\": \"currency\",<br/>\"unit\": \"$\",<br/>\"value\": 7859.36} |\n  386: | accountingNegative        | `default`, `anyParentheses`, `bothParentheses`, `suffixNegativeSign` Default: `null` | Replaces the deprecated Accounting Currency type. Specifies to recognize accounting sign conventions for negative numbers.<br/>`null` Sensible recognizes negative numbers as described in the preceding **formats recognized** section.<br/>`bothParentheses` -  Sensible assigns a negative value to a number prefixed and suffix... <skipped 537 characters> ...\n  387  | alwaysNegative            | boolean                                                      | If true, Sensible assigns a negative value to a number and ignores sign symbols in the document. For example, use this to capture values in the debit column of an accounting document, where negative signs are omitted. |\n  388  | removeSpaces              | boolean                                                      | Removes whitespace in a line for better currency recognition. For example, changes the line `$  12.45` to `$12.45`. |\n  ...\n  858  ```\n  859  \n  860: Deprecated types\n  861  ===\n  862  \n  ...\n  865  ====\n  866  \n  867: **Deprecated**. See [Currency](doc:types#currency)\n  868  \n  869  Returns US dollar numbers. Supports negative numbers represented either with parentheses `()` or with the minus sign (`-`).\n\n10 matches across 3 files\n\n\nSearching 158 files for \"promptint\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   39  | description (**required**)          | string                              | A prompt describing the list's subject matter as a whole.    |\n   40  | properties (**required**)           | object                              | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the data in the extraction output. <br/>  -`description` (**required**):  A prompt describing the list item that you want to extract. The prompt can include instructions to reformat or filter the data. For example, provide prompts like `\" transaction amount. return the absolute value\"` or `\"vehicle make (not model)\"`.  <br/> -`type`: The list item's type. For more information, see [types](doc:types). |\n   41: | (**Deprecated**) promptIntroduction | string.                             | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   42  | llmEngine                           | `fast`, `thorough`. default: `fast` | Specifies the LLM model to which Sensible submits the full prompt, and affects the number of chunks that Sensible submits to the LLM.<br/>If the Fast parameter results in incomplete extractions for multi-page lists, use Th... <skipped 71 characters> ...el (GPT-3.5 Turbo) and can submit a smaller number of chunks than specified by the Chunk Count parameter.<br/>- `thorough`: Sensible uses a slower LLM model (GPT-4 Turbo) and submits exactly the number of chunks specified by the Chunk Count parameter.<br/>For more information, see [Notes](#notes). |\n   43  | contextDescription                  |                                     | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n   43  | description                         | string                 | A prompt that describes the table's subject matter as a whole. As part of finding the best-matching table, Sensible compares the table title, if present, to this description. For more details about how Sensible uses the description, see the Notes section. |\n   44  | columns (**required**)              | array                  | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the column in the extraction output. <br/>  -`description` (**required**):  A prompt that describes the data you want to extract from... <skipped 398 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   45: | (**Deprecated**) promptIntroduction | string.                | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   46  | rewriteTable                        | Boolean. default: true | If true, you can use the column descriptions to prompt the LLM to split or merge columns or otherwise restructure the table.<br/>Configure this to false to improve performance and to avoid LLM token overflow errors caused by tables that exceed 4,000 [tokens](https://platform.openai.com/tokenizer).<br/>If false, skips the full table restructure described in the Notes section. As a result, the LLM returns the table body unchanged from the OCR extraction, and the only change you can make is to rename the column headings using column IDs. |\n   47  | pageSpanThreshold                   | object                 | Configure the Page Span Threshold parameter to troubleshoot automatic multi-page table recognition. <br/>By default, Sensible detects multi-page tables by checking if the table is near the top or bottom of the page. If it is, Sensible ... <skipped 673 characters> ...ext page for a continuation of a multi-page table if the table ends in the bottom 20% of the page. Change the percent using this parameter.<br/>Sensible continues merging the multi-page table until the Page Span Threshold conditions are no longer met, or until Sensible encounters LLM token limits. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query.md:\n   29  | description(**required**)           | string       | A free-text question about information in the document. For example, `\"what's the policy period?\"` or `\"what's the client's first and last name?\"`.  For more information about how to write questions (or \"prompts\"), see [Query extraction tips](doc:query-tips). |\n   30  | chunkScoringText                    | string       | Configures context's content. For details about context and chunks, see the Notes section.<br/>A representative snippet of text from the part of the document where you expect to find the answer to your prompt. Use this parameter to narrow down t... <skipped 644 characters> ...ovide a snippet with an example street address that contains newlines, like `123 Main Street\\nLondon, England`. If the chunk contains a street address in a free-text paragraph, then provide an unformatted street address in the snippet.<br/>For an example, see [Example 3](doc:query#example-3).<br/> |\n   31: | (**Deprecated**) promptIntroduction | string.      | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   32  | confidenceSignals                   |              | For information about this parameter, see [Advanced prompt configuration](doc:prompt). |\n   33  | contextDescription                  |              | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1060 - nlp.md:\n   18  | ---------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)    | `nlp`  |                                                              |\n   20: | query                  | object | Parameters:<br/>- (**Deprecated**) `promptIntroduction`<br/>For more information about these parameters, see [Query](doc:query#parameters). |\n   21: | nlpTable               | object | Parameters:<br/>- (**Deprecated**) `promptIntroduction`<br/>- `rewriteTable`<br/>- `pageSpanThreshold`<br/>For more information about these parameters, see [NLP Table](doc:nlp-table#parameters). |\n   22: | list                   | object | Parameters:<br/>- (**Deprecated**) `promptIntroduction`<br/>- `llmEngine`<br/>For more information about these parameters, see [List](doc:list#parameters). |\n   23  | contextDescription     |        | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n   24  | pageHinting            |        | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n   ..\n   51            */\n   52        \"query\": {\n   53:         \"promptIntroduction\": \"Answer the question as truthfully and concisely as possible using the provided context. If the answer is not contained within the provided context below, but you know the answer because of your general knowledge about USA history, then answer the question.\"\n   54        }\n   55      }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\3000 - prompt.md:\n   54  | chunkOverlapPercentage              | `0`, `0.25`, `0.5` default: see each method's [reference topic](doc:natural-language-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The extent to which chunks overlap, as a percentage of the chunks' heigh... <skipped 125 characters> ...onfig. <br/>Sensible recommends setting a non-zero overlap to avoid splitting data across chunks. Set overlap to 0 solely if you're confident that your document layout doesn't flow across page boundaries and you're using a one-page chunk size. | Overrides config-level parameter for a single field. |\n   55  | pageRange                           | object                                                       | Configures the context's range in the document. For details about context and chunks, see the Notes section.<br/>If specified, Sensible creates chunks in the page range and ignores other pages. For... <skipped 352 characters> ...creating chunks (exclusive).<br/><br/>**Note:** Sensible ignores this parameter when searching for a field's anchor. If you want to exclude the field's anchor from the page range, use the [Page Range](doc:page-range) preprocessor instead.<br/> | Overrides config-level parameter for a single field. |\n   56: | (**Deprecated**) promptIntroduction | string.                                                      | Deprecated. For more information, see the [NLP preprocessor](doc:nlp). |                                                      |\n   57  \n   58  \n\n8 matches across 5 files\n\n\nSearching 158 files for \"promptint\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   39  | description (**required**)          | string                              | A prompt describing the list's subject matter as a whole.    |\n   40  | properties (**required**)           | object                              | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the data in the extraction output. <br/>  -`description` (**required**):  A prompt describing the list item that you want to extract. The prompt can include instructions to reformat or filter the data. For example, provide prompts like `\" transaction amount. return the absolute value\"` or `\"vehicle make (not model)\"`.  <br/> -`type`: The list item's type. For more information, see [types](doc:types). |\n   41: | (**Deprecated**) promptIntroduction | string.                             | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   42  | llmEngine                           | `fast`, `thorough`. default: `fast` | Specifies the LLM model to which Sensible submits the full prompt, and affects the number of chunks that Sensible submits to the LLM.<br/>If the Fast parameter results in incomplete extractions for multi-page lists, use Th... <skipped 71 characters> ...el (GPT-3.5 Turbo) and can submit a smaller number of chunks than specified by the Chunk Count parameter.<br/>- `thorough`: Sensible uses a slower LLM model (GPT-4 Turbo) and submits exactly the number of chunks specified by the Chunk Count parameter.<br/>For more information, see [Notes](#notes). |\n   43  | contextDescription                  |                                     | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n   43  | description                         | string                 | A prompt that describes the table's subject matter as a whole. As part of finding the best-matching table, Sensible compares the table title, if present, to this description. For more details about how Sensible uses the description, see the Notes section. |\n   44  | columns (**required**)              | array                  | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the column in the extraction output. <br/>  -`description` (**required**):  A prompt that describes the data you want to extract from... <skipped 398 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   45: | (**Deprecated**) promptIntroduction | string.                | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   46  | rewriteTable                        | Boolean. default: true | If true, you can use the column descriptions to prompt the LLM to split or merge columns or otherwise restructure the table.<br/>Configure this to false to improve performance and to avoid LLM token overflow errors caused by tables that exceed 4,000 [tokens](https://platform.openai.com/tokenizer).<br/>If false, skips the full table restructure described in the Notes section. As a result, the LLM returns the table body unchanged from the OCR extraction, and the only change you can make is to rename the column headings using column IDs. |\n   47  | pageSpanThreshold                   | object                 | Configure the Page Span Threshold parameter to troubleshoot automatic multi-page table recognition. <br/>By default, Sensible detects multi-page tables by checking if the table is near the top or bottom of the page. If it is, Sensible ... <skipped 673 characters> ...ext page for a continuation of a multi-page table if the table ends in the bottom 20% of the page. Change the percent using this parameter.<br/>Sensible continues merging the multi-page table until the Page Span Threshold conditions are no longer met, or until Sensible encounters LLM token limits. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query.md:\n   29  | description(**required**)           | string       | A free-text question about information in the document. For example, `\"what's the policy period?\"` or `\"what's the client's first and last name?\"`.  For more information about how to write questions (or \"prompts\"), see [Query extraction tips](doc:query-tips). |\n   30  | chunkScoringText                    | string       | Configures context's content. For details about context and chunks, see the Notes section.<br/>A representative snippet of text from the part of the document where you expect to find the answer to your prompt. Use this parameter to narrow down t... <skipped 644 characters> ...ovide a snippet with an example street address that contains newlines, like `123 Main Street\\nLondon, England`. If the chunk contains a street address in a free-text paragraph, then provide an unformatted street address in the snippet.<br/>For an example, see [Example 3](doc:query#example-3).<br/> |\n   31: | (**Deprecated**) promptIntroduction | string.      | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   32  | confidenceSignals                   |              | For information about this parameter, see [Advanced prompt configuration](doc:prompt). |\n   33  | contextDescription                  |              | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1060 - nlp.md:\n   18  | ---------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)    | `nlp`  |                                                              |\n   20: | query                  | object | Parameters:<br/>- (**Deprecated**) `promptIntroduction`<br/>For more information about these parameters, see [Query](doc:query#parameters). |\n   21: | nlpTable               | object | Parameters:<br/>- (**Deprecated**) `promptIntroduction`<br/>- `rewriteTable`<br/>- `pageSpanThreshold`<br/>For more information about these parameters, see [NLP Table](doc:nlp-table#parameters). |\n   22: | list                   | object | Parameters:<br/>- (**Deprecated**) `promptIntroduction`<br/>- `llmEngine`<br/>For more information about these parameters, see [List](doc:list#parameters). |\n   23  | contextDescription     |        | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n   24  | pageHinting            |        | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\3000 - prompt.md:\n   53  | chunkOverlapPercentage              | `0`, `0.25`, `0.5` default: see each method's [reference topic](doc:natural-language-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The extent to which chunks overlap, as a percentage of the chunks' heigh... <skipped 125 characters> ...onfig. <br/>Sensible recommends setting a non-zero overlap to avoid splitting data across chunks. Set overlap to 0 solely if you're confident that your document layout doesn't flow across page boundaries and you're using a one-page chunk size. | Overrides config-level parameter for a single field. |\n   54  | pageRange                           | object                                                       | Configures the context's range in the document. For details about context and chunks, see the Notes section.<br/>If specified, Sensible creates chunks in the page range and ignores other pages. For... <skipped 352 characters> ...creating chunks (exclusive).<br/><br/>**Note:** Sensible ignores this parameter when searching for a field's anchor. If you want to exclude the field's anchor from the page range, use the [Page Range](doc:page-range) preprocessor instead.<br/> | Overrides config-level parameter for a single field. |\n   55: | (**Deprecated**) promptIntroduction | string.                                                      | Deprecated. Overrides the prompt introduction.               |                                                      |\n   56  \n   57  \n\n7 matches across 5 files\n\n\nSearching 158 files for \"prompt intro\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\3000 - prompt.md:\n    9  When you write a prompt in a Sensible Instruct method, Sensible combines your prompt with other information to create the full prompt it submits to a large-language model (LLM). The full prompt includes:\n   10  \n   11: - a prompt introduction\n   12  - \"context\", made up of chunks excerpted from the document and of page metadata. For more information about chunks, see the Notes section.\n   13  - concatenated descriptive prompts you configure in a Sensible Instruct method, such as in the [List](doc:list-tips) or [Query](doc:query-tips) methods.\n\n1 match in 1 file\n\n\nSearching 157 files for \"filter\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n  525        - Retrieve extractions\n  526        description: |\n  527:         Use this endpoint to get a filtered list of past extractions. This endpoint returns a summary for each extraction, listed in reverse chronological order. To get details about an extraction, use the [Retrieve extraction by ID](ref:retrieving-results) endpoint.\n  528  \n  529        parameters:\n  ...\n  542              application/json:\n  543                schema:\n  544:                 $ref: '#/components/schemas/ExtractionsResponseFiltered'\n  545            description: Returns list of summarized extractions.\n  546          '401':\n  ...\n  873        in: query\n  874        description: >-\n  875:         Comma-delimited list of document types by which to filter the retrieved extractions.\n  876        schema:\n  877          type: string\n  ...\n  883        in: query\n  884        description: >-\n  885:         Comma-delimited list of configurations by which to filter the retrieved extractions.\n  886        schema:\n  887          type: string\n  ...\n  893        in: query\n  894        description: >-\n  895:          Comma-delimited list of statuses (WAITING, COMPLETE, FAILED) by which to filter the retrieved extractions.\n  896        schema:\n  897          type: string\n  ...\n  902        in: query\n  903        description: >-\n  904:          Minimum extraction coverage score by which to filter the retrieved extractions. For more information about scoring, see [Monitoring extractions](doc:metrics).\n  905        schema:\n  906          type: number\n  ...\n  911        in: query\n  912        description: >-\n  913:          Maximum extraction coverage score by which to filter the retrieved extractions. For more information about scoring, see [Monitoring extractions](doc:metrics).\n  914        schema:\n  915          type: number\n  ...\n  922        in: query\n  923        description: >-\n  924:          Comma-delimited list of environments (PRODUCTION, DEVELOPMENT) by which to filter the retrieved extractions.\n  925        schema:\n  926          type: string\n  ...\n 1026               minItems: 12\n 1027  \n 1028:     ExtractionsResponseFiltered:\n 1029        type: object\n 1030        properties:\n ....\n 1042              description: >-\n 1043                Sensible returns up to 1,000 extractions. If there are more than 1,000 extractions in the specified date range, Sensible omits the oldest extractions and populates the cutoff_date parameter with the date-time that you can use as the new end_date to retrieve the next page of extractions in the originally intended date range.\n 1044:               Note that the `cutoff_date` can differ from the earliest extraction returned by this endpoint. Since Sensible applies the date range filters before all other filters, the `cutoff_date` can represent an extraction that Sensible retrieved using the date range filter, and then removed using other filters.\n 1045  \n 1046  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\0300 - metrics.md:\n   15  Extraction coverage measures how fully an extraction captures your target data from the document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of output fields are null. A low percentage can indicate a poor-quality extraction. Or, it can indicate that your documents contain sparse data. For example, if you define many target fields to extract from a supplemental insurance form, but applicants leave most of the questions blank, then the form's expected average extraction coverage is much less than 100%.\n   16  \n   17: <skipped 34 characters> ...n vary by document type, you can set your own ranges for each document type in the Sensible app. To set ranges for coverage for past extractions, click **Dashboard** and scroll to the **Extraction coverage** section. In the section, configure date range, document type, and extraction coverage range filters:\n   18  \n   19  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_coverage.png)\n   ..\n   37  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_used_1.png)\n   38  \n   39: In the preceding screenshot, the `1040_2018`  configuration was used for 54.7% of extractions in the last 30 days in the `tax_form` document type. If you adjust the filter to include both bank statements and tax forms, you see that it was used for 33% of all extractions across the selected document types:\n   40  \n   41  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_used_2.png)\n   ..\n   43  \n   44  ## Documents extracted\n   45: To view the number of past extractions you've run by document type, click **Dashboard** and scroll to the **Document extracted** section. You can filter by date range, document types, and extraction coverage:\n   46  \n   47  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/dashboard_count.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  426  \n  427  - You can use a [Column method](doc:column) to return all the listed premiums ($90, $15, $130).\n  428: <skipped 45 characters> ...or the Row method to capture since they can be a variable number of lines. Row methods depend on strict horizontal alignment of lines, so Sensible extracts the first line. Instead, use the [Table method](doc:table) to more reliably capture the data in each cell of the whole table. Or, use an `xRangeFilter` parameter in the [Document Range method](doc:document-range) to capture the limits.  \n  429  - What if the document listed emails, and you just wanted to capture all those emails? You could use a regular expression (regex) in a `\"match\":\"all\"` anchor coupled with a [Passthrough method](doc:passthrough), or the [Regex method](doc:regex).\n  430  - You can split the policy period into two dates, either by using the [Split computed field method](doc:split), or by setting the [Date](doc:types#date) type on the field and using a tiebreaker.\n  ...\n  464  \n  465  - include the anchor with `\"includeAnchor\": true`\n  466: - filter out unwanted text in the anchor (the words \"Policy period\") with a Word Filters parameter.\n  467  \n  468  Try it out by replacing your existing `policy_period` field with this example:\n  ...\n  475          \"id\": \"documentRange\",\n  476          \"includeAnchor\": true,\n  477:         \"wordFilters\": [\n  478            \"policy period\"\n  479          ],\n  ...\n  510          \"height\": 0.45,\n  511          \"start\": \"left\",\n  512:         \"wordFilters\": [\n  513            \"policy period\",\n  514          ]\n  ...\n  517  ```\n  518  \n  519: This field defines a region in inches relative to the anchor. Since the region overlaps the anchor, specify a Word Filters parameter to remove the anchor text in the output. See the green box representing the region in the editor? This box dynamically resizes as you adjust the region parameters (such as the Height and Start parameters), so you can visually tweak the region till you're satisfied. \n  520  \n  521  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_error_3.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\1000 - color.md:\n  114  ===\n  115  \n  116: ***Dotted blue boxes*** represent discarded method data. Sensible methods filter out captured data depending on parameters you set in the field, the anchor, and the method.\n  117  \n  118  For example, in the following image, a Row method captures everything to the right of the text \"Python\", but a tiebreaker selects \"0\" (dark blue box) and discards \"first\" (dotted blue box).\n  119  \n  120: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_method.png)\n  121  \n  122  The query used for the preceding image is:\n  ...\n  126    \"fields\": [\n  127      {\n  128:       \"id\": \"filtered_by_tiebreaker\",\n  129        \"anchor\": \"Javascript\",\n  130        \"method\": {\n  ...\n  138  ```\n  139  \n  140: Common parameters resulting in filtering include:\n  141  \n  142  - the field's data type (currency, date, address, etc)\n  ...\n  157    \"fields\": [\n  158      {\n  159:       \"id\": \"anchors_candidates_filtered_by_method\",\n  160        \"anchor\": \"python\",\n  161        \"match\": \"first\",\n  ...\n  169  ```\n  170  \n  171: Sensible filters out \"python\" strings that don't meet the Label method's proximity requirements. For example, in the following image, Sensible represents the \"python\" string with a dotted yellow box to show that it doesn't work with the Label method (it would, however, work with the Row method):\n  172  \n  173: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_anchor.png)\n  174  \n  175  \n  176  \n  177: Common parameters resulting in filtering include:\n  178  \n  179  -  the field's data type (currency, date, address, etc)\n  180  -  the field's match method (first, last, all)\n  181  -  the anchor's start and end\n  182: -  the method's id (for example, a Label method filters out all lines that aren't close to other lines)\n  183  \n  184  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n   35  | maximumHeight | number                  | The maximum height of the matched line's boundaries, in inches. |\n   36  | reverse       | boolean. default: false | Use in match arrays. Don't set this to true for the first match in the array, except in the External Range parameter for [sections](doc:sections).<br/>  If true, searches for a match in lines that precede the previous match in the array. For example, in an array with matches A and B, if B is a First match with `\"reverse\":true`, then Sensible matches the first line that *precedes* the line matched by A. For an example, see [Match arrays](doc:match-arrays#reverse-match). |\n   37: | xRangeFilter  | object                  | Defines a left-to-right range, or \"column\", in which to search for a match. This option excludes lines that partially fall outside the column.  Contains the following parameters:<br/>`minX` Specifies the left boundary of the range, in inches from the left edge of the pa... <skipped 101 characters> ...\n   38  \n   39  *These parameters aren't available as top-level parameters for a Boolean match.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   20  | `id`                        | [box](doc:box),<br/>[checkbox](doc:checkbox),<br/>[column](doc:column),<br/>[documentRange](doc:document-range),<br/>[fixedTable](doc:fixed-table),<br/>[intersection](doc:intersection),<br/> [invoice](doc:invoice),<br/>[keyValue](doc:key-value),<br/>[label](doc:label),<br/>[nearestCheckbox](doc:nearest-checkbox),<br/>[passthrough](doc:passthrough),<br/>[regex](doc:regex),<br/>[region](doc:region),<br/>[row](doc:row),<br/>[signature](doc:signature),<br/>[table](doc:table),<br/>[textTable](doc:text-table)<br/>[topic](doc:topic) | see [Methods](doc:methods).                                  |\n   21  | tiebreaker                  | integer (zero-based index)<br/> or<br/>ordinal (`first`, `second`, `third`, `last`)<br/>or <br/> comparison (`>`, `<`)<br/>or<br/>`join`<br/> Default: `join` | If the method returns multiple elements (for example, a Row method), specifies which element to extract in t... <skipped 623 characters> ...ing Unicode values.<br/> If you want to compare numeric amounts and ignore non-numbers,  then add a numeric [type](doc:types) such as  `type: currency` as a top-level parameter to the field.<br/><br/>**join**: Returns all elements in the returned array as a single string, delimited by whitespaces. |\n   22: | lineFilters                 | Match object                                                 | Filters out the specified lines from the method match. For example, if the Box method extracts unwanted footer lines from a box, you can filter out the lines  with this parameter. |\n   23: | typeFilters                 | array of [Types](doc:types)                                  | Filters out the specified types from the method results. For example, for a target box containing a delivery date, a street address, and delivery notes, you can filter out the lines containing Date and Address types in order to extract the delivery notes. Note that less strict types, such as Name and Currency types, are less useful in this filter than stricter types such as the Phone Number type.<br/>For an example, see the Examples section. |\n   24: | wordFilters                 | string array                                                 | Filters out the specified strings from the method results.   |\n   25: | whitespaceFilter            | `spaces`, `all`                                              | Remove extra whitespaces.<br/> `spaces` - remove solely extra spaces.<br/> `all` - remove all whitespace characters, including newlines. |\n   26: | xRangeFilter                | object                                                       | Defines left and right boundaries in which to capture lines. For example, in combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom by text matches.  This column excludes any lines that partially fall outside the defined rectangular region. Contains the following parameters: <br/>`start` - `right`,`left`  - Defines the starting point of the \"column\" at either the... <skipped 268 characters> ...\n   27  | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28  | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter corrects this problem by sorting lines by their likely reading order. |\n   ..\n   97  ```\n   98  \n   99: Type Filters example\n  100  ----\n  101  \n  102: The following example shows using the Type Filters parameter to extract delivery notes from a box.\n  103  \n  104  **Config**\n  ...\n  114          \"id\": \"box\",\n  115          \"offsetY\": 1,\n  116:         \"typeFilters\": [\n  117            \"address\",\n  118            {\n  ...\n  130  The following image shows the example document used with this example config:\n  131  \n  132: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/types_filter.png)\n  133  \n  134: | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/types_filter.pdf) |\n  135  | ----------- | ------------------------------------------------------------ |\n  136  \n  ...\n  148  \n  149  \n  150: X Range Filter example\n  151  ----\n  152  \n  153: In combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom by text.\n  154  \n  155  The following image shows using this parameter to extract a \"cell\" of text that doesn't fit other methods:\n  156  \n  157: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/xrange_filter.png)\n  158  \n  159  \n  160  \n  161: In this example, the X Range Filter parameter is the best option:\n  162  \n  163  - Document Range by itself isn't a good option, because it captures the address of the importer as well as the supplier. \n  ...\n  167  Try out this example in the Sensible app using the following document and config:\n  168  \n  169: | Example document | [Download link](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/pdfs/xrange_filter.pdf) |\n  170  | ------------------------------ | ------------------------------------------------------------ |\n  171  \n  ...\n  185        \"method\": {\n  186          \"id\": \"documentRange\",\n  187:         \"xRangeFilter\": {\n  188            \"start\": \"left\",\n  189            \"offsetX\": -0.5,\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n    3  hidden: false\n    4  ---\n    5: Filter and format extracted data using the Type parameter in a [Field object](doc:field-query-object). \n    6  \n    7  For example, the following field returns null unless it finds data that Sensible recognizes as a number: \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n  312          \"id\": \"box\",\n  313          \"position\": \"left\",\n  314:         \"wordFilters\": [\n  315            \"cramped\"\n  316          ]\n  ...\n  345          \"id\": \"box\",\n  346          \"position\": \"right\",\n  347:         \"wordFilters\": [\n  348            \"cramped\"\n  349          ]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1300 - document-range.md:\n  173  \n  174  - using the Document Range as an alternative to the Row method to extract multiline rows. \n  175: - using the Type Filter parameter to remove unwanted matched lines, in this example, the claims dates.\n  176  \n  177  ```json\n  ...\n  199              },\n  200              \"offsetY\": -0.3,\n  201:             \"typeFilters\": [\n  202                \"date\"\n  203              ]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1600 - label.md:\n   29  \n   30  1. The  `simple_label` field extracts a line below a label.\n   31: 2. The `one_line_label` field extracts text to the right of a label on the same line, and filters out an unwanted string. \n   32  3. The `hanging_indent_label` field extracts consecutive lines of text by using a Stop parameter. The method extracts indented lines (`\"textAlignment\": \"hangingIndent\"`) , and the match does **not** include lines to the left or right of matching aligned lines. \n   33  4. The `only_looks_like_a_label` field returns `null` because labels don't work for lines separated by more than 0.2 inches.\n   ..\n   60          \"id\": \"label\",\n   61          \"position\": \"right\",\n   62:         \"wordFilters\": [\n   63:           \"but filter out this extra text\"\n   64          ]\n   65        }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   10  \n   11  - Low code. \n   12: - Can reformat or filter extracted data based on your natural-language instructions. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n   38  | id (**required**)                   | `list`                              | The Anchor parameter is optional for fields that use this method. If you specify an anchor:<br/>- Sensible ignores the anchor if it's present in the document.<br/>- Sensible returns null for the field if the anchor isn't present in the document. |\n   39  | description (**required**)          | string                              | A prompt describing the list's subject matter as a whole.    |\n   40: <skipped 65 characters> ...           | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the data in the extraction output. <br/>  -`description` (**required**):  A prompt describing the list item that you want to extract. The prompt can include instructions to reformat or filter the data. For example, provide prompts like `\" transaction amount. return the absolute value\"` or `\"vehicle make (not model)\"`.  <br/> -`type`: The list item's type. For more information, see [types](doc:types). |\n   41  | (**Deprecated**) promptIntroduction | string.                             | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   42  | llmEngine                           | `fast`, `thorough`. default: `fast` | Specifies the LLM model to which Sensible submits the full prompt, and affects the number of chunks that Sensible submits to the LLM.<br/>If the Fast parameter results in incomplete extractions for multi-page lists, use Th... <skipped 71 characters> ...el (GPT-3.5 Turbo) and can submit a smaller number of chunks than specified by the Chunk Count parameter.<br/>- `thorough`: Sensible uses a slower LLM model (GPT-4 Turbo) and submits exactly the number of chunks specified by the Chunk Count parameter.<br/>For more information, see [Notes](#notes). |\n   ..\n   72              /* for each item in the list, provide a user-friendly ID and \n   73                 description of the data you want to extract\n   74:                and optional instructions to filter or reformat the data */\n   75              \"id\": \"dinner_description\",\n   76              \"description\": \"entree description\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n   10  \n   11  - Low code. \n   12: - Can reformat or filter extracted column data based on your natural-language instructions. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n   42  | id (**required**)                   | `nlpTable`              | The Anchor parameter is optional for fields that use this method. If you specify an anchor:<br/>- Sensible ignores the anchor if it's present in the document.<br/>- Sensible returns null for the field if the anchor isn't present in the document. |\n   43  | description                         | string                  | A prompt that describes the table's subject matter as a whole. As part of finding the best-matching table, Sensible compares the table title, if present, to this description. For more details about how Sensible uses the description, see the Notes section. |\n   44: <skipped 66 characters> ...An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the column in the extraction output. <br/>  -`description` (**required**):  A prompt that describes the data you want to extract from the column. This prompt can include instructions to reformat or filter the column's data. For example, provide prompts like `\" transaction amount. return the absolute value\"` or `\"vehicle make (not model)\"`.  <br/> -`type`: The table cell's type. For more information, see [types](doc:types). <br/>  -`isRequired` (default false): If true, Sensible omits a row if its ce... <skipped 327 characters> ...\n   45  | (**Deprecated**) promptIntroduction | string.                 | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   46  | rewriteTable                        | Boolean. default: true  | If true, you can use the column descriptions to prompt the LLM to split or merge columns or otherwise restructure the table.<br/>Configure this to false to improve performance and to avoid LLM token overflow errors caused by tables that exceed 4,000 [tokens](https://platform.openai.com/tokenizer).<br/>If false, skips the full table restructure described in the Notes section. As a result, the LLM returns the table body unchanged from the OCR extraction, and the only change you can make is to rename the column headings using column IDs. |\n   ..\n   78              /* for each column, provide a user-friendly ID\n   79                 and a description of the data you want to extract from the column \n   80:                and optional instructions to filter or reformat the data*/\n   81              \"id\": \"manufacturer\",\n   82              \"description\": \"vehicle make (not model)\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1100 - page-filter.md:\n    1  ---\n    2: title: \"Page filter\"\n    3  hidden: false\n    4  ---\n    .\n    6  \n    7  \n    8: Filters out low-scoring pages given a bag of target terms and stop terms. \n    9  \n   10  Parameters\n   ..\n   14  | key                    | value   | description                                                      |\n   15  | ---------------------- | ------ | ------------------------------------------------------------ |\n   16: | type (**required**) | string | \"pageFilter\"                                                 |\n   17  | terms (**required**) | array  | An array of terms to score positively (for example, `[\"number of buildings\", \"no. of buildings\"]`). For more information about the NLP approach, see [bag of words](doc:bag-of-words). |\n   18  | stopTerms            | array  | An array of terms to score negatively (for example, `[\"comparables\"]`). For more information about the NLP approach, see [bag of words](doc:bag-of-words). |\n   19: | maxPages             | number | The maximum number of highest-scoring pages to pass through the filter |\n   20  \n   21   \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   20  | -------------- | ------ | ------------------------------------------------------------ |\n   21  | type (**required**) | `removeFooter` | For an example, see the Examples section. |\n   22: | startsOnPage | integer. default: 1 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   23  | match | [Match](doc:match) object or array of Match objects | Bypasses automatic footer recognition.<br/>Removes all text on the page below the bottom boundary of the matched line.<br>If Sensible doesn't find the match, it doesn't perform footer removal. |\n   24  | offsetY | number in inches. default: 0 | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the bottom of the page.<br>If used with the Match parameter, offsets from the bottom boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   18  | ------------------- | --------------------------------------------------- | ------------------------------------------------------------ |\n   19  | type (**required**) | `removeHeader`                                      | For an example, see the Examples section.                    |\n   20: | startsOnPage        | integer. default: 1                                 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   21  | match               | [Match](doc:match) object or array of Match objects | Bypasses automatic header recognition.<br/>Removes all text on the page above the top boundary of the matched line.<br/>If Sensible doesn't find the match, it doesn't perform header removal. |\n   22  | offsetY             | number in inches. default: 0                        | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the top of the page.<br/>If used with the Match parameter, offsets from the top boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\index.md:\n   14  | **[NLP](doc:nlp)**                     |                                                              | Advanced prompt configuration for all the large-language model (LLM)-based methods in a config. |\n   15  | **[OCR](doc:ocr)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ocr.png) | Selectively OCRs pages in documents containing a mix of digitally generated text and text images (such as scanned text). If the whole PDF is a scan, you don't need to configure this preprocessor. |\n   16: | **[Page Filter](doc:page-filter)**     |                                                              | Filters out low-scoring pages given a bag of target terms and stop terms. |\n   17  | **[Page Range](doc:page-range)**       |                                                              | Ignores pages outside the start page and end page.           |\n   18  | **[Remove Header](doc:remove-header)** | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/remove_header_1.png) | Removes repeating elements at the top of the page. Ignores header elements that overlap with the page's main body. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1200 - constant.md:\n   31          \"id\": \"documentRange\",\n   32          \"includeAnchor\": true,\n   33:         \"wordFilters\": [\n   34            \"policy period\"\n   35          ],\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1500 - zip.md:\n   35  Notes:\n   36  \n   37: - In order to filter out all column headings, the config specifies `\"type\": \"number\"` and `\"isRequired\": true` for the column `col3_year_made` .\n   38  \n   39  - To improve performance, the config specifies a Stop parameter. This ensures Sensible restricts table recognition to the relevant page area.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n   51  | anchor (**required**) | [Anchor](anchor) object, or array of Match objects | Anchor parameters have a special meaning in the context of sections, as follows:<br/><br/> **start**: Ignores anything in the document before this line. if undefined, Sensible searches for the section group starting at th... <skipped 684 characters> ...cognizes columns as sections automatically. For more information, see [Section nuances](doc:section-nuances#vertical-sections).<br/><br/>**end**: Ignores any anchor matches in the document after this line. For example, to extract solely September claims in the preceding image, specify `\"October\"`. |\n   52  | externalRange         | object                                             | **horizontal sections**:  (Advanced) Enables anchoring on text that's external to the section group range in the sections' field anchors.  For example, use the external range with the [Intersection](doc:intersection) meth... <skipped 1774 characters> ...r/>`offsetY`: Specifies the number of inches to offset the range's top boundary from the anchor's Match parameter.<br/><br/>`stopOffsetY`: Specifies the number of inches to offset from the Stop parameter.<br/><br/><br/>**vertical sections:** N/A, external range isn't allowed for vertical sections. |\n   53: <skipped 784 characters> ...e document.<br><br/>**vertical sections:** Specifies the end of the section *group*, and ignores lines that span multiple columns. If not specified, Sensible ends the section group at the first line that spans multiple columns. If the spanning lines occur mid-column, you can also configure the Line Filters parameter.<br/>For more information, see [Section nuances](doc:section-nuances#vertical-sections). |\n   54  | requireStop           | Boolean. default: false                            | **horizontal sections:**  If true, the Stop parameter is required, and the section ends when it matches the Stop parameter, instead of the default behavior of ending at the next starting line specified in the anchor's Mat... <skipped 278 characters> ...e in the section. In such a case, Sensible ignores any zero-height sections generated by this horizontal line's matches. For more information, see [Multiple anchors in section](doc:section-nuances#multiple-anchors-in-section).<br/><br/>**vertical sections:** N/A, not allowed for vertical sections. |\n   55  | offsetY               | number in inches                                   | Specifies an offset from the anchor Match parameter.  Positive values offset down the page, negative values offset up the page. <br/><br/> **horizontal sections:** Specifies the number of inches to offset the section's to... <skipped 228 characters> ...the section lacks an easy-to-match first line.<br/><br/>**vertical sections:** Specifies the number of inches to offset the section *group's* top boundary from the anchor Match parameter. For example, configure this when when you want to exclude non-columnar text from a vertical section.<br/><br/> |\n   ..\n   68  | ignoredColumns  | integer array.                                               | Removes unwanted columns from both the output *and* from the SenseML search scope. For example, this is useful if the columns contain text that interferes with anchoring on other columns. |\n   69  | minColumnGap    | number in inches. default: 0                                 | Configures column recognition by specifying the smallest allowed width of the gutters separating the columns. For an example, see [Table grid example](doc:sections-example-table-grid). Use when text in a column contains whitespace gaps such that Sensible can split one column into two. To avoid this split, set a minimum gap that's larger than the gaps inside the column. The default (0) means that zero-width vertical lines define the column boundaries. |\n   70: | lineFilters     | Match object, or array of Match objects                      | Use to ignore lines that span columns and break column recognition. For example, if the lines occur mid-column, use this parameter rather than a Stop parameter to exclude the lines. Sensible excludes the lines both from the outpu... <skipped 202 characters> ...\n   71  \n   72  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0400 - anchor-nuances.md:\n    8  [anchor syntax](doc:anchor-nuances#anchor-syntax)\n    9  \n   10: [methods-filter-anchors](doc:anchor-nuances#methods-filter-anchors)\n   11  \n   12  Anchor syntax\n   ..\n  183  \n  184  \n  185: Methods filter anchors\n  186  -----\n  187  \n  ...\n  198    \"fields\": [\n  199      {\n  200:       \"id\": \"anchors_candidates_filtered_by_method\",\n  201        \"anchor\": \"python\",\n  202        \"match\": \"first\",\n  ...\n  214  The following image shows the example document used with this example config:\n  215  \n  216: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_anchor.png)\n  217  \n  218  \n  ...\n  226  **Example Notes**\n  227  \n  228: In this example, Sensible filters out the anchor candidates (surrounded by light yellow boxes) because they do not meet the Label method's proximity requirements. The strings \"python\" are far enough away from other lines that you should use the Row method here instead. \n  229  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3600 - section-nuances.md:\n   41     - If there's a Stop parameter, Sensible adds the non-column text to each column. Each column then has a nonlinear, irregular shape. For example, this allows each column to use a table title that spans multiple columns as an anchor. \n   42  \n   43:    - If there's no Stop parameter, any non-columnar text in the range breaks column recognition. Exclude the text from the range using the offset parameters or the Lines Filter parameter.\n   44  3. Extracts fields from each column in the group. Sensible expects but doesn't require that the data is in a repeated structure for each column.\n   45  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4500 - draft-senseml-order.md:\n   51    \n   52  \n   53: 3. Filter configurations with fingerprints\n   54  ----\n   55  \n   56: <skipped 62 characters> ...document to improve performance. Without fingerprints, Sensible runs every configuration in the document type. With them, Sensible can test if an \"ACME_CO_INSURANCE\" config should run on an \"ACME_quote.pdf\" by examining the PDF's standardized text output for key text like \"ACME\" and \"insurance\" and filtering out documents that don't contain the key phrases. \n   57  \n   58  - Score each configuration against its configured fingerprint tests, if present.  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\cheat\\2000 - cheat-2.md:\n  114  | [Row](doc:row)                 | A frequently used extraction method. |\n  115  | [Fixed Table](doc:fixed-table) | A frequently used extraction method. |\n  116: | [Types](doc:types)             | Filter and type your output.         |\n  117  \n  118  Initial config\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n  169  The example:\n  170  \n  171: 1. Filters a directory to find the PDF files.\n  172  2. Extracts data from the PDF files using the extraction configurations in a  `bank_statements` document type.\n  173  4. Logs the extracted document data JSON to the console.\n  ...\n  181  const sensible = new SensibleSDK(apiKey);\n  182  const dir = \"ABSOLUTE_PATH_TO_DOCUMENTS_DIR\";\n  183: const files = (await fs.readdir(dir)).filter((file) => file.match(/\\.pdf$/));\n  184  const extractions = await Promise.all(\n  185    files.map(async (filename) => {\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n  167  The example:\n  168  \n  169: 1. Filters a directory to find the PDF files.\n  170  2. Extracts data from the PDF files using the extraction configurations in a  `bank_statements` document type.\n  171  4. Logs the extracted document data JSON to the console.\n\n95 matches across 25 files\n\n\nSearching 157 files for \"extraction history\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_configuration.yml:\n  139        description: |\n  140          Delete a document type and everything it contains, for example configurations and reference PDfs,\n  141:         but not its extraction history displayed in the Sensible app.\n  142        tags:\n  143        - Document type\n\n1 match in 1 file\n\n\nSearching 157 files for \"range_2\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\9500 - sections-example-external-range.md:\n   15  In the following screenshot, the green brackets denote sections, where each section is a claim. The labels for the claims' content is at the start of the document, under the `Claims contents` heading. The example defines an external range for these labels, then uses the [Intersection](doc:intersection) method to specify vertical anchors in the external range.\n   16  \n   17: ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/sections_external_range_2.png)\n   18  \n   19  **Config**\n\n1 match in 1 file\n\n\nSearching 157 files for \"thorough\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   40  | properties (**required**)           | object                              | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the data in the extraction output. <br/>  -`description` (**required**):  A prompt describing the list item that you want to extract. The prompt can include instructions to reformat or filter the data. For example, provide prompts like `\" transaction amount. return the absolute value\"` or `\"vehicle make (not model)\"`.  <br/> -`type`: The list item's type. For more information, see [types](doc:types). |\n   41  | (**Deprecated**) promptIntroduction | string.                             | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   42: | llmEngine                           | `fast`, `thorough`. default: `fast` | Specifies the LLM model to which Sensible submits the full prompt, and affects the number of chunks that Sensible submits to the LLM.<br/>If the Fast parameter results in incomplete extractions for multi-page lists, use Thorough as an alternative.<br/>- `fast`:  Sensible uses a faster LLM model (GPT-3.5 Turbo) and can submit a smaller number of chunks than specified by the Chunk Count parameter.<br/>- `thorough`: Sensible uses a slower LLM model (GPT-4 Turbo) and submits exactly the number of chunks specified by the Chunk Count parameter.<br/>For more information, see [Notes](#notes). |\n   43  | contextDescription                  |                                     | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters) |\n   44  | pageHinting                         |                                     | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters) |\n   ..\n  451  \n  452  2. Sensible selects a number of the top-scoring chunks: \n  453:    1. If you specify Thorough for the LLM Engine parameter, the Chunk Count parameter determines the number of top-scoring chunks Sensible selects to submit to the LLM.\n  454     2. If you specify Fast for the LLM Engine parameter,  1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. To improve performance, Sensible removes chunks that are significantly less relevant from the list of top-scoring chunks. The number of chunks Sensible sumbits to the LLM can therefore be smaller than the number specified by the Chunk Count parameter.\n  455  3. To avoid large-language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers. Sensible batches a maxiumum of 20 page numbers. The chunks in each page group can be non-consecutive in the document.\n\n4 matches in 1 file\n\n\nSearching 157 files for \"micros\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_configuration.yml:\n  841          ocr_engine:\n  842            enum:\n  843:             - microsoft\n  844              - amazon\n  845              - google\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\3000 - portfolio.md:\n   14  - Use [Generate upload URL for portfolio](https://docs.sensible.so/reference/generate-upload-url-portfolio) or [Extract from URL for portfolio](https://docs.sensible.so/reference/extract-from-url-portfolio) to extract data from the portfolio. In these requests, specify the doc types that apply to the portfolio. For example, `\"types\": [\"insurance_quote\", \"insurance_loss_run\"]`. The API response includes document extractions and their page ranges in the portfolio.\n   15  \n   16: **Note**: When Sensible  extracts from portfolios, it ignores any OCR settings in document types and uses Microsoft OCR. \n   17  \n   18  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1400 - fixed-table.md:\n   26  | columnCount (**required**) | integer                                                      | The number of columns the tables must have.                  |\n   27  | columns (**required**)     | array                                                        | An array of objects with the following parameters: <br/> -`id` (**required**): The ID for the column in the extraction output <br/> - `index` (**required**): The zero-based column index <br/>-`type` : The t... <skipped 168 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   28: <skipped 89 characters> ...lt: none | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Amazon Web Service  provider to perform table recognition. When you omit a stop, Sensible uses a Microsoft OCR provider.<br/>When you specify a stop, Sensible supports:<br/>- merged cells in tables. Sensible populates \"empty\" spanned cells with the spanned value. For an example, see [Merged cell example](doc:table#example-merged-cells).<br/> - checkboxes in cells. Returns checkbox selection status as `[true]` or `[false]`. |\n   29  | startOnRow                 | integer. default: 0                                          | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n   30  | detectTableStructureOnly   | boolean. default: false                                      | Set this parameter to true to troubleshoot optional character recognition (OCR) in a table. If true, Sensible bypasses the text output by the table recognition OCR provider. Sensible instead recognizes the table's text using the  [OCR engine](doc:ocr-engine) specified by your document type, or by using text embedded in the document file if present. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2100 - table.md:\n   22  | id (**required**)        | `table`                                             | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. See the Stop parameter for details about how Sensible recognizes a table. |\n   23  | columns (**required**)   | array                                               | An array of objects with the following parameters: <br/> -`id` (**required**): The id for the column in the extraction output. <br/>  -`terms` (**required**): An array of terms to score positively during column recogn... <skipped 503 characters> ... or if the contents don't match the value you specify in this column's Type parameter. If false, Sensible returns nulls for empty cells in the row. Note that if you set this parameter to true for one column, Sensible omits the row for *all* columns, even if the row had content under other columns. |\n   24: <skipped 76 characters> ...ects | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Amazon Web Service OCR  provider to perform table recognition. When you omit a stop, Sensible uses a Microsoft OCR provider.<br/>When you specify a stop, Sensible supports:<br/>- merged cells in tables. Sensible populates \"empty\" spanned cells with the spanned value. For an example, see [Merged cell example](doc:table#example-merged-cells).<br/> - checkboxes in cells. Returns checkbox selection status as `[true]` or `[false]`. |\n   25  | startOnRow               | integer. default: 0                                 | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n   26  | detectTableStructureOnly | boolean. default: false                             | Set this parameter to true to troubleshoot optional character recognition (OCR) in a table. If true, Sensible bypasses the text output by the table recognition OCR provider. Sensible instead recognizes the table's text using the  [OCR engine](doc:ocr-engine) specified by your document type, or by using text embedded in the document file if present. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6800 - document-type-settings\\2000 - ocr-engine.md:\n   12  | --------- | ------------------------------------------------------------ |\n   13  | Amazon    | Default engine for the OCR preprocessor.                     |\n   14: | Microsoft | Default engine for document types.<br/>Suited to typewritten documents and large documents up to 50 MB in size. |\n   15: | Lazarus   | Faster than Microsoft and produces similar output.           |\n   16: | Google    | Faster than Microsoft and suited to handwriting and documents that are 5 pages or fewer. The Google engine doesn't merge words into lines automatically. Use the Merge Lines preprocessor in your configurations to do so. |\n   17  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6800 - document-type-settings\\4000 - ocr-level.md:\n   10  For an overview how Sensible handles OCR, see the following steps:\n   11  \n   12: 1. Sensible converts [supported](doc:file-types) Microsoft Office file types into PDFs.\n   13  \n   14  2. Sensible transforms the bytes of the document into raw text, and determines whether the document needs OCR:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1600 - file-types.md:\n    8  Sensible supports the following file types:\n    9  \n   10: | Operation                              | PDF  | Microsoft Word<br/> (DOC and DOCX) | Microsoft Excel<br/>(XLSX) | image formats<br/>(JPEG, PNG, and TIFF) |\n   11  | -------------------------------------- | ---- | ---------------------------------- | --------------------------------------- | --------------------------------------- |\n   12  | Sensible app's Extract tab    | ✅    | ✅                                  | ✅                                 | ❌                                       |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\write-prompts\\instruct\\1000 - query-tips.md:\n   18  \n   19    -  [Prompt engineering](https://platform.openai.com/docs/guides/prompt-engineering)\n   20:   -  [Introduction to prompt engineering](https://learn.microsoft.com/en-us/azure/cognitive-services/openai/concepts/prompt-engineering)\n   21    -  [Short course: Building systems with the ChatGPT API](https://www.deeplearning.ai/short-courses/building-systems-with-chatgpt/) and [Short course: ChatGPT Prompt Engineering for Developers](https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/). \n   22  \n\n11 matches across 8 files\n\n\nSearching 157 files for \"docx\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n 1663            description: |\n 1664              This parameter shows option \\#2 for posting PDF bytes. To populate it, you can encode a document, like this [example](https://github.com/sensible-hq/sensible-docs/raw/main/readme-sync/assets/v0/pdfs/1_extract_your_first_data.pdf) using a free online PDF-to-base64 encoder and paste the resulting bytes into this parameter, or you can right-click this parameter field and select **Use Example Value**.\n 1665: <skipped 664752 characters> ...kEIoaAjxQRdlBn0MgsPBiIoVqBs+FPYgbx3whrsyDoX1O/wn8LKOQNtQhAWh7dDvfNZ/Ebz914OCAV1I0dxweks2eFXYh+860DbDe8dwgXFO/wdQ6QW+kz6sGZBjeIFfuewxnypoMDZUbDDh2I60Jxr7tQMPxRbZA1ACIkzfDgKLINKEMIgVNBhQg39LLr0ghAWnEK44PGcZ8jqukDNy3hOEwLtLhDgQKhsZ/+7dar9kLNeKdeBCDQ/1Ey6EPKJghPojrLc66SJQ9woqwaGgNmRdUIBrWD4rXjLyEoQHY4FIDocXZB1dmSDGgOJQzQqIDpMEwpO6BpLWSFVnNXwc68zIR08rRB8CJkdZscEEMMvxj549U76EKl9VTgggj1RpniBL4sS0CiFamHu8AuVHOgFEaScC8ygq4pL7KisLJHQA2unQUgFKaEsCNnhd+ONe+87FkB256wetTC9xhxnkNrpBYVRzlDTVPKd0LigYKEag5pDTJPtuIW/wJQKWjjFchGYIAphMEe7Fie/kyyxoFiqOKwJssPw3egba5mdxRIG9bpCPpOcBb8aq7icBb2yO4f1KSbukKu10A9Rph5aAjPEdNKFk... <skipped 53368 characters> ...DlwUZwFagrh78MNgDjDhweXJiz8tJgzUhiyQ2hH00AHjq6B3qWY0+HwD5FS8BNwmOBIvpEAIbVGDYh9bAHidQ7nHJq/G48Fv0MQmB/FtRya1pmaQwih96x4RqXeQHMKA0H8Pnzs2afVJRDKXCb9BBr7FqaBuHkL7tbrhCGkOYHmhEHLBi/FGagCOpRTeFA+CGFHMT9UaFUJOnBkEbPCwATRUaMShPD7OJLdrfRz6DUBhHCNGpXwTKWDUEGgOeHsZtSAmOFrhF5wbh6l7rDwZHz3WTrQHEgJQWsnrHSgOR31IDocxYgYuoRMyAoLoRTxn8PJfU6YP6Fn3TPnkF5GczrG8gsh0zR6ICmrIeAcomaAWQhNQAQHhPDmEJcD4u0Ym4cmhN/H7taOk4B4EZN9l18pvU+6As1xGEOiL1GsMcwt5vA7zAUmqAl6OR0Of8YZZG+ewJWCOMTFul4Qwh2GyiF8jsUQZ4MCLD4kKFAc1HOIQvgu5o02mYv7X4SsdUH2taqsRqE5N6+TKyW+jBd8776mmelzaPi1CEEkVBCqZh/tIPSC2EEliGDrGf4hUoUhqG9ZoADEjDnFzqgz9EK7FRzazECDC... <skipped 59097 characters> ...fIGz7bwbFVurv46BahnLgGc29Z0FsSzlqUMMpA5Qcx0FjQF7hYkFfex7V1hYen/In4QBAX+HYQb+IBzSmccPMC2unX0GsCrv8AGkOTrkdbadgqfM4dhMs8ZWrTlFb5BWYuYAUBQtcO3+7/EB/uAYnQR3sKLRqJsJQ73SWcbvUTgPNxXAZE6FmgOUEJ4k0MCb5LucO3O3ENNyTKLGldQZJT9lFFuJjAKUom6IlpzKJkhnludecQypsII0Lv78c9ffJ8jThEUIqVJcn543BtEAtMH04ccr37MsZ6yXA231Y4C2DOCX4p/iF7uOQIAe3R4C/MXXCeQssfjW/3FQsezRZoEO/ghQ2BsbQTmTu2kqGfRePZ2AXJQIc7J+ZuYeaVYZoPES7KCwQMD+6gZBYOPyxbsIvpKyXBrA52i11O8KrWoktgZ4lB0hxbfxxu7v6hn1CxwJ95cA5fw1o0FmEQRSDwM83KB8EvnCCjLI7j8All4AQ+jJq7gWnrmoddSmagF0d5B8nSO59xPZ9ZlHc4HEgXAc5T+AqNOOvl2wX9+3Hb+Zfg65SgrQKB5hQxjUQQCIuvS8m3pqRfQLt1gWlm4QS+g0B/HU... <skipped 1082466 characters> ...\n 1666  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1600 - file-types.md:\n    8  Sensible supports the following file types:\n    9  \n   10: | Operation                              | PDF  | Microsoft Word<br/> (DOC and DOCX) | Microsoft Excel<br/>(XLSX) | image formats<br/>(JPEG, PNG, and TIFF) |\n   11  | -------------------------------------- | ---- | ---------------------------------- | --------------------------------------- | --------------------------------------- |\n   12  | Sensible app's Extract tab    | ✅    | ✅                                  | ✅                                 | ❌                                       |\n   ..\n   28  \n   29  - When extracting from image file formats, Sensible ignores OCR or OCR preprocessor settings you configure in the document type or SenseML configuration. For more information about OCR, see [OCR level](doc:ocr-level).\n   30: - For DOC and DOCX documents, Sensible converts the document to PDF before processing it.\n   31  - For XLSX documents, Sensible converts the document to PDF. To style the document, Sensible:\n   32       - Discards truncated text in cells. To retain the text, reformat or resize the cells in Excel so the text is visible, then re-run the extraction.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4500 - draft-senseml-order.md:\n   14  This topic gives an overview of the Sensible's extraction engine, including the order of execution for SenseML, for example, preprocessors, fields, computed fields, and sections.\n   15  \n   16: 0. Convert DOC and DOCX files to PDF.\n   17  \n   18  1. Read text\n\n6 matches across 3 files\n\n\nSearching 157 files for \"file t\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_classification.yml:\n   39          To post the document bytes, specify the non-encoded document bytes as the entire request body,and specify the `Content-Type` header, for example,\"application/pdf\" or \"image/jpeg\".\n   40  \n   41:         For supported file size and types, see [Supported file types](doc:file-types).\n   42  \n   43          \n   ..\n  109          To post the document bytes, specify the non-encoded document bytes as the entire request body,and specify the `Content-Type` header, for example,\"application/pdf\" or \"image/jpeg\".\n  110          \n  111:         For supported file size and types, see [Supported file types](doc:file-types).\n  112        requestBody:\n  113          required: true\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n   53            2. Base64 encode the document bytes, specify them in a body \"document\" field, and specify application/json for the `Content-Type` header.\n   54  \n   55:         For a list of  supported document file types, see [Supported file types](doc:file-types).\n   56  \n   57        parameters:\n   ..\n  131            3. To retrieve the extraction, use a webhook, or use the extraction `id` returned in the response to poll the GET documents/{id} endpoint.\n  132  \n  133:         For supported file size and types, see [Supported file types](doc:file-types).\n  134  \n  135          For example, if your call to `/generate_upload_url` specifies the document type with a `content_type` body parameter (recommended), your first two steps are as follows:\n  ...\n  196        description: |\n  197          Extract data asynchronously from a document at the specified `document_url`.<br/>\n  198:         For supported file size and types, see [Supported file types](doc:file-types).\n  199          Take the following steps.\n  200          1. Run this endpoint.\n  ...\n  386  \n  387        description:  |\n  388:         Use this endpoint with multiple documents that are packaged into one file (a \"portfolio\"). For a list of supported file types, see [Supported file types](doc:file-types).\n  389          Segments a portfolio file into the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions\n  390          asynchronously for each document Sensible finds in the portfolio.  Take the following steps -\n  ...\n  437        description:  |\n  438  \n  439:         Use this endpoint with multiple documents that are packaged into one file (a \"portfolio\"). For a list of supported file types, see [Supported file types](doc:file-types).\n  440          Segments a portfolio file at the specified `document_url` into the specified document types (for example, 1099, w2, and bank_statement)\n  441          and then runs extractions asynchronously for each document Sensible finds in the portfolio. Take the following steps.\n  ...\n  602          For portfolio extractions, Sensible returns an Excel file containing fields for all the documents it finds in the PDF. For more information, see [Multi-document spreadsheet](doc:excel-reference#multi-document-spreadsheet).\n  603  \n  604:         For a list of document file types that Sensible can extract data from, see [Supported file types](doc:file-types).\n  605          Call this endpoint after an extraction completes. For more information about checking extraction status,\n  606          see the `GET /documents/{id}` endpoint.\n  ...\n  644          For the best compiled spreadsheet results, configure your SenseML so that the documents output identically named fields.\n  645          For more information about the conversion process, see [SenseML to spreadsheet reference](doc:excel-reference).\n  646:         For a list of document file types that Sensible can extract data from, see [Supported file types](doc:file-types).\n  647          Call this endpoint after an extraction completes. For more information about checking extraction status,\n  648          see the `GET /documents/{id}` endpoint.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\batch-api.md:\n  119    \n  120  \n  121: 5. You can generate an Excel file that combines the completed extractions in the batch by using the batch ID. For example:\n  122  \n  123     ```curl\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\index.md:\n    5  ---\n    6  \n    7: With Sensible's Zapier integration, you can transform data in PDFs and other document file types into emails, databases, Google sheets, and other Zapier-supported destinations.\n    8  \n    9  For example, you can extract data in 1040 tax forms: \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n    9  If you're trying to convert a document, such as a PDF, into an Excel file, you often find tools that copy the document's visual layout into a spreadsheet, with no meaningful relationship between the extracted text and the underlying cells. \n   10  \n   11: In contrast, Sensible converts document tables, checkboxes, paragraphs, and even complex repeating section layouts into meaningfully labeled column/row pairs and linked sheets. For a list of document file types that Sensible can extract data from, see [Supported file types](doc:file-types).\n   12  \n   13  This topic describes the rules Sensible uses to:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\index.md:\n   27  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/quickstart_instruct_11.png)\n   28  \n   29: 3. Click **Upload document** and select your example document or documents. For a list of supported file types, see [Supported file types](doc:file-types). Note that Sensible automatically OCRs documents as needed, except in [advanced cases](doc:ocr).\n   30  \n   31  ​       If you don't have an example document, use the following document with the `sensible_instruct_basics` document type :\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6800 - document-type-settings\\4000 - ocr-level.md:\n   10  For an overview how Sensible handles OCR, see the following steps:\n   11  \n   12: 1. Sensible converts [supported](doc:file-types) Microsoft Office file types into PDFs.\n   13  \n   14  2. Sensible transforms the bytes of the document into raw text, and determines whether the document needs OCR:\n   15  \n   16:    - If the file type is an image (for example, PNG), Sensible runs OCR for the whole document, as specified by the document type's OCR Engine parameter.\n   17  \n   18     - **(Configurable)** if the file is a PDF, Sensible processes the file, as specified by the document type's OCR Level parameter. For more information, see the following table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1600 - file-types.md:\n    1  ---\n    2: title: \"Supported file types\"\n    3  hidden: false\n    4  ---\n    5  \n    6: ## File types\n    7  \n    8: Sensible supports the following file types:\n    9  \n   10  | Operation                              | PDF  | Microsoft Word<br/> (DOC and DOCX) | Microsoft Excel<br/>(XLSX) | image formats<br/>(JPEG, PNG, and TIFF) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\3000 - integrate.md:\n    9  | ------------------------------ | --------------------------------------------- | ------------------------------------------------------------ |\n   10  | SDKs | [SDK guides](doc:sdk-guides) | Extract and classify documents. |\n   11: | [Zapier](doc:zapier)           | [Zapier tutorial](doc:zapier-getting-started) | Transform data in PDFs and other document file types into emails, databases, Google sheets, and other Zapier-supported destinations. |\n   12  | [API](ref:choosing-an-endpoint) | [API quickstart](doc:quickstart)              | Extract and classify documents and manage extraction configuration. |\n   13  | Quick extraction | [Quick extraction](doc:quick-extraction) | Drag and drop documents to extract data from documents in the Sensible app.  Upload files in bulk, and download extracted data as JSON or Excel files. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n  147  | key               | value                                                      | description                                                  |\n  148  | ----------------- | ---------------------------------------------------------- | ------------------------------------------------------------ |\n  149: | path              | string                                                     | The path to the document you want to extract from. For more information about supported file size and types, see  [Supported file types](https://docs.sensible.so/docs/file-types). |\n  150  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  151  | url               | string                                                     | The URL of the document you want to extract from. URL must:<br/>- respond to a GET request with the bytes of the document you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  ...\n  240  | key  | value  | description                                                  |\n  241  | ---- | ------ | ------------------------------------------------------------ |\n  242: | path | string | The path to the document you want to classify. For information about supported file size and types, see [Supported file types](https://docs.sensible.so/docs/file-types). |\n  243  | file | string | The non-encoded bytes of the document you want to classify.  |\n  244  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n  145  | key               | value                                                      | description                                                  |\n  146  | ----------------- | ---------------------------------------------------------- | ------------------------------------------------------------ |\n  147: | path              | string                                                     | The path to the document you want to extract from. For more information about supported file size and types, see  [Supported file types](https://docs.sensible.so/docs/file-types). |\n  148  | file              | string                                                     | The non-encoded bytes of the document you want to extract from. |\n  149  | url               | string                                                     | The URL of the document you want to extract from. URL must:<br/>- respond to a GET request with the bytes of the document you want to extract data from <br/>- be either publicly accessible, or presigned with a security token as part of the URL path.<br/>To check if the URL meets these criteria, open the URL with a web browser. The browser must either render the document as a full-page view with no other data, or download the document, without prompting for authentication. |\n  ...\n  247  | key  | value  | description                                                  |\n  248  | ---- | ------ | ------------------------------------------------------------ |\n  249: | path | string | The path to the document you want to classify. For information about supported file size and types, see [Supported file types](https://docs.sensible.so/docs/file-types). |\n  250  | file | string | The non-encoded bytes of the document you want to classify.  |\n  251  \n\n30 matches across 11 files\n\n\nSearching 158 files for \"rate_confirmation_ch\"\n\n0 matches\n\nSearching 158 files for \"accord_25_test\"\n\n0 matches\n\nSearching 158 files for \"gas_dec\"\n\n0 matches\n\nSearching 158 files for \"the filename in the extraction re\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n  800        in: query\n  801        description: >-\n  802:         If you specify the filename of the document using this parameter, then Sensible returns the filename in the extraction response.\n  803        schema:\n  804          type: string\n  ...\n  950      DocumentName:\n  951        type: string\n  952:       description: If you specify the filename of the document using the `document_name` parameter, then Sensible returns the filename in the extraction response and includes it in the Sensible app .\n  953        example: example.pdf\n  954  \n\n2 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 249881,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
				[
					117,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAALPPAwAAAAAAtM8DAAAAAAAAAAAAtM8DAAAAAAC1zwMAAAAAAAAAAAC1zwMAAAAAALbPAwAAAAAAAAAAALbPAwAAAAAAt88DAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAs88DAAAAAACzzwMAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " includes"
					},
					"CQAAALfPAwAAAAAAuM8DAAAAAAAAAAAAuM8DAAAAAAC5zwMAAAAAAAAAAAC5zwMAAAAAALrPAwAAAAAAAAAAALrPAwAAAAAAu88DAAAAAAAAAAAAu88DAAAAAAC8zwMAAAAAAAAAAAC8zwMAAAAAAL3PAwAAAAAAAAAAAL3PAwAAAAAAvs8DAAAAAAAAAAAAvs8DAAAAAAC/zwMAAAAAAAAAAAC/zwMAAAAAAMDPAwAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAt88DAAAAAAC3zwMAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAMDPAwAAAAAAwc8DAAAAAAAAAAAAwc8DAAAAAADCzwMAAAAAAAAAAADCzwMAAAAAAMPPAwAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwM8DAAAAAADAzwMAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAMPPAwAAAAAAxM8DAAAAAAAAAAAAxM8DAAAAAADFzwMAAAAAAAAAAADFzwMAAAAAAMbPAwAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw88DAAAAAADDzwMAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAMbPAwAAAAAAx88DAAAAAAAAAAAAx88DAAAAAADIzwMAAAAAAAAAAADIzwMAAAAAAMnPAwAAAAAAAAAAAMnPAwAAAAAAys8DAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxs8DAAAAAADGzwMAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " Sensible"
					},
					"CQAAAMrPAwAAAAAAy88DAAAAAAAAAAAAy88DAAAAAADMzwMAAAAAAAAAAADMzwMAAAAAAM3PAwAAAAAAAAAAAM3PAwAAAAAAzs8DAAAAAAAAAAAAzs8DAAAAAADPzwMAAAAAAAAAAADPzwMAAAAAANDPAwAAAAAAAAAAANDPAwAAAAAA0c8DAAAAAAAAAAAA0c8DAAAAAADSzwMAAAAAAAAAAADSzwMAAAAAANPPAwAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAys8DAAAAAADKzwMAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAANPPAwAAAAAA1M8DAAAAAAAAAAAA1M8DAAAAAADVzwMAAAAAAAAAAADVzwMAAAAAANbPAwAAAAAAAAAAANbPAwAAAAAA188DAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA088DAAAAAADTzwMAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANfPAwAAAAAA2M8DAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA188DAAAAAADXzwMAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "    {\n      \"anchor\": \"≥\",\n      \"id\": \"test char\",\n      \"method\": {\n        \"id\": \"label\",\n        \"position\": \"right\"\n      }\n    },",
			"settings":
			{
				"buffer_size": 135,
				"line_ending": "Windows",
				"name": "{"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAhwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "v0/senseml-reference/2000 - field-query-object/1200 - method.md",
			"settings":
			{
				"buffer_size": 9913,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdBgAAAAAAAB0GAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "v0/senseml-reference/2000 - field-query-object/1100 - match.md",
			"settings":
			{
				"buffer_size": 11282,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAMLAAALS0tCnRpdGxlOiAiTWF0Y2ggb2JqZWN0IgpoaWRkZW46IGZhbHNlCgotLS0KCgpNYXRjaGVzIGFyZSBpbnN0cnVjdGlvbnMgZm9yIG1hdGNoaW5nIGxpbmVzIG9mIHRleHQgaW4gYSBkb2N1bWVudC4gVGhleSdyZSB2YWxpZCBlbGVtZW50cyBpbiBhbmNob3JzIGFuZCBvdGhlciBvYmplY3RzLiAKClNlZSB0aGUgZm9sbG93aW5nIHNlY3Rpb25zIGZvciBtb3JlIGluZm9ybWF0aW9uOgoKWyoqTWF0Y2ggdHlwZXMqKl0oZG9jOm1hdGNoI21hdGNoLXR5cGVzKQoKLSBbR2xvYmFsIHBhcmFtZXRlcnNdKGRvYzptYXRjaCNnbG9iYWwtcGFyYW1ldGVycykKLSBbU2ltcGxlIG1hdGNoXShkb2M6bWF0Y2gjc2ltcGxlLW1hdGNoKQotIFtSZWdleCBtYXRjaF0oZG9jOm1hdGNoI3JlZ2V4LW1hdGNoKQotIFtGaXJzdCBtYXRjaF0oZG9jOm1hdGNoI2ZpcnN0LW1hdGNoKQotIFtCb29sZWFuIG1hdGNoZXNdKGRvYzptYXRjaCNib29sZWFuLW1hdGNoZXMpCgpbKipNYXRjaCBhcnJheXMqKl0oZG9jOm1hdGNoI21hdGNoLWFycmF5cykKCgpNYXRjaCB0eXBlcwo9PT0KCkdsb2JhbCBwYXJhbWV0ZXJzCi0tLS0KClRoZSBmb2xsb3dpbmcgcGFyYW1ldGVycyBhcmUgYXZhaWxhYmxlIHRvIG1vc3QqIHR5cGVzIG9mIE1hdGNoIG9iamVjdHMuIAoKCnwga2V5ICAgICAgICAgICB8IHZhbHVlcyAgICAgICAgICAgICAgICAgIHwgZGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAp8IG1pbmltdW1IZWlnaHQgfCBudW1iZXIgICAgICAgICAgICAgICAgICB8IFRoZSBtaW5pbXVtIGhlaWdodCBvZiB0aGUgbWF0Y2hlZCBsaW5lJ3MgYm91bmRhcmllcywgaW4gaW5jaGVzLiB8CnwgbWF4aW11bUhlaWdodCB8IG51bWJlciAgICAgICAgICAgICAgICAgIHwgVGhlIG1heGltdW0gaGVpZ2h0IG9mIHRoZSBtYXRjaGVkIGxpbmUncyBib3VuZGFyaWVzLCBpbiBpbmNoZXMuIHwKfCByZXZlcnNlICAgICAgIHwgYm9vbGVhbi4gZGVmYXVsdDogZmFsc2UgfCBVc2UgaW4gbWF0Y2ggYXJyYXlzLiBEb24ndCBzZXQgdGhpcyB0byB0cnVlIGZvciB0aGUgZmlyc3QgbWF0Y2ggaW4gdGhlIGFycmF5LCBleGNlcHQgaW4gdGhlIEV4dGVybmFsIFJhbmdlIHBhcmFtZXRlciBmb3IgW3NlY3Rpb25zXShkb2M6c2VjdGlvbnMpLjxici8+ICBJZiB0cnVlLCBzZWFyY2hlcyBmb3IgYSBtYXRjaCBpbiBsaW5lcyB0aGF0IHByZWNlZGUgdGhlIHByZXZpb3VzIG1hdGNoIGluIHRoZSBhcnJheS4gRm9yIGV4YW1wbGUsIGluIGFuIGFycmF5IHdpdGggbWF0Y2hlcyBBIGFuZCBCLCBpZiBCIGlzIGEgRmlyc3QgbWF0Y2ggd2l0aCBgInJldmVyc2UiOnRydWVgLCB0aGVuIFNlbnNpYmxlIG1hdGNoZXMgdGhlIGZpcnN0IGxpbmUgdGhhdCAqcHJlY2VkZXMqIHRoZSBsaW5lIG1hdGNoZWQgYnkgQS4gRm9yIGFuIGV4YW1wbGUsIHNlZSBbTWF0Y2ggYXJyYXlzXShkb2M6bWF0Y2gtYXJyYXlzI3JldmVyc2UtbWF0Y2gpLiB8CnwgeFJhbmdlRmlsdGVyICB8ICAgICAgICAgICAgICAgICAgICAgICAgIHwgRGVmaW5lcyBhIGxlZnQtdG8tcmlnaHQgcmFuZ2UsIG9yICJjb2x1bW4iLCBpbiB3aGljaCB0byBzZWFyY2ggZm9yIGEgbWF0Y2guIENvbnRhaW5zIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczo8YnIvPmBtaW5YYCBEZWZpbmVzIHRoZSBsZWZ0IGJvdW5kYXJ5IG9mIHRoZSByYW5nZSwgaW4gemVyby1pbmRleGVkIGluY2hlcyBmcm9tIHRoZSBsZWZ0IGVkZ2Ugb2YgdGhlIHBhZ2UuPGJyLz5gbWF4WGAgRGVmaW5lcyB0aGUgcmlnaHQgYm91bmRhcnkgb2YgdGhlIHJhbmdlLCBpbiB6ZXJvLWluZGV4ZWQgaW5jaGVzIGZyb20gdGhlIGxlZnQgZWRnZSBvZiB0aGUgcGFnZS4gfAoKKlRoZXkncmUgbm90IGF2YWlsYWJsZSBhcyBhIHRvcC1sZXZlbCBwYXJhbWV0ZXIgZm9yIGEgQm9vbGVhbiBtYXRjaCwgYnV0IGF2YWlsYWJsZSBmb3IgaW5kaXZpZHVhbCBtYXRjaGVzIGluIGl0cyBhcnJheS4KClNpbXBsZSBtYXRjaAotLS0tLS0tCgpNYXRjaCB1c2luZyBzdHJpbmdzLiAgCgoqKlBhcmFtZXRlcnMqKgoKfCBrZXkgICAgICAgICAgICAgICAgICB8IHZhbHVlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBkZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IC0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8CnwgdGV4dCAgKCoqcmVxdWlyZWQqKikgfCBzdHJpbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgVGhlIHN0cmluZyB0byBtYXRjaCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCB0eXBlICgqKnJlcXVpcmVkKiopICB8IGBlcXVhbHNgLCBgc3RhcnRzV2l0aGAsIGBlbmRzV2l0aGAsIGBpbmNsdWRlc2AgICAgICAgICAgfCBgZXF1YWxzYDogVGhlIG1hdGNoaW5nIGxpbmUgbXVzdCBlcXVhbCB0aGUgc3RyaW5nPGJyLz5gc3RhcnRzV2l0aGA6IE1hdGNoIGF0IGJlZ2lubmluZyBvZiBsaW5lPGJyLz5gZW5kc1dJdGhgOiBNYXRjaCBhdCBlbmQgb2YgbGluZTxici8+YGluY2x1ZGVzYDogTWF0Y2ggYW55d2hlcmUgaW4gbGluZSB8CnwgZWRpdERpc3RhbmNlICAgICAgICAgfCBpbnRlZ2VyLiB0aGUgbnVtYmVyIG9mIGFsbG93ZWQgZWRpdHMgZm9yIGEgZnV6enkgbWF0Y2guIHwgQ29uZmlndXJlIHRoaXMgcGFyYW1ldGVyIHRvIGFsbG93ICpmdXp6eSosIG9yIGFwcHJveGltYXRlLCBzdHJpbmcgbWF0Y2hpbmcuIFRoaXMgaXMgdXNlZnVsIGZvciBPQ1IgdGV4dCwgbGlrZSBwb29yLXF1YWxpdHkgc2NhbnMgb3IgaGFuZHdyaXRpbmcuIEZvciBleGFtcGxlLCBpZiB5b3UgY29uZmlndXJlIDMsIHRoZW4gU2Vuc2libGUgbWF0Y2hlcyBga2l0dGVuYCBpbiB0aGUgZG9jdW1lbnQgZm9yIGBzaXR0aW5nYCBpbiB0aGUgVGV4dCBwYXJhbWV0ZXIuICBTZW5zaWJsZSBpbXBsZW1lbnRzIGZ1enp5IG1hdGNoaW5nIHVzaW5nIFtMZXZlbnNodGllbiBkaXN0YW5jZV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGV2ZW5zaHRlaW5fZGlzdGFuY2UpLiA8YnIvPlNlbnNpYmxlIHJlY29tbWVuZHMgYXZvaWRpbmcgc2V0dGluZyB0aGlzIHBhcmFtZXRlciBvbiBzaG9ydCBtYXRjaGVzLCBsaWtlICJBOiIgb3IgIlN1YiIsIGJlY2F1c2UgYW4gZWRpdCBkaXN0YW5jZSBhcyBsb3cgYXMgMiBvbiBhIHNob3J0IG1hdGNoIGNhbiByZXN1bHQgaW4gYSBsYXJnZSBudW1iZXIgb2YgbGluZSBtYXRjaGVzIGFuZCBpbXBhY3QgcGVyZm9ybWFuY2UuIEdlbmVyYWxseSwgeW91IGluY3JlYXNlIGVkaXQgZGlzdGFuY2VzIHZhbHVlcyBhcyB5b3UgaW5jcmVhc2UgdGhlIGxlbmd0aCBvZiB0aGUgdGV4dCBtYXRjaC4gU2VlIHRoZSBFeGFtcGxlcyBzZWN0aW9uIGZvciBhbiBleGFtcGxlLiB8CnwgaXNDYXNlU2Vuc2l0aXZlICAgICAgfCBib29sZWFuLiBEZWZhdWx0OiBmYWxzZS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgSWYgdHJ1ZSwgbWF0Y2ggdGhlIHN0cmluZyB0YWtpbmcgaW50byBhY2NvdW50IHVwcGVyLSBhbmQgbG93ZXItY2FzZSBjaGFyYWN0ZXJzLiB8CgoqKlNZTlRBWCBFWEFNUExFKioKClRoZSBmb2xsb3dpbmcgY29uZmlnIHVzZXMgYSBzaW1wbGUgbWF0Y2g6CgpgYGBqc29uCiAgewogICJmaWVsZHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJzaW1wbGVfYW5jaG9yIiwKICAgICAgImFuY2hvciI6IHsKICAgICAgICAibWF0Y2giOiB7CiAgICAgICAgICAidHlwZSI6ICJzdGFydHNXaXRoIiwKICAgICAgICAgICJ0ZXh0IjogIlRoZSBsaW5lIHRvIG1hdGNoIG11c3Qgc3RhcnQgd2l0aCB0aGlzIHRleHQiLAogICAgICAgIH0KICAgICAgfSwKICAgICAgIm1ldGhvZCI6IHsKICAgICAgICAiaWQiOiAibGFiZWwiLAogICAgICAgICJwb3NpdGlvbiI6ICJiZWxvdyIKICAgICAgfQogICAgfQogIF0KfSAKCmBgYAoKRm9yIGV2ZW4gc2ltcGxlciBtYXRjaGluZyBzeW50YXggaW4gYW5jaG9ycywgeW91IGNhbiB1c2UgYCJhbmNob3IiOiJzb21lIHN0cmluZyB0byBtYXRjaCJgLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWUgW0FuY2hvcl0oZG9jOmFuY2hvcikuCgoqKkVESVQgRElTVEFOQ0UgRVhBTVBMRSoqCgpUaGUgZm9sbG93aW5nIGV4YW1wbGUgc2hvd3Mgc2V0dGluZyB0aGUgRWRpdCBEaXN0YW5jZSBwYXJhbWV0ZXIgb24gYSBzaW1wbGUgbWF0Y2ggZm9yIGEgcG9vci1xdWFsaXR5IHBob3RvZ3JhcGhlZCBkb2N1bWVudCwgc28gdGhhdCB0aGUgYW5jaG9yICBgNiBDaXR5IHN0YXRlIGFuZCBaSVAgY29kZWAgbWF0Y2hlcyB0aGUgaW5jb3JyZWN0IE9DUiBvdXRwdXQgb2YgIGA2IENoaSBzdGF0ZSBhbmQgWklQIGNvZGVgLiAKCgoKKkNvbmZpZyoKCmBgYGpzb24KewogICJmaWVsZHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJzaW1wbGVfYW5jaG9yIiwKICAgIAogICAgICAiYW5jaG9yIjogewogICAgICAgICJtYXRjaCI6IHsKICAgICAgICAgICJlZGl0RGlzdGFuY2UiOiAzLAogICAgICAgICAgImlzQ2FzZVNlbnNpdGl2ZSI6IGZhbHNlLAogICAgICAgICAgInR5cGUiOiAic3RhcnRzV2l0aCIsCiAgICAgICAgICAidGV4dCI6ICI2IGNpdHkgc3RhdGUgYW5kIHppcCBjb2RlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgIm1ldGhvZCI6IHsKICAgICAgICAiaWQiOiAibGFiZWwiLAogICAgICAgICJwb3NpdGlvbiI6ICJiZWxvdyIKICAgICAgfQogICAgfQogIF0KfQpgYGAKCipFeGFtcGxlIGRvY3VtZW50KgpUaGUgZm9sbG93aW5nIGltYWdlIHNob3dzIHRoZSBleGFtcGxlIGRvY3VtZW50IHVzZWQgd2l0aCB0aGlzIGV4YW1wbGUgY29uZmlnOgoKIVtDbGljayB0byBlbmxhcmdlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9pbWFnZXMvZmluYWwvZWRpdF9kaXN0YW5jZS5wbmcpCgp8IEV4YW1wbGUgZG9jdW1lbnQgfCBbRG93bmxvYWQgbGlua10oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvcGRmcy9lZGl0X2Rpc3RhbmNlLnBkZikgfAp8IC0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwKCgoKKk91dHB1dCoKCmBgYGpzb24KewogICJzaW1wbGVfYW5jaG9yIjogewogICAgInR5cGUiOiAic3RyaW5nIiwKICAgICJ2YWx1ZSI6ICJTb21lQ2l0eSwgTkosICQ3MDEwMSIKICB9Cn0KYGBgCgoKClJlZ2V4IG1hdGNoCi0tLS0tCgpNYXRjaCB1c2luZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi4KCioqUGFyYW1ldGVycyoqCgp8IGtleSAgICAgICAgICAgICAgICAgICAgfCB2YWx1ZXMgICAgICAgICAgICAgICAgICAgfCBkZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAp8IHR5cGUgKCoqcmVxdWlyZWQqKikgICAgfCBgcmVnZXhgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IHBhdHRlcm4gKCoqcmVxdWlyZWQqKikgfCB2YWxpZCAgSlMgcmVnZXggICAgICAgICAgfCBKYXZhc2NyaXB0LWZsYXZvcmVkIHJlZ3VsYXIgZXhwcmVzc2lvbi4gVGhpcyBwYXJhbWV0ZXIgZG9lc24ndCBzdXBwb3J0IGNhcHR1cmluZyBncm91cHMuIFNlZSB0aGUgW1JlZ2V4IG1ldGhvZF0oZG9jOnJlZ2V4KSBpbnN0ZWFkLjxici8+RG91YmxlIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgc2luY2UgdGhlIHJlZ2V4IGlzIGluIGEgSlNPTiBvYmplY3QuIEZvciBleGFtcGxlLCBgXFxzYCwgbm90IGBcc2AgLCB0byByZXByZXNlbnQgYSB3aGl0ZXNwYWNlIGNoYXJhY3Rlci48YnIvPlNlbnNpYmxlIHRocm93cyBhbiBlcnJvciBpZiB5b3Ugc3BlY2lmeSBhIHBhdHRlcm4gdGhhdCBjYW4gbWF0Y2ggYW4gZW1wdHkgc3RyaW5nLCBmb3IgZXhhbXBsZSwgYC4qYC4gfAp8IGZsYWdzICAgICAgICAgICAgICAgICAgfCBKUy1mbGF2b3JlZCByZWdleCBmbGFncy4gfCBGbGFncyB0byBhcHBseSB0byB0aGUgcmVnZXguIGZvciBleGFtcGxlOiAiaSIgZm9yIGNhc2UtaW5zZW5zaXRpdmUuIHwKCioqRXhhbXBsZSoqCgpGb3IgYW4gZXhhbXBsZSwgc2VlIHRoZSBbUGFzc3Rocm91Z2ggbWV0aG9kIGV4YW1wbGVdKGRvYzpwYXNzdGhyb3VnaCkuCgpGaXJzdCBtYXRjaAotLS0tLS0KClRoaXMgaXMgYSBjb252ZW5pZW5jZSBtYXRjaCB0byBmaW5kIHRoZSBmaXJzdCBsaW5lIGVuY291bnRlcmVkLiAKCioqUGFyYW1ldGVycyoqCgp8IGtleSAgICAgICAgICAgICAgICAgfCB2YWx1ZXMgIHwgZGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCAtLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8CnwgdHlwZSAoKipyZXF1aXJlZCoqKSB8IGBmaXJzdGAgfCBNYXRjaGVzIHRoZSBmaXJzdCBsaW5lIGVuY291bnRlcmVkLCBlaXRoZXIgMS4gaW4gdGhlIGZpcnN0IHBhZ2Ugb2YgdGhlIGRvY3VtZW50IG9yIDIuICBhZnRlciB0aGUgcHJlY2VkaW5nIG1hdGNoZWQgbGluZSBpbiBhIG1hdGNoIGFycmF5LiB8CgoqKkV4YW1wbGUqKgoKVGhpcyBleGFtcGxlIG1hdGNoZXMgdGhlIGZpcnN0IGxpbmUgYWZ0ZXIgYSBtYXRjaGVkIGxpbmUgaW4gYW4gYXJyYXk6CgoKYGBganNvbgp7CiAgImZpZWxkcyI6IFsKICAgIHsKICAgICAgImlkIjogImZpcnN0X2xpbmVfYWZ0ZXJfbWF0Y2giLAogICAgICAiYW5jaG9yIjogewogICAgICAgICJtYXRjaCI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiaW5jbHVkZXMiLAogICAgICAgICAgICAidGV4dCI6ICJtYXRjaCB0aGlzIGxpbmUsIHRoZW4gYW5jaG9yIG9uIHRoZSBmaXJzdCBsaW5lIGFmdGVyIGl0IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiZmlyc3QiCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAibWV0aG9kIjogewogICAgICAgICJpZCI6ICJsYWJlbCIsCiAgICAgICAgInBvc2l0aW9uIjogImJlbG93IgogICAgICB9CiAgICB9CiAgXSwKfQpgYGAKCkJvb2xlYW4gbWF0Y2hlcwotLS0KClVzZSBCb29sZWFuIG1hdGNoZXMgdG8gd3JpdGUgQm9vbGVhbiBsb2dpYyBhYm91dCB5b3VyIG1hdGNoZXMuICBGb3IgZXhhbXBsZSwgdXNlIHRoZSBBbnkgbWF0Y2ggdG8gbWF0Y2ggb24gYW4gYXJyYXkgb2Ygc3lub255bW91cyB0ZXJtcyBpZiBhIGRvY3VtZW50IGNvbnRhaW5zIHNtYWxsIHdvcmRpbmcgdmFyaWF0aW9ucyBhY3Jvc3MgcmV2aXNpb25zLgoKKipQYXJhbWV0ZXJzKioKCnwga2V5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdmFsdWVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgZGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAp8IHR5cGUgKCoqcmVxdWlyZWQqKikgICAgICAgICAgICAgICAgICAgICAgICB8IGBhbnlgLCBgYWxsYCwgYG5vdGAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGBhbnlgIDogU2FtZSBiZWhhdmlvciBhcyBCb29sZWFuIG9wZXJhdG9yICJvciIuIEZpbmRzIGEgbGluZSB0aGF0IG1lZXRzIGFueSBvZiB0aGUgbWF0Y2ggY29uZGl0aW9ucyBpbiB0aGUgYXJyYXkuPGJyLz5gYWxsYCBTYW1lIGJlaGF2aW9yIGFzICBCb29sZWFuIG9wZXJhdG9yICJhbmQiLiBGaW5kcyBhIGxpbmUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIG1hdGNoIGNvbmRpdGlvbnMgaW4gdGhlIGFycmF5Ljxici8+YG5vdGAgU2FtZSBiZWhhdmlvciBhcyBCb29sZWFuIG9wZXJhdG9yICJub3QiLiBGaW5kcyBhIGxpbmUgaWYgaXQgZG9lc24ndCBtZWV0IHRoZSBtYXRjaCBjb25kaXRpb24uPGJyLz4gfAp8IG1hdGNoZXMgKCoqcmVxdWlyZWQqKiBmb3IgYGFueWAgYW5kIGBhbGxgKSB8IEFycmF5IG9mIE1hdGNoIG9iamVjdHMuICBBbGwgbWF0Y2ggdHlwZXMgYXJlIHZhbGlkIGluIHRoZSBhcnJheSBleGNlcHQgYGZpcnN0YCB8IFVzZSB3aXRoIGBhbnlgIGFuZCBgYWxsYC4gWW91IGNhbiBuZXN0IEJvb2xlYW4gbWF0Y2hlcyB1c2luZyB0aGlzIHBhcmFtZXRlci4gfAp8IG1hdGNoICgqKnJlcXVpcmVkKiogZm9yIGBub3RgKSAgICAgICAgICAgICB8IE1hdGNoIG9iamVjdC4gQWxsIG1hdGNoIHR5cGVzIGFyZSB2YWxpZCBleGNlcHQgYGZpcnN0YCAgICAgICB8IFVzZSB3aXRoIGBub3RgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CgoqKkVYQU1QTEUqKgoKKkNvbmZpZyoKCmBgYGpzb24KewogICJmaWVsZHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJ0ZXN0X2Jvb2xlYW5fbWF0Y2hlcyIsCiAgICAgIC8qIHRvIHNob3cgbWF0Y2hpbmcgYmVoYXZpb3IsIG91dHB1dCBhbGwgbWF0Y2hpbmcKICAgICAgICAgYW5jaG9yIGxpbmVzLCBub3QganVzdCB0aGUgZmlyc3QgbWF0Y2ggKi8KICAgICAgIm1hdGNoIjogImFsbCIsCiAgICAgICJtZXRob2QiOiB7CiAgICAgICAgLyogdG8gc2hvdyBtYXRjaGluZyBiZWhhdmlvciwgdXNlIHBhc3N0aHJvdWdoCiAgICAgICAgICAgdG8gb3V0cHV0IGFuY2hvciB0ZXh0CiAgICAgICAgICAgKi8KICAgICAgICAiaWQiOiAicGFzc3Rocm91Z2giCiAgICAgIH0sCiAgICAgICJhbmNob3IiOiB7CiAgICAgICAgIm1hdGNoIjogWwogICAgICAgICAgewogICAgICAgICAgICAvKiBtYXRjaCBhIGxpbmUgaWYgbWVldHMgdGhlIGNvbmRpdGlvbnMKICAgICAgICAgICAgICAgb2YgQU5ZIG9mIHRoZSBmb2xsb3dpbmcgYXJyYXkgb2YgbWF0Y2hlcyAqLwogICAgICAgICAgICAidHlwZSI6ICJhbnkiLAogICAgICAgICAgICAibWF0Y2hlcyI6IFsKICAgICAgICAgICAgICAvKiBtYXRjaCBhIGxpbmUgdGhhdCBpbmNsdWRlcyAic3BlY2lhbCIgICovCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgInR5cGUiOiAiaW5jbHVkZXMiLAogICAgICAgICAgICAgICAgInRleHQiOiAic3BlY2lhbCIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIC8qIG1hdGNoIGEgbGluZSB0aGF0IG1lZXRzIEFMTCBvZiB0aGUgY29uZGl0aW9uczoKICAgICAgICAgICAgICAgICBpdCBpbmNsdWRlcyAiaGVhZGVyIiAKICAgICAgICAgICAgICAgICBidXQgTk9UICJzaG91bGQgbm90IiAqLwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJ0eXBlIjogImFsbCIsCiAgICAgICAgICAgICAgICAibWF0Y2hlcyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImluY2x1ZGVzIiwKICAgICAgICAgICAgICAgICAgICAidGV4dCI6ICJoZWFkZXIiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgLyogbm90ZSB0aGF0ICJub3QiICAqLwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAibm90IiwKICAgICAgICAgICAgICAgICAgICAibWF0Y2giOiB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJpbmNsdWRlcyIsCiAgICAgICAgICAgICAgICAgICAgICAidGV4dCI6ICJzaG91bGQgbm90IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgfQogIF0KfQpgYGAKKkV4YW1wbGUgZG9jdW1lbnQqClRoZSBmb2xsb3dpbmcgaW1hZ2Ugc2hvd3MgdGhlIGV4YW1wbGUgZG9jdW1lbnQgdXNlZCB3aXRoIHRoaXMgZXhhbXBsZSBjb25maWc6CgohW0NsaWNrIHRvIGVubGFyZ2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zZW5zaWJsZS1ocS9zZW5zaWJsZS1kb2NzL21haW4vcmVhZG1lLXN5bmMvYXNzZXRzL3YwL2ltYWdlcy9maW5hbC9ib29sZWFuX21hdGNoLnBuZykKCnwgRXhhbXBsZSBkb2N1bWVudCB8IFtEb3dubG9hZCBsaW5rXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9wZGZzL2Jvb2xlYW5fbWF0Y2gucGRmKSB8CnwgLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAoKCgoqT3V0cHV0KgoKYGBganNvbgp7CiAgInRlc3RfYm9vbGVhbl9tYXRjaGVzIjogWwogICAgewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAidmFsdWUiOiAiVGhpcyBpcyBhIGhlYWRlci4iCiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAidmFsdWUiOiAiVGhpcyBpcyBhIHNwZWNpYWwgbGluZS4iCiAgICB9CiAgXQp9CmBgYAoKCk1hdGNoIGFycmF5cwo9PT0KCllvdSBjYW4gY3JlYXRlIGNvbXBsZXggbWF0Y2hlcyBieSB1c2luZyBhbnkgb2YgdGhlIHByZWNlZGluZyBtYXRjaCB0eXBlcyBpbiBhbiBhcnJheS4gRm9yIGluZm9ybWF0aW9uLCBzZWUgW21hdGNoIGFycmF5c10oZG9jOm1hdGNoLWFycmF5cykuCgoAAAAAAAAAABMsAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAA0HAAAAAAAADQcAAAAAAAANAAAAemVyby1pbmRleGVkIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQcAAAAAAAAaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAG0HAAAAAAAAbQcAAAAAAAANAAAAemVyby1pbmRleGVkIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQcAAAAAAAB6BwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "    {\n      /* replace using regex */\n      \"id\": \"redact_vin\",\n      \"method\": {\n        id\": \"customComputation\",\n          \"jsonLogic\": {\n          \"replace\": {\n            \"source\": {\n              \"var\": \"string.value\"\n            },\n            \"replace\": \"\",\n            \"find\": {\n              \"var\": \"to_remove.value\"\n            },\n          },\n        }\n      },\n\n\n\n      ",
			"redo_stack":
			[
				[
					10,
					1,
					"paste",
					null,
					"AgAAAHsAAAAAAAAA+gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHsAAAB7CiAgInJlcGxhY2UiOiB7CiAgICAic291cmNlIjogeyAidmFyIjogInN0cmluZy52YWx1ZSIgfSwKICAgICJyZXBsYWNlIjogIiwiLAogICAgImZpbmRfcmVnZXgiOiAiICIsCiAgICAiZmxhZ3MiOiAiZyIKICB9Cn0",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7AAAAAAAAAHsAAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 383,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAvgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAC+AAAACiAgL2V4dHJhY3QvYmF0Y2g6CiAgICBwb3N0OiAgCiAgICAgIG9wZXJhdGlvbklkOiBjcmVhdGUtYmF0Y2gKICAgICAgc3VtbWFyeTogQ3JlYXRlIGEgYmF0Y2ggZm9yIGdyb3VwaW5nIGV4dHJhY3Rpb25zIGJ5CgogICAgZGVzY3JpcHRpb246IHwKICAgICAgQ3JlYXRlIGEgYmF0Y2ggZm9yIGdyb3VwaW5nIGV4dHJhY3Rpb25zIGJ5Lg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAL4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAdQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\n\n\n\n"
					},
					"CwAAAHUBAAAAAAAAdgEAAAAAAAAAAAAAdgEAAAAAAAB8AQAAAAAAAAAAAAB8AQAAAAAAAH0BAAAAAAAAAAAAAH0BAAAAAAAAgwEAAAAAAAAAAAAAdgEAAAAAAAB2AQAAAAAAAAYAAAAgICAgICB9AQAAAAAAAH4BAAAAAAAAAAAAAH4BAAAAAAAAhAEAAAAAAAAAAAAAdwEAAAAAAAB3AQAAAAAAAAYAAAAgICAgICB+AQAAAAAAAH8BAAAAAAAAAAAAAH8BAAAAAAAAhQEAAAAAAAAAAAAAeAEAAAAAAAB4AQAAAAAAAAYAAAAgICAgICA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "{\n  \"replace\": {\n    \"source\": { \"var\": \"string.value\" },\n    \"replace\": \",\",\n    \"find_regex\": \" \",\n    \"flags\": \"g\"\n  }\n}",
			"settings":
			{
				"buffer_size": 123,
				"line_ending": "Windows",
				"name": "{"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAewAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ui:",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js",
		"/C/Users/franc/Documents/GitHub/sensible-api-py"
	],
	"file_history":
	[
		"/C/Users/franc/Documents/GitHub/sensible/.git/info/exclude",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/assets/v0/json/verbose_extraction_3_verbosity.json",
		"/C/Users/franc/Pictures/greenshot pics/2023-12-15 12_52_16-Franco Fontana _ Basilicata (1986) _ Available for Sale _ Artsy.png",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - test-before-integrating-configs.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/3000 - go-live.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/1000 - getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/2000 - getting-started-ai.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/node/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/3000 - integrate.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/2000 - library-quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/1000 - zapier-getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_configuration.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links/check_links.rb",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/check_links.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1600 - summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/4000 - validate-extractions.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/1000 - api-tutorial-sync.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/1000 - senseml-reference-introduction.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1000 - anchor.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - performance.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/3600 - section-nuances.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1300 - document-range.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1200 - method.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/3000 - quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/README.md",
		"/?wsl.localhost/Ubuntu-20.04/home/franc/sensible-typescript/extract_dir_1_excel.mjs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/draft-python.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/5000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/draft_python.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/extract_doc.py",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/7600 - excel-reference.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/sdk-quickstarts.md",
		"/C/ProgramData/Vanta/vanta.conf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-node-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/write-prompts/instruct/1000 - query-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-javascript-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-javascript.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-javascript.md"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 125.6,
		"where_history":
		[
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"<open files>",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\, C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0; C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"the filename in the extraction re",
			"producer",
			"filename",
			"gas_dec",
			"accord_25_test",
			"rate_confirmation_ch",
			"file t",
			"docx",
			"micros",
			"thorough",
			"range_2",
			"extraction history",
			"filter",
			"prompt intro",
			"promptint",
			"deprecated",
			"introduction",
			"readingOrderLeft",
			"\"type\": \"table\"",
			"\"type\":\"table\"",
			"left side",
			"inches",
			"x range",
			"in inches",
			"contains the foll",
			"jsonlogic]",
			"capturing",
			"capture",
			"grouping",
			"path:",
			"postman",
			"discourse",
			"community",
			"nearestcheckbox",
			"ocr",
			"bypass",
			"ocr",
			"ocrprov",
			"ocrEngine",
			"start",
			"origin",
			"relative",
			"gpt-3",
			"End",
			"Stop",
			"above* or",
			"end",
			"start",
			"intersect method",
			"computed field",
			"draft-custom",
			"rule",
			"jsonlogic",
			"computed_fields\"",
			"computed_fields",
			"\"parsed_document\":",
			"parsed_doc",
			"model_split",
			"vendor",
			"copy to section",
			"pageRange",
			"extends",
			"turbo",
			"turbot",
			"gpt-4",
			"gpt",
			"turbo",
			"indexed",
			"openai.com",
			"zero",
			"following parameters",
			"tests",
			"custom",
			"rules",
			"**publish**",
			"**publish",
			"sensible app",
			"quick extract",
			"bulk",
			"llm_engine",
			"llmEngine",
			"api token",
			"api key",
			"anchor",
			"lines",
			"anchor",
			"name",
			"document",
			"key",
			"download l",
			"zip",
			"download",
			"configuration_n",
			"asyn",
			"upload",
			"example:",
			"usage",
			"quick",
			"quickstart",
			"object",
			"contains",
			"following parameters",
			"test only",
			"webhook",
			"excel",
			"from sensibleapi.sensibleapi",
			"sensibleapi.sensibleapi",
			"draft-table",
			"troubleshoot",
			"quickstart",
			"box",
			"https://docs.sensible.so/reference/choosing-an-endpoint/library-quickstart",
			"out-of",
			"language mod",
			"large",
			"download ",
			"register",
			"index.mjs",
			"Node",
			"openai",
			"about token",
			"token limit",
			"token",
			"endpoint",
			"types and size",
			"4.5",
			"extrac",
			"extract"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"model",
			"insurer",
			"**Publish configuration**",
			"from sensibleapi",
			"index.py",
			"Python",
			"size and types",
			"https://github.com/sensible-hq/sensible-api-js#readme",
			"Node",
			"node",
			"-node",
			"node",
			"Node",
			"node",
			"doc:config-settings"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1924884,
						"regions":
						{
						},
						"selection":
						[
							[
								54032,
								54032
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 35358.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2072,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2072
							]
						],
						"settings":
						{
							"auto_name": "for the following table represented in json,",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 249881,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "",
								"scope": ""
							}
						},
						"selection":
						[
							[
								249788,
								249788
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 28,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 117025.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 135,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								135
							]
						],
						"settings":
						{
							"auto_name": "{",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "v0/senseml-reference/2000 - field-query-object/1200 - method.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9913,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1297.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "v0/senseml-reference/2000 - field-query-object/1100 - match.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11282,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 820.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 383,
						"regions":
						{
						},
						"selection":
						[
							[
								96,
								96
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 123,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"auto_name": "{",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "f_project.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 257.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 285.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
