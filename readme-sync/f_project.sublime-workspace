{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "\n\nSearching 160 files for \"large-lan\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\3000 - confidence.md:\n    4  ---\n    5  \n    6: For data extracted by large-language models (LLMs), Sensible asks the LLMs to report any uncertainties about the accuracy of the extracted data. For example, an LLM can report \"multiple possible answers\" or \"ambiguous query\".  These confidence *signals* offer more nuanced troubleshooting than confidence *scores*.\n    7  \n    8  Note that LLMs can inaccurately report confidence signals.  For more information about confidence signals, see the research paper [Teaching models to express their uncertainties in words](https://arxiv.org/pdf/2205.14334.pdf). \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - performance.md:\n   33  | OCR preprocessor                               | Some documents mix digital text with text images, for example by embedding scanned pages in a digital PDF. Speed this up by OCRing select pages, not the whole document. For more information, see the [OCR preprocessor](doc:ocr). |\n   34  | Fixed Tables with stops,<br/>Nearest Checkbox method | Sensible processes Fixed Tables that include a Stop parameter in less than 5 seconds. Or, convert to the faster [Text Table](doc:text-table) method, which skips table recognition. |\n   35: | LLM-based methods                                    | For large-language model (LLM)-based methods, see [Sensible Instruct](doc:instruct) |\n   36  \n   37   **Under 1 second per document**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  276  Try it out: change one of the questions to `\"street address for the Anyco insurance company\"` and see what you get.\n  277  \n  278: You can author methods powered by large-language models (LLMs), such as the Query Group method, in SenseML, or in Sensible Instruct, Sensible's visual authoring tool. For more information about Sensible Instruct, see [Getting started](doc:getting-started-ai).\n  279  \n  280  LLM-based methods can run up against limitations with complex document formatting. In such cases, combine LLM-based methods with layout-based methods in the same document extraction configuration. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\3000 - prompt.md:\n    5  \n    6  \n    7: You can configure the full prompt that Sensible inputs to a large-language model (LLM). You can apply configurations to multiple fields in a config, and you can override them for individual fields.\n    8  \n    9: When you write a prompt in a Sensible Instruct method, Sensible combines your prompt with other information to create the full prompt it submits to a large-language model (LLM). The full prompt includes:\n   10  \n   11  - a prompt introduction\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n  132    |                         | [LLM-based methods](doc:llm-based-methods)     | Layout-based [methods](doc:methods)                          |\n  133    | ----------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  134:   | Notes                   | Ask questions about info in the document, as you'd ask a human. For example, \"what's the policy period\"?  Powered by large-language models (LLMs). | Find the information in the document using anchoring text and layout data. For example, write instructions to grab the second cell in a column headed by \"premium\". |\n  135    | Deterministic           | no                                                           | yes                                                          |\n  136    | Handles complex layouts | no                                                           | yes                                                          |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n  155  \n  156  - As a more syntactically concise alternative to the [Regex](doc:regex) method or to [Computed Field methods](doc:computed-field-methods). For example, you can write a field to capture a date-typed field, then transform the field's output with the [Split](doc:split) method. Or, see the following example to transform dates using the Compose type.\n  157: - To transform table cell contents. As an alternative, see the [NLP table](doc:nlp-table) method for writing large-language model (LLM)-based prompts to transform table cell contents.\n  158  \n  159  Parameters\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\index.md:\n   32  | **[Text Table](doc:text-table)**             | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table.png) | Extracts tables using solely text-positioning data (fast but limited). |\n   33  \n   34: ## Large-language model (LLM)-based methods\n   35  \n   36  See [LLM-based methods](doc:llm-based-methods).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n  453     1. If you specify Thorough for the LLM Engine parameter, the Chunk Count parameter determines the number of top-scoring chunks Sensible selects to submit to the LLM.\n  454     2. If you specify Fast for the LLM Engine parameter,  1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. To improve performance, Sensible removes chunks that are significantly less relevant from the list of top-scoring chunks. The number of chunks Sensible sumbits to the LLM can therefore be smaller than the number specified by the Chunk Count parameter.\n  455: 3. To avoid large-language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers. Sensible batches a maxiumum of 20 page numbers. The chunks in each page group can be non-consecutive in the document.\n  456  4. For each page group, Sensible submits a full prompt to the LLM that includes the pages' chunks as context, page-hinting data, and your prompts. For information about the LLM model, see the LLM Engine parameter. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n  457  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query-group.md:\n    5  ---\n    6  \n    7: Extracts individual facts in a document, such as the date of an invoice, the liability limit of an insurance policy, or the destination address of a shipping container delivery. Sensible uses a large-language model (LLM)  to find these facts in paragraphs of free text, or in more structured layouts, for example key/value pairs or tables. Create a query group to extract multiple facts that share a [context](doc:query-group#notes), or are co-located in the document.\n    8  \n    9  For tips and troubleshooting, see [Query Group](doc:query-group-tips) extraction tips.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\index.md:\n   12  | **[Ligature](doc:ligature)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ligature.png) | Intelligently replaces Unicode ligatures in a text extraction. |\n   13  | **[Merge Lines](doc:merge-lines)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_1.png) | Corrects oversplit lines.                                    |\n   14: | **[NLP](doc:nlp)**                     |                                                              | Advanced prompt configuration for all the large-language model (LLM)-based methods in a config. |\n   15  | **[OCR](doc:ocr)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ocr.png) | Selectively OCRs pages in documents containing a mix of digitally generated text and text images (such as scanned text). If the whole PDF is a scan, you don't need to configure this preprocessor. |\n   16  | **[Page Filter](doc:page-filter)**     |                                                              | Filters out low-scoring pages given a bag of target terms and stop terms. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\1500 - deprecated-query.md:\n   11  ## Description\n   12  \n   13: This method extracts individual facts in a document, such as the date of an invoice, the liability limit of an insurance policy, or the destination address of a shipping container delivery. Sensible uses a large-language model (LLM)  to find these facts in paragraphs of free text, or in more structured layouts, for example key/value pairs or tables.\n   14  \n   15  Sensible recommends framing each query, or prompt, so that it has a single, short answer.  For complex prompts with multi-part answers, use the [List method](doc:list) or the  [Summarizer](doc:summarizer) method. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0300 - accuracy-measures.md:\n    9  - **Logical validations**:  Write validations in [JsonLogic](https://jsonlogic.com/) to check that fields extracted from documents meet your conditions. For example, configure Sensible to return errors if a quoted rate is null, a broker's email isn't in string@string format, or if a zip code has more than 5 digits.  For more information, see [Validate extractions](doc:validate-extractions).  \n   10  - **OCR confidence scores**: Get a score for the quality of text images. For example, check that text in a scanned or photographed document isn't blurry or illegible.  For more information, see [Validate extractions](doc:validate-extractions).  \n   11: - **Confidence signals**: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report that it found multiple answer candidates. For more information, see [Qualifying LLM accuracy](doc:confidence).\n   12  \n   13  - **Extraction coverage:**  A score that measures how fully an extraction captured all the data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For more information, see [Monitoring extractions](doc:metrics).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\00 - draft-overview.md:\n    6  TODO -- check redirects\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your vertical SaaS products. Sensible is highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful document primitives. \n    9  \n   10  TODO -- have a bit of an explanation of the 'developer platform' with callouts a la metrn?\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n   ..\n   23  ## Learn to extract data\n   24  \n   25: Let's get started with extracting document data from an example bank statement. We'll author a prompt for a large-language model (LLM) to extract a checking account number in minutes.\n   26  \n   27   In this guide, you'll:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   10  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_landscape.png)\n   11  \n   12: Sensible recommends using large-language model (LLM) prompts for free-form, highly variable documents, and layout-based, or \"rule-based\" queries for structured, less-variable documents.  You can combine both strategies since they're fully compatible with each other. \n   13  \n   14  See the following table to learn more about extraction strategies:\n   ..\n   16  | extraction method | notes                                                        | get started                                                  |\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18: | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large-language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19  | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 64 characters> ...tructured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n    2  \n    3  \n    4: <skipped 64 characters> ...tructured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\n20 matches across 17 files\n\n\nSearching 160 files for \"methods#\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1600 - summarizer.md:\n   19  ====\n   20  \n   21: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   22  \n   23  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1000 - concatenate.md:\n   14  ====\n   15  \n   16: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   17  \n   18  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1200 - constant.md:\n    8  ====\n    9  \n   10: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   11  \n   12  | key                  | value      | description                                              |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1300 - mapper.md:\n    9  ====\n   10  \n   11: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   12  \n   13  | key                      | value                                   | description                                                  |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1350 - pick-values.md:\n   10  ====\n   11  \n   12: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   13  \n   14  | key                       | value                                                   | description                                                  |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1400 - split.md:\n    8  ====\n    9  \n   10: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   11  \n   12  | key                      | value                            | description                                                  |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1450 - suppress-output.md:\n   10  ====\n   11  \n   12: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   13  \n   14  | key                       | value                                    | description                                                  |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1500 - zip.md:\n   12  ====\n   13  \n   14: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   15  \n   16  | key                        | value                                    | description                                                  |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2000 - deprecated-tfidf.md:\n   60  ====\n   61  \n   62: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   63  \n   64  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0100 - add-computed-fields.md:\n   11  ====\n   12  \n   13: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   14  \n   15  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0400 - copy-from-sections.md:\n    8  ====\n    9  \n   10: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   11  \n   12  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0500 - copy-to-section.md:\n    8  ====\n    9  \n   10: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   11  \n   12  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0600 - custom-computation.md:\n    9  ====\n   10  \n   11: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   12  \n   13  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0700 - get-file-metadata.md:\n    8  ====\n    9  \n   10: The following parameters are in the computed field's [global Method](doc:computed-field-methods#parameters) parameter: \n   11  \n   12  \n\n14 matches across 14 files\n\n\nSearching 160 files for \"doc:methods#\" (regex)\n\n0 matches\n\nSearching 160 files for \"large-language\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\index.md:\n   32  | **[Text Table](doc:text-table)**             | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table.png) | Extracts tables using solely text-positioning data (fast but limited). |\n   33  \n   34: ## Large-language model (LLM)-based methods\n   35  \n   36  See [LLM-based methods](doc:llm-based-methods).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n  453     1. If you specify Thorough for the LLM Engine parameter, the Chunk Count parameter determines the number of top-scoring chunks Sensible selects to submit to the LLM.\n  454     2. If you specify Fast for the LLM Engine parameter,  1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. To improve performance, Sensible removes chunks that are significantly less relevant from the list of top-scoring chunks. The number of chunks Sensible sumbits to the LLM can therefore be smaller than the number specified by the Chunk Count parameter.\n  455: 3. To avoid large-language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers. Sensible batches a maxiumum of 20 page numbers. The chunks in each page group can be non-consecutive in the document.\n  456  4. For each page group, Sensible submits a full prompt to the LLM that includes the pages' chunks as context, page-hinting data, and your prompts. For information about the LLM model, see the LLM Engine parameter. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n  457  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1500 - query-group.md:\n    5  ---\n    6  \n    7: Extracts individual facts in a document, such as the date of an invoice, the liability limit of an insurance policy, or the destination address of a shipping container delivery. Sensible uses a large-language model (LLM)  to find these facts in paragraphs of free text, or in more structured layouts, for example key/value pairs or tables. Create a query group to extract multiple facts that share a [context](doc:query-group#notes), or are co-located in the document.\n    8  \n    9  For tips and troubleshooting, see [Query Group](doc:query-group-tips) extraction tips.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\index.md:\n   12  | **[Ligature](doc:ligature)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ligature.png) | Intelligently replaces Unicode ligatures in a text extraction. |\n   13  | **[Merge Lines](doc:merge-lines)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_1.png) | Corrects oversplit lines.                                    |\n   14: | **[NLP](doc:nlp)**                     |                                                              | Advanced prompt configuration for all the large-language model (LLM)-based methods in a config. |\n   15  | **[OCR](doc:ocr)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ocr.png) | Selectively OCRs pages in documents containing a mix of digitally generated text and text images (such as scanned text). If the whole PDF is a scan, you don't need to configure this preprocessor. |\n   16  | **[Page Filter](doc:page-filter)**     |                                                              | Filters out low-scoring pages given a bag of target terms and stop terms. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\1500 - deprecated-query.md:\n   11  ## Description\n   12  \n   13: This method extracts individual facts in a document, such as the date of an invoice, the liability limit of an insurance policy, or the destination address of a shipping container delivery. Sensible uses a large-language model (LLM)  to find these facts in paragraphs of free text, or in more structured layouts, for example key/value pairs or tables.\n   14  \n   15  Sensible recommends framing each query, or prompt, so that it has a single, short answer.  For complex prompts with multi-part answers, use the [List method](doc:list) or the  [Summarizer](doc:summarizer) method. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0300 - accuracy-measures.md:\n    9  - **Logical validations**:  Write validations in [JsonLogic](https://jsonlogic.com/) to check that fields extracted from documents meet your conditions. For example, configure Sensible to return errors if a quoted rate is null, a broker's email isn't in string@string format, or if a zip code has more than 5 digits.  For more information, see [Validate extractions](doc:validate-extractions).  \n   10  - **OCR confidence scores**: Get a score for the quality of text images. For example, check that text in a scanned or photographed document isn't blurry or illegible.  For more information, see [Validate extractions](doc:validate-extractions).  \n   11: - **Confidence signals**: For data extracted by large-language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report that it found multiple answer candidates. For more information, see [Qualifying LLM accuracy](doc:confidence).\n   12  \n   13  - **Extraction coverage:**  A score that measures how fully an extraction captured all the data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For more information, see [Monitoring extractions](doc:metrics).\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\00 - draft-overview.md:\n    6  TODO -- check redirects\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your vertical SaaS products. Sensible is highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful document primitives. \n    9  \n   10  TODO -- have a bit of an explanation of the 'developer platform' with callouts a la metrn?\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: Welcome! Sensible is a developer-first platform for extracting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n   ..\n   23  ## Learn to extract data\n   24  \n   25: Let's get started with extracting document data from an example bank statement. We'll author a prompt for a large-language model (LLM) to extract a checking account number in minutes.\n   26  \n   27   In this guide, you'll:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   10  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_landscape.png)\n   11  \n   12: Sensible recommends using large-language model (LLM) prompts for free-form, highly variable documents, and layout-based, or \"rule-based\" queries for structured, less-variable documents.  You can combine both strategies since they're fully compatible with each other. \n   13  \n   14  See the following table to learn more about extraction strategies:\n   ..\n   16  | extraction method | notes                                                        | get started                                                  |\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18: | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large-language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19  | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 64 characters> ...tructured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n    2  \n    3  \n    4: <skipped 64 characters> ...tructured data from documents, for example, business forms in PDF format. use Sensible to build document-automation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\n13 matches across 11 files\n\n\nSearching 160 files for \"powered\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n   88            {\n   89              /* ask a free-text question.\n   90:            You can author LLM-powered queries in Sensible Instruct\n   91             instead of in JSON */\n   92              \"id\": \"bodily_injury_premium\",\n   ..\n  241            {\n  242              /* ask a free-text question.\n  243:            You can author LLM-powered queries in Sensible Instruct\n  244             instead of in JSON */\n  245              \"id\": \"bodily_injury_premium\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\index.md:\n    4  ---\n    5  \n    6: To extract from documents, describe your target data using Sensible's prompt-authoring environment, *Sensible Instruct*. Sensible Instruct is a large language-model (LLM)-powered subset of *SenseML*, Sensible's JSON-based document extraction query language. By combining Sensible Instruct and SenseML, you can extract data from a range of document types, from highly structured business forms to unstructured research documents.\n    7  \n    8  See the following topics for tips on configuring extractions in Sensible Instruct:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n  167  \n  168  - The Text Table method with `\"detectMultipleLinesPerRow\": true` configured.\n  169: - LLM-powered methods, such as the NLP Table method.\n  170  \n  171  Try out this example in the Sensible app using the following document and config:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   50  | Parameter                                                    | Value                                              | Description                                                  |\n   51  | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n   52: <skipped 355 characters> ...the first returns null.<br/>For example, to capture differences in wording between document revisions, define two fields with the same ID, which anchor on synonymous text that 's present or absent in different document revisions. <br/>Or, specify an optional anchor anywhere in a document for an LLM-powered field, and fall back to a different field if the anchor isn't present. <br/>Fallback fields can be of any kind. For example, you can fallback from a field, to a computed field, to a section group. Fallbacks don't work across nested structures. For example, you can't fall back from a parent section ... <skipped 49 characters> ...\n   53  | anchor (**required**) except for fields that use [LLM-based methods](doc:llm-based-methods) | object                                             | The anchor identifies one or more lines of text in the document at which Sensible starts executing a method. Can be a string, Match object, or array of Match objects. For more information, see [Anchor object](doc:anchor) and [Match object](doc:match). |\n   54  | method (**required**)                                        | object                                             | The method describes how Sensible expands from the anchor and extracts the target data. For more information, see [Methods](doc:methods), [LLM-based methods](doc:llm-based-methods), and [Method object](doc:method). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\1000 - deprecated-key-value.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-powered methods](doc:instruct) replace this method.\n    8  \n    9  ## Decription\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2000 - deprecated-tfidf.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-powered methods](doc:instruct) replace this method.\n    8  \n    9  ## Description\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18  | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19: | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   21  \n\n8 matches across 7 files\n\n\nSearching 160 files for \"powered\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\index.md:\n    4  ---\n    5  \n    6: To extract from documents, describe your target data using Sensible's prompt-authoring environment, *Sensible Instruct*. Sensible Instruct is a large language-model (LLM)-powered subset of *SenseML*, Sensible's JSON-based document extraction query language. By combining Sensible Instruct and SenseML, you can extract data from a range of document types, from highly structured business forms to unstructured research documents.\n    7  \n    8  See the following topics for tips on configuring extractions in Sensible Instruct:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18  | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19: | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with AI-powered queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   21  \n\n2 matches across 2 files\n\n\nSearching 160 files for \"power\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\.github\\workflows\\dev_sync_guides_readme .yml:\n   21          with:\n   22            node-version: '16'\n   23:         # using flowcommerce CLI rather than Readme's offical GH action for syncing b/c Readme's appears less powerful\n   24        - name: clone readme-sync\n   25          run: |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\.github\\workflows\\sync_dev_guides_readme.yml:\n   20          with:\n   21            node-version: '16'\n   22:         # using flowcommerce CLI rather than Readme's offical GH action for syncing b/c Readme's appears less powerful\n   23        - name: clone readme-sync\n   24          run: |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\.github\\workflows\\sync_guides_readme.yml:\n   20          with:\n   21            node-version: '16'\n   22:         # using flowcommerce CLI rather than Readme's offical GH action for syncing b/c Readme's appears less powerful\n   23        - name: clone readme-sync\n   24          run: |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\00 - draft-overview.md:\n    6  TODO -- check redirects\n    7  \n    8: <skipped 131 characters> ...ormat. use Sensible to build document-automation features into your vertical SaaS products. Sensible is highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful document primitives. \n    9  \n   10  TODO -- have a bit of an explanation of the 'developer platform' with callouts a la metrn?\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: <skipped 39 characters> ...platform for extracting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\cheat\\1000 - cheat-1.md:\n   18      {\n   19        \"id\": \"your_first_extracted_field\",\n   20:       \"anchor\": \"powerful data\",\n   21        \"method\": {\n   22          \"id\": \"box\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 174 characters> ...ation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n    2  \n    3  \n    4: <skipped 174 characters> ...ation features into your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\n8 matches across 8 files\n\n\nSearching 160 files for \"based\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\batch-api.md:\n   47  \n   48  \n   49: 2. Create  upload URLs for an indexed range of the documents in the batch. Use zero-based indices to upload the documents in the same order that you listed them in the previous step. For example, to upload the two documents in the previous step :\n   50  \n   51  ```curl\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\4000 - validate-extractions.md:\n   11  - If Sensible extracted a field from OCR'd text,  test the confidence score for the field's anchor and value as a measure of the quality of the text images. For example, test that text in a scanned document isn't blurry or illegible.\n   12  \n   13: Then write your own logic based on the validations, for example:\n   14  \n   15  - pass a document extraction automatically through your pipeline if there are no errors and 10% of warning validations fail\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - performance.md:\n   16  \n   17  \n   18: In an ideal performance scenario, you extract data from digitally generated PDFs using text-based or coordinate-based Sensible methods, such as Label, Row, Region, Text Table, and Document Range.\n   19  \n   20  In order of largest to smallest impact, these factors add seconds to the ideal document processing time:\n   ..\n   33  | OCR preprocessor                               | Some documents mix digital text with text images, for example by embedding scanned pages in a digital PDF. Speed this up by OCRing select pages, not the whole document. For more information, see the [OCR preprocessor](doc:ocr). |\n   34  | Fixed Tables with stops,<br/>Nearest Checkbox method | Sensible processes Fixed Tables that include a Stop parameter in less than 5 seconds. Or, convert to the faster [Text Table](doc:text-table) method, which skips table recognition. |\n   35: | LLM-based methods                                    | For methods based on large language models (LLMs), see [Sensible Instruct](doc:instruct) |\n   36  \n   37   **Under 1 second per document**\n   38  \n   39: Some Sensible methods use pixels, for example to recognize borders. Pixel recognition for PDF documents requires rendering a PDF page, which can take hundreds of milliseconds. To improve processing time, use coordinate-based alternatives to these methods. \n   40  \n   41  | Factor                                                       | Notes                                                        |\n   42  | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   43: | Box method                                                   | To improve processing speed, convert the more flexible Box method to the strictly coordinate-based Region method. |\n   44  | Signature method,<br/> Checkbox method,<br/>[image coordinate extraction](doc:document-range) | These methods have no alternatives. See the following section for ways to avoid running these methods except when necessary. |\n   45  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\2000 - zapier-tutorial-2.md:\n    7  This topic describes how to configure an example two-Zap workflow for Zapier. The example workflow extracts data from emailed documents and uploads them as spreadsheets to Google Drive. \n    8  \n    9: You can use the example Zaps in this topic as templates. For example, modify this workflow to trigger extractions based on other file actions in Zapier-support apps (for example, a new document uploaded to Google Drive instead of a new email in Gmail). Or, output to different destinations (for example, a database record instead of spreadsheet files in Google Drive).\n   10  \n   11  Zap 1\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n   96  -----\n   97  \n   98: Sensible converts the JSON extraction output from the [auto_insurance_anyco](https://github.com/sensible-hq/sensible-docs/raw/main/readme-sync/assets/v0/pdfs/auto_insurance_anyco.pdf) example described in the [Getting started with layout-based extractions](doc:getting-started) to the following spreadsheet:\n   99  \n  100  **Spreadsheet output**\n  ...\n  119  **Example configuration**\n  120  \n  121: See the [Getting started with layout-based extractions](doc:getting-started)  for the SenseML configuration for this example.\n  122  \n  123  **JSON output**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n    1  ---\n    2: title: \"Getting started with layout-based extractions\"\n    3  hidden: false\n    4  ---\n    5  \n    6  \n    7: In this tutorial, you'll learn to extract data out of a set of similar documents using a layout-based query language, SenseML. You'll write JSON to tell Sensible about which data to extract from an example document, using what you know about the layout of the document. SenseML uses a mix of techniques, including machine learning, heuristics, and rules, to extract your target information.\n    8  \n    9  You can then save your descriptions as a \"config.\" Publish your config to automate extracting from similar documents.   \n   ..\n   88            {\n   89              /* ask a free-text question.\n   90:            You can author LLM-based queries in Sensible Instruct\n   91             instead of in JSON */\n   92              \"id\": \"bodily_injury_premium\",\n   ..\n  195  - If you want to skip ahead and try out the API or SDKs, see [Integrate with your application](doc:getting-started#integrate-with-your-application). \n  196  \n  197: How layout-based extraction works\n  198  ====\n  199  \n  200: This guide focuses on layout-based document extraction, which works as follows:\n  201  \n  202  - Each \"field\" is a basic query unit in Sensible.  Each field outputs a piece of data from the document that you want to extract. Sensible uses the field `id` as the key in the key/value JSON output. For more information, see [Field](doc:field-query-object).\n  ...\n  206  - Then, Sensible uses a \"method\" to expand its search out from the anchor and extract the data you want. For more information about methods, see [Methods](doc:methods).\n  207  \n  208: This config uses three types of layout-based methods:\n  209  \n  210    | Type of method | explanation                                                  | description                                       |\n  ...\n  215  \n  216  \n  217: This config also uses one large language model (LLM)-based method, to demonstrate that you can combine layout-based and LLM-based methods in the same config:\n  218  \n  219  | Type of method   | explanation                                                  | description                                                  |\n  220  | ---------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  221: | LLM-based | [How it works: query group method](doc:getting-started#how-it-works-query-group-method) | Ask a free-text question about simple information in the document |\n  222  \n  223  How it works: Query Group method\n  ...\n  241            {\n  242              /* ask a free-text question.\n  243:            You can author LLM-based queries in Sensible Instruct\n  244             instead of in JSON */\n  245              \"id\": \"bodily_injury_premium\",\n  ...\n  276  Try it out: change one of the questions to `\"street address for the Anyco insurance company\"` and see what you get. For easy authoring, try out this method in Sensible's [visual authoring tool](doc:instruct).\n  277  \n  278: LLM-based methods such as the Query Group method can run up against limitations with complex document formatting. In such cases, combine LLM-based methods with layout-based methods in the same document extraction configuration. \n  279  \n  280: Let's look next at several simple layout-based methods.\n  281  \n  282  How it works: Label method\n  ...\n  442  **Note:** Sensible extracts the box contents, but not the anchor itself.  By default, Sensible returns method results, not anchor results.\n  443  \n  444: Advanced layout-based queries\n  445  ----\n  446  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\3000 - portfolio.md:\n   38  - **config content:**\n   39  \n   40: The config is the same as the one used in the [Getting started with layout-based extractions](doc:getting-started), with the addition of the following fingerprint:\n   41  \n   42  ```json\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4000 - repeat-layouts.md:\n    4  ---\n    5  \n    6: To extract complex, repeating data from documents, use layout-based sections to break the document into subdocuments. Then extract data from each subdocument with layout- or LLM-based fields. Note that for simpler repeating data, you can use the [List](doc:list) method.\n    7  \n    8  The following images show using sections to enable extracting repeating data in a claims loss run and in a complex table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\2000 - ui.md:\n   38  -----\n   39  \n   40: 7. Click a new configuration to edit the SenseML and extract structured data from the document. For a tutorial, see [Getting started with layout-based extractions](doc:getting-started).\n   41  8. (Optional) Click the **Validations** tab and write [validations](doc:validate-extractions).\n   42  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\3000 - prompt.md:\n   50  | pageHinting                         | boolean. default: true                                       | Configures context's metadata. For details about context and chunks, see the Notes section. <br/>Includes or or removes page metadata for each chunk from the prompt Sensible inputs to an LLM.<br/>F... <skipped 133 characters> ...age numbers, since their relationship to the cards' text is arbitrary.<br/>Applies to each Sensible Instruct field in the config.<br/>For example, removes phrases like `The excerpt starts at the top of page 1 and ends at the bottom of page 1.` | Overrides config-level parameter for a single field. |\n   51  | chunkCount                          | number. default: see each method's [reference topic](doc:Query Group method-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The number of top-scoring chunks Sensible combines as context as part of the full... <skipped 80 characters> ...e config.<br/>Often, chunk count and chunk size are related. For example, if you know that your target data are spread over 7-10 pages, and occupy a small portion of those pages, you can specify a chunk count of 10 and a half-page  chunk size. | Overrides config-level parameter for a single field. |\n   52: | chunkSize                           | `0.5`, `1` default:  see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The size of the chunks Sensible splits the document into, as a page fraction. For example, `0.5` specifies each chunk is half a page.<br/>Applies to each Sensible Instruct field in the config. <br... <skipped 237 characters> ...\n   53: | chunkOverlapPercentage              | `0`, `0.25`, `0.5` default: see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The extent to which chunks overlap, as a percentage of the chunks' height. For example, `0.5` specifies each chunk overlaps by half its height. <br/>Applies to each Sensible Instruct field in the ... <skipped 301 characters> ...\n   54: <skipped 205 characters> ...ction.<br/>If specified, Sensible creates chunks in the page range and ignores other pages. For example, use this parameter to improve performance, or to avoid extracting unwanted data if your prompt has multiple candidate answers.<br/><br/>Contains the following parameters: <br/>`startPage`:  Zero-based index of the page at which Sensible starts creating chunks (inclusive). <br/>`endPage`: Zero-based index of the page at which Sensible stops creating chunks (exclusive).<br/><br/>**Note:** Sensible ignores this parameter when searching for a field's anchor. If you want to exclude the field's anchor from the page range, use the [Page Range](doc:page-range) preprocessor instead.<br/> | Overrides c... <skipped 43 characters> ...\n   55  | (**Deprecated**) promptIntroduction | string                                                       | Deprecated. Overwrites the introductory text at the beginning of the full prompt that Sensible submits to the LLM. |                                                      |\n   56  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\2000 - list-tips.md:\n    3  hidden: false\n    4  ---\n    5: This Sensible Instruct method extracts repeating data in a document based on your description of the list’s overall contents and each individual item. Data such as the work history or skills on a resume, the vehicles on an auto insurance policy, or the line items on an invoice are best suited for this method. \n    6  \n    7  This method is an alternative to the [NLP Table](doc:table-tips) method, when the data you want can appear either as a table or as another layout. The List method can find data in paragraphs of free text or in more structured layouts, such as key/value pairs or tables.  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\3000 - table-tips.md:\n    4  ---\n    5  \n    6: This Sensible Instruct method extracts a table in a document based on your description of the table title and each of its column headers.\n    7  \n    8  **Prompt Tips**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\index.md:\n    4  ---\n    5  \n    6: To extract from documents, describe your target data using Sensible's prompt-authoring environment, *Sensible Instruct*. Sensible Instruct is a large language-model (LLM)-based subset of *SenseML*, Sensible's JSON-based document extraction query language. By combining Sensible Instruct and SenseML, you can extract data from a range of document types, from highly structured business forms to unstructured research documents.\n    7  \n    8  See the following topics for tips on configuring extractions in Sensible Instruct:\n    .\n   17  ====\n   18  \n   19: For layout-based extraction methods, see [methods](doc:methods).\n   20  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n   11  - [Preprocessors](doc:preprocessors)\n   12  - [Methods](doc:methods)\n   13: - [LLM-based methods](doc:llm-based-methods), including LLM-based Sensible Instruct methods. For more information about choosing whether to author configs in either SenseML or Sensible Instruct, see [Choosing an extraction approach](doc:author).\n   14  - [Configuration settings](doc:config-settings)\n   15  - [Computed Field methods](doc:computed-field-methods)\n   ..\n   18  Or, for a getting started tutorial, see:\n   19  \n   20: - [Getting started with layout-based extraction](doc:getting-started)\n   21  \n   22  Examples\n   ..\n   51    ],\n   52    \"fields\": [\n   53:     /* LAYOUT-BASED EXAMPLE */\n   54      {\n   55        \"id\": \"_driver_name_raw\", // ID for extracted target data\n   ..\n   60        }\n   61      },\n   62:     /* LLM-BASED EXAMPLE */\n   63      {\n   64        \"method\": {\n   ..\n  130    There are two broad categories of methods:\n  131  \n  132:   |                         | [LLM-based methods](doc:llm-based-methods)     | Layout-based [methods](doc:methods)                          |\n  133    | ----------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  134    | Notes                   | Ask questions about info in the document, as you'd ask a human. For example, \"what's the policy period\"?  Uses large language models (LLMs). | Find the information in the document using anchoring text and layout data. For example, write instructions to grab the second cell in a column headed by \"premium\". |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   18  | Key                         | Value                                                        | Description                                                  |\n   19  | --------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   20: | `id`                        | see [Methods](doc:methods) and [LLM-based methods](doc:llm-based-methods). | see [Methods](doc:methods) and [LLM-based methods](doc:llm-based-methods). |\n   21: | tiebreaker                  | integer (zero-based index)<br/> or<br/>ordinal (`first`, `second`, `third`, `last`)<br/>or <br/> comparison (`>`, `<`)<br/>or<br/>`join`<br/> Default: `join` | If the method returns multiple elements (for example, a Row method), specifies which element to extract in the returned array. <br/><br/>**integer**: Returns t... <skipped 872 characters> ...\n   22  | lineFilters                 | Match object                                                 | Filters out the specified lines from the method match. For example, if the Box method extracts unwanted footer lines from a box, you can filter out the lines  with this parameter. |\n   23  | typeFilters                 | array of [Types](doc:types)                                  | Filters out the specified types from the method results. For example, for a target box containing a delivery date, a street address, and delivery notes, you can filter out the lines containing Date and Address types in order to extract the delivery notes. Note that less strict types, such as Name and Currency types, are less useful in this filter than stricter types such as the Phone Number type.<br/>For an example, see the Examples section. |\n   ..\n  167  \n  168  - The Text Table method with `\"detectMultipleLinesPerRow\": true` configured.\n  169: - LLM-based methods, such as the NLP Table method.\n  170  \n  171  Try out this example in the Sensible app using the following document and config:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n   45  Address\n   46  ====\n   47: Returns USA-based addresses.  By default, Sensible recognizes  single- or multi-line addresses isolated from other lines in \"block\" format. For example, `\"type\":\"address\"` recognizes address such as:\n   48  \n   49  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/type_address_block.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   50  | Parameter                                                    | Value                                              | Description                                                  |\n   51  | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n   52: <skipped 355 characters> ...the first returns null.<br/>For example, to capture differences in wording between document revisions, define two fields with the same ID, which anchor on synonymous text that 's present or absent in different document revisions. <br/>Or, specify an optional anchor anywhere in a document for an LLM-based field, and fall back to a different field if the anchor isn't present. <br/>Fallback fields can be of any kind. For example, you can fallback from a field, to a computed field, to a section group. Fallbacks don't work across nested structures. For example, you can't fall back from a parent section ... <skipped 49 characters> ...\n   53: | anchor (**required**) except for fields that use [LLM-based methods](doc:llm-based-methods) | object                                             | The anchor identifies one or more lines of text in the document at which Sensible starts executing a method. Can be a string, Match object, or array of Match objects. For more information, see [Anchor object](doc:anchor) and [Match object](doc:match). |\n   54: | method (**required**)                                        | object                                             | The method describes how Sensible expands from the anchor and extracts the target data. For more information, see [Methods](doc:methods), [LLM-based methods](doc:llm-based-methods), and [Method object](doc:method). |\n   55  | type                                                         | see [Types](doc:types)                             | The data type to extract, for example, a currency, an address, or a custom type you define. This structured output includes the type information. If the field captures other data in addition to the data matching the type, Sensible suppresses the additional data from the output. For more information, see [Types](doc:types). |\n   56  | match                                                        | `first`,`last`,`all`, `allWithNull`,`mostFrequent` | If there are multiple anchors, specifies which one to use to extract output. <br/> <br/>- `first`  specifies the first anchor in the document that returns non-null output.<br/><br/>-... <skipped 1023 characters> ... a scanned document repeats a box titled `1 Wages` four times with the same dollar value, `21850.20`. Due to OCR errors, the extracted outputs are `21050.20`, `21850.20`, `21850.20` and `21850.58`.  This option returns the most frequent, and therefore the mostly likely correct output,  `21850.20`. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   22  | offsetY           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page.  For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   23  | offsetBoxes       | object. default: `none`                                      | Recognize a box offset from the point defined in the Position parameter by a number of contiguous boxes that share borders. For example, use this parameter for tables or grids where borders surround every cell. Contains the following parameters:<br/>\\- `direction`: The direction to search in (`above, below, right, left`, relative to the starting box.<br/>\\- `number`: The number of boxes to offset by.<br/>For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   24: <skipped 185 characters> ...s parameter for checkboxes with dark backgrounds relative to the surrounding background.<br/>If the document has a white background, the default value is 0.9.<br/>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   25  | includeAnchor     | `true`, `false`. default: false                              | If true, includes anchors lines that are inside the box borders in the method output. Ignores anchor lines that are outside box borders. |\n   26  \n   ..\n   31  ----\n   32  \n   33: The following example shows extracting a dollar amount from a box in a 1099 form, based on anchor text matching in the box.\n   34  \n   35  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1100 - checkbox.md:\n   27  | width             | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   28  | height            | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   29: <skipped 113 characters> ...w which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document.<br/> |\n   30  \n   31  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1400 - fixed-table.md:\n   25  | id (**required**)               | `fixedTable`                                                 | When you specify this, you must also specify `\"type\": \"table\"` in the field's parameters. See the Stop parameter for details about how Sensible recognizes a table. |\n   26  | columnCount (**required**)      | integer                                                      | The number of columns the tables must have.                  |\n   27: | columns (**required**)          | array                                                        | An array of objects with the following parameters: <br/> -`id` (**required**): The ID for the column in the extraction output <br/> - `index` (**required**): The zero-based column index <br/>-`type` : The table cell's type. For more information, see  [Types](doc:types) <br/> -`isRequired` (default: false): If true, Sensible omits a row if its cell is empty in this column, or if the contents don't match the value you specify in this column's Type parameter. If false, S... <skipped 202 characters> ...\n   28  | stop                            | [Match object](doc:match) or array of Match objects. default: none | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Ama... <skipped 131 characters> ...specify a stop, Sensible supports:<br/>- merged cells in tables. Sensible populates \"empty\" spanned cells with the spanned value. For an example, see [Merged cell example](doc:fixed-table#example-merged-cells).<br/> - checkboxes in cells. Returns checkbox selection status as `[true]` or `[false]`. |\n   29  | startOnRow                      | integer. default: 0                                          | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1660 - paragraph.md:\n   80    \"lead_warning_spans_pages\": {\n   81      \"type\": \"string\",\n   82:     \"value\": \"LEAD WARNING STATEMENT: Housing built before 1978 may contain lead-based paint. Lead from paint, paint chips, and dust can pose health hazards if not managed properly. Lead exposure is especially harmful to young children and pregnant women. Before renting a home built before 1978, landlords must disclose the presence of any known lead- based paint and/or lead-based paint hazards in the dwelling. Tenants must also receive a federally approved pamphlet on lead poisoning prevention.\"\n   83    }\n   84  }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1900 - region.md:\n   23  | id                     | value                             | description                                                  |\n   24  | ---------------------- | --------------------------------- | ------------------------------------------------------------ |\n   25: <skipped 163 characters> ... the line's boundary box overlap for at least 90% of either the region *or* the line's width (\"x extent\").<br/> AND<br/> - condition 2: the region and the line's boundary box overlap for at least 80% of either the region *or* the line's height (\"y extent\").<br/><br/> Sensible calculates percentages based on the smaller of the two extents. For example, if the line is less wide than the region, condition 1 is met if the overlap is 90% of the line's width. If the region is less wide than the line, condition 1 is met if the overlap is 90% of the region's width.  The same logic for calculating percentages applies to condition 2. |\n   26  | start (**required**)   | `above`, `below`, `left`, `right` | Defines the starting point for the extraction region relative to the anchor. For example,  `right`  specifies starting at the midpoint of the anchor line's right boundary, and `below` specifies starting at the midpoint of the anchor line's bottom boundary. |\n   27  | offsetX (**required**) | number                            | The horizontal offset in inches from the point defined in the Start parameter to the top left corner of the region. Positive values offset to the right, negative values offset to the left.<br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking a point in the document in the Sensible app, then dragging to display inch dimensions. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - text-table.md:\n    3  hidden: false\n    4  ---\n    5: Matches tables based on column coordinates in inches and returns their collated column contents.  Anchor on the table title, or use a negative Offset Y parameter to enable anchoring on a column heading.\n    6  \n    7  This method's advantages are:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\index.md:\n    9  \n   10  \n   11: ## Layout-based methods\n   12  \n   13  | Method                                       | Image                                                        | Notes                                                        |\n   ..\n   30  | **[Text Table](doc:text-table)**             | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table.png) | Extracts tables using solely text-positioning data (fast but limited). |\n   31  \n   32: ## Large language model (LLM)-based methods\n   33  \n   34: See [LLM-based methods](doc:llm-based-methods).\n   35  \n   36  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   10  \n   11  - Low code. Describe what you want to extract in prompts for a large language model (LLM)\n   12: - Can reformat or filter extracted data based on your prompts. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n  454     2. If you specify Fast for the LLM Engine parameter,  1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. To improve performance, Sensible removes chunks that are significantly less relevant from the list of top-scoring chunks. The number of chunks Sensible sumbits to the LLM can therefore be smaller than the number specified by the Chunk Count parameter.\n  455  3. To avoid large language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers. Sensible batches a maxiumum of 20 page numbers. The chunks in each page group can be non-consecutive in the document.\n  456: <skipped 80 characters> ...the pages' chunks as context, page-hinting data, and your prompts. For information about the LLM model, see the LLM Engine parameter. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n  457  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n  458  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n    3  hidden: false\n    4  ---\n    5: Extracts a table based on your natural-language description of the data you want to extract. This method can extract tables that span multiple pages.\n    6  \n    7  For tips on authoring this method in Sensible Instruct, see [NLP Table tips](doc:table-tips).\n    .\n   10  \n   11  - Low code. Describe what you want to extract in prompts for a large language model (LLM).\n   12: - Can reformat or filter extracted column data based on your prompts. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n  337  \n  338     - Sensible compares the two concatenations using the OpenAI Embeddings API. \n  339: 4. Sensible creates a full prompt for the LLM (GPT-4) that includes the top-scoring table, page hinting data, and your prompts. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to restructure the best-scoring table based on your column descriptions and your overall table description. \n  340  6. Sensible returns the restructured table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1600 - summarizer.md:\n    3  hidden: false\n    4  ---\n    5: Automatically extracts key/value pairs from short snippets of free text using an LLM (GPT-3.5 Turbo). The Summarizer computed field method takes as input a snippet of free text, and extracts key/value pairs based on instructions or short samples of extracted values you provide. \n    6  \n    7  Example use cases for this method include:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\index.md:\n    1  ---\n    2: title: \"LLM-based methods\"\n    3  hidden: false\n    4  ---\n    5  \n    6: Extract free text from unstructured documents using large language model (LLM)-based SenseML methods. For example, extract information from legal paragraphs in contracts and leases, or results from research papers.\n    7  \n    8: These methods are also low-code alternatives to [layout based methods](doc:methods).  \n    9  \n   10  \n   11: The following topics describe how to author LLM-based methods using the SenseML editor. For information about authoring LLM-based methods using a visual tool instead of JSON, see [Prompt tips](doc:instruct). \n   12  \n   13  | Method                                                       | Example use case                                             | Notes                                                        |\n   ..\n   25  \n   26  \n   27: For layout-based extraction methods, see [methods](doc:methods).\n   28  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1200 - page-range.md:\n   15  | ----------- | ------ | ------------------------------------------------------------ |\n   16  | type      | `pageRange` |                                                   |\n   17: | startPage | number. default: 0 | Zero-based index of the first page (inclusive). |\n   18: | endPage   | number. default: last page | Zero-based index of the last page (exclusive). |\n   19  \n   20   \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   20  | -------------- | ------ | ------------------------------------------------------------ |\n   21  | type (**required**) | `removeFooter` | For an example, see the Examples section. |\n   22: | startsOnPage | integer. default: 1 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   23  | match | [Match](doc:match) object or array of Match objects | Bypasses automatic footer recognition.<br/>Removes all text on the page below the bottom boundary of the matched line.<br>If Sensible doesn't find the match, it doesn't perform footer removal. |\n   24  | offsetY | number in inches. default: 0 | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the bottom of the page.<br>If used with the Match parameter, offsets from the bottom boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   18  | ------------------- | --------------------------------------------------- | ------------------------------------------------------------ |\n   19  | type (**required**) | `removeHeader`                                      | For an example, see the Examples section.                    |\n   20: | startsOnPage        | integer. default: 1                                 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   21  | match               | [Match](doc:match) object or array of Match objects | Bypasses automatic header recognition.<br/>Removes all text on the page above the top boundary of the matched line.<br/>If Sensible doesn't find the match, it doesn't perform header removal. |\n   22  | offsetY             | number in inches. default: 0                        | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the top of the page.<br/>If used with the Match parameter, offsets from the top boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n    6  \n    7  \n    8: Corrects the size of text in documents whose size varies, for example as a result of being photographed at different distances. ID cards and receipts are common examples of such documents. This preprocessor enables coordinates-based methods, such as the Region or Text Table methods, to work with such unpredictably scaled documents. For alternatives to this preprocessor, see [Page transformation preprocessors](doc:deskew#notes).\n    9  \n   10  [**Parameters**]( doc:scale#parameters)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\index.md:\n   12  | **[Ligature](doc:ligature)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ligature.png) | Intelligently replaces Unicode ligatures in a text extraction. |\n   13  | **[Merge Lines](doc:merge-lines)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_1.png) | Corrects oversplit lines.                                    |\n   14: | **[NLP](doc:nlp)**                     |                                                              | Advanced prompt configuration for each large language model (LLM)-based method in a config. |\n   15  | **[OCR](doc:ocr)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ocr.png) | Selectively OCRs pages in documents containing a mix of digitally generated text and text images (such as scanned text). If the whole PDF is a scan, you don't need to configure this preprocessor. |\n   16  | **[Page Filter](doc:page-filter)**     |                                                              | Filters out low-scoring pages given a bag of target terms and stop terms. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1400 - split.md:\n   15  | source_id (**required**) | a field id in the current config | The id of the field to split into substrings.                |\n   16  | separator (**required**) | string                           | The separator to use in the split.                           |\n   17: | index                    | integer                          | The zero-based index of the substring to return after the split. If unspecified, returns all the split substrings as an array. |\n   18  \n   19  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\1000 - deprecated-key-value.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-based methods](doc:instruct) replace this method.\n    8  \n    9  ## Decription\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2000 - deprecated-tfidf.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-based methods](doc:instruct) replace this method.\n    8  \n    9  ## Description\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2100 - deprecated-table.md:\n    9  ## Description\n   10  \n   11: Extracts tables based on bag-of-words scoring and returns their collated column contents. Anchor either on the table title or on a table column heading.\n   12  \n   13   Use the Table method for tables that have variable column formatting.  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1600 - file-types.md:\n   34       - Adds the sheet name as a header on each page.\n   35  - For TIFF documents, SenseML methods that attempt to render pages return an error, including:\n   36:      - pixel-based methods, such as Box, Checkbox, Signature, and image coordinates returned by the Document Range method\n   37       - Key/Value method\n   38       - Fixed Table method with the Stop parameter specified. Use the Text Table method as an alternative.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3600 - section-nuances.md:\n   37  \n   38  1. (one time) Finds the section group's range in which to recognize columns using Match and Stop lines. A range can span pages.\n   39: 2. (repeats) Recognizes columns inside the range, based on whitespace gutters and searching left-to-right. If non-columnar text is present in the range, it can affect column recognition as follows:\n   40  \n   41     - If there's a Stop parameter, Sensible adds the non-column text to each column. Each column then has a nonlinear, irregular shape. For example, this allows each column to use a table title that spans multiple columns as an anchor. \n   ..\n   83  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_section_column_selection.png)\n   84  \n   85: As steps 2 and 3 in the previous image illustrate, the varying gap sizes between columns in each section mean that you can't use coordinate-based methods such as the Region method for fields in these sections.\n   86  \n   87  For more information about this example, see [Labeled rows and labeled columns table example](doc:sections-example-labeled-rows)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4500 - draft-senseml-order.md:\n    4  ---\n    5  \n    6: this draft is on hold, based on team meeting onboarding slides from aug 2022 as well as notion docs for onboarding devs. publish if there's an audience need for it (hasn't really come up)\n    7  \n    8  \n    .\n  101  Determine the best extraction, which is the one Sensible returns data from.\n  102  \n  103: Score each configuration's extraction based on how much data it found, and its [validations](doc:validate-extractions):\n  104  \n  105  - For each field that returns non-null data, +1 point\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4600 - table-methods.md:\n    8  ### Overview of table methods\n    9  \n   10: | method      | based on | description                                                  | comments                                                   |\n   11  | ----------- | -------- | ------------------------------------------------------------ | ---------------------------------------------------------- |\n   12: | NLP Table   | large language models (LLM)s     | Extracts a table based on your prompt to an LLM. | Low code, doesn't require an anchor. Slowest table method. |\n   13  | Fixed Table | layout   | Extracts tables with a fixed number and layout of columns.   | Faster than NLP Table method.                              |\n   14: | Text Table  | layout   | Extracts tables based on column coordinates in inches.       | Fastest table method.                                      |\n   15  \n   16  ### Features supported\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: <skipped 55 characters> ...racting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n    4  ---\n    5  \n    6: As you scale up and encounter document complexity, you can optimize extraction performance by choosing between LLMs or layout-based extraction methods.\n    7  \n    8: See the following diagram for an overview of when to use Sensible Instruct (LLMs) or SenseML (layout-based) for extractions: \n    9  \n   10  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_landscape.png)\n   11  \n   12: Sensible recommends using large language model (LLM) prompts for free-form, highly variable documents, and layout-based, or \"rule-based\" queries for structured, less-variable documents.  You can combine both strategies since they're fully compatible with each other. \n   13  \n   14  See the following table to learn more about extraction strategies:\n   ..\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18  | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19: | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with LLM-based queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   21  \n   22: See the following table for an overview of the pros and cons of LLMs versus layout-based extraction:\n   23  \n   24: |                              | LLM (Sensible Instruct)                                      | layout-based (SenseML)                                       |\n   25  | ---------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   26: | Technical expertise required | For nontechnical users. Describe what you want to extract in a prompt to an LLM.  For example, \"the policy period\" or \"total amount invoiced\". | Offers highly configurable JSON-based extraction configuration for technical users. For example, write instructions in JSON to grab the second cell in a column headed by \"premium.\" |\n   27  | Workflow automation          | Suited to workflows that include human review or that are fault-tolerant. | Suited to automated workflows that require predictable results and validation. |\n   28  | Document variability         | Suited to documents that are unstructured or that have a large number of layout variations or revisions. | Suited to structured documents with a finite number of variations, where you know the layout of the document in advance. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 191 characters> ...to your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n    2  \n    3  \n    4: <skipped 191 characters> ...to your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\n119 matches across 45 files\n\n\nSearching 160 files for \"based\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\batch-api.md:\n   47  \n   48  \n   49: 2. Create  upload URLs for an indexed range of the documents in the batch. Use zero-based indices to upload the documents in the same order that you listed them in the previous step. For example, to upload the two documents in the previous step :\n   50  \n   51  ```curl\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\4000 - validate-extractions.md:\n   11  - If Sensible extracted a field from OCR'd text,  test the confidence score for the field's anchor and value as a measure of the quality of the text images. For example, test that text in a scanned document isn't blurry or illegible.\n   12  \n   13: Then write your own logic based on the validations, for example:\n   14  \n   15  - pass a document extraction automatically through your pipeline if there are no errors and 10% of warning validations fail\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - performance.md:\n   16  \n   17  \n   18: In an ideal performance scenario, you extract data from digitally generated PDFs using text-based or coordinate-based Sensible methods, such as Label, Row, Region, Text Table, and Document Range.\n   19  \n   20  In order of largest to smallest impact, these factors add seconds to the ideal document processing time:\n   ..\n   33  | OCR preprocessor                               | Some documents mix digital text with text images, for example by embedding scanned pages in a digital PDF. Speed this up by OCRing select pages, not the whole document. For more information, see the [OCR preprocessor](doc:ocr). |\n   34  | Fixed Tables with stops,<br/>Nearest Checkbox method | Sensible processes Fixed Tables that include a Stop parameter in less than 5 seconds. Or, convert to the faster [Text Table](doc:text-table) method, which skips table recognition. |\n   35: | LLM-based methods                                    | For methods based on large language models (LLMs), see [Sensible Instruct](doc:instruct) |\n   36  \n   37   **Under 1 second per document**\n   38  \n   39: Some Sensible methods use pixels, for example to recognize borders. Pixel recognition for PDF documents requires rendering a PDF page, which can take hundreds of milliseconds. To improve processing time, use coordinate-based alternatives to these methods. \n   40  \n   41  | Factor                                                       | Notes                                                        |\n   42  | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   43: | Box method                                                   | To improve processing speed, convert the more flexible Box method to the strictly coordinate-based Region method. |\n   44  | Signature method,<br/> Checkbox method,<br/>[image coordinate extraction](doc:document-range) | These methods have no alternatives. See the following section for ways to avoid running these methods except when necessary. |\n   45  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\2000 - zapier-tutorial-2.md:\n    7  This topic describes how to configure an example two-Zap workflow for Zapier. The example workflow extracts data from emailed documents and uploads them as spreadsheets to Google Drive. \n    8  \n    9: You can use the example Zaps in this topic as templates. For example, modify this workflow to trigger extractions based on other file actions in Zapier-support apps (for example, a new document uploaded to Google Drive instead of a new email in Gmail). Or, output to different destinations (for example, a database record instead of spreadsheet files in Google Drive).\n   10  \n   11  Zap 1\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n   96  -----\n   97  \n   98: Sensible converts the JSON extraction output from the [auto_insurance_anyco](https://github.com/sensible-hq/sensible-docs/raw/main/readme-sync/assets/v0/pdfs/auto_insurance_anyco.pdf) example described in the [Getting started with layout-based extractions](doc:getting-started) to the following spreadsheet:\n   99  \n  100  **Spreadsheet output**\n  ...\n  119  **Example configuration**\n  120  \n  121: See the [Getting started with layout-based extractions](doc:getting-started)  for the SenseML configuration for this example.\n  122  \n  123  **JSON output**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n    1  ---\n    2: title: \"Getting started with layout-based extractions\"\n    3  hidden: false\n    4  ---\n    5  \n    6  \n    7: In this tutorial, you'll learn to extract data out of a set of similar documents using a layout-based query language, SenseML. You'll write JSON to tell Sensible about which data to extract from an example document, using what you know about the layout of the document. SenseML uses a mix of techniques, including machine learning, heuristics, and rules, to extract your target information.\n    8  \n    9  You can then save your descriptions as a \"config.\" Publish your config to automate extracting from similar documents.   \n   ..\n   88            {\n   89              /* ask a free-text question.\n   90:            You can author LLM-based queries in Sensible Instruct\n   91             instead of in JSON */\n   92              \"id\": \"bodily_injury_premium\",\n   ..\n  195  - If you want to skip ahead and try out the API or SDKs, see [Integrate with your application](doc:getting-started#integrate-with-your-application). \n  196  \n  197: How layout-based extraction works\n  198  ====\n  199  \n  200: This guide focuses on layout-based document extraction, which works as follows:\n  201  \n  202  - Each \"field\" is a basic query unit in Sensible.  Each field outputs a piece of data from the document that you want to extract. Sensible uses the field `id` as the key in the key/value JSON output. For more information, see [Field](doc:field-query-object).\n  ...\n  206  - Then, Sensible uses a \"method\" to expand its search out from the anchor and extract the data you want. For more information about methods, see [Methods](doc:methods).\n  207  \n  208: This config uses three types of layout-based methods:\n  209  \n  210    | Type of method | explanation                                                  | description                                       |\n  ...\n  215  \n  216  \n  217: This config also uses one large language model (LLM)-based method, to demonstrate that you can combine layout-based and LLM-based methods in the same config:\n  218  \n  219  | Type of method   | explanation                                                  | description                                                  |\n  220  | ---------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  221: | LLM-based | [How it works: query group method](doc:getting-started#how-it-works-query-group-method) | Ask a free-text question about simple information in the document |\n  222  \n  223  How it works: Query Group method\n  ...\n  241            {\n  242              /* ask a free-text question.\n  243:            You can author LLM-based queries in Sensible Instruct\n  244             instead of in JSON */\n  245              \"id\": \"bodily_injury_premium\",\n  ...\n  276  Try it out: change one of the questions to `\"street address for the Anyco insurance company\"` and see what you get. For easy authoring, try out this method in Sensible's [visual authoring tool](doc:instruct).\n  277  \n  278: LLM-based methods such as the Query Group method can run up against limitations with complex document formatting. In such cases, combine LLM-based methods with layout-based methods in the same document extraction configuration. \n  279  \n  280: Let's look next at several simple layout-based methods.\n  281  \n  282  How it works: Label method\n  ...\n  442  **Note:** Sensible extracts the box contents, but not the anchor itself.  By default, Sensible returns method results, not anchor results.\n  443  \n  444: Advanced layout-based queries\n  445  ----\n  446  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\3000 - portfolio.md:\n   38  - **config content:**\n   39  \n   40: The config is the same as the one used in the [Getting started with layout-based extractions](doc:getting-started), with the addition of the following fingerprint:\n   41  \n   42  ```json\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4000 - repeat-layouts.md:\n    4  ---\n    5  \n    6: To extract complex, repeating data from documents, use layout-based sections to break the document into subdocuments. Then extract data from each subdocument with layout- or LLM-based fields. Note that for simpler repeating data, you can use the [List](doc:list) method.\n    7  \n    8  The following images show using sections to enable extracting repeating data in a claims loss run and in a complex table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\2000 - ui.md:\n   38  -----\n   39  \n   40: 7. Click a new configuration to edit the SenseML and extract structured data from the document. For a tutorial, see [Getting started with layout-based extractions](doc:getting-started).\n   41  8. (Optional) Click the **Validations** tab and write [validations](doc:validate-extractions).\n   42  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\3000 - prompt.md:\n   50  | pageHinting                         | boolean. default: true                                       | Configures context's metadata. For details about context and chunks, see the Notes section. <br/>Includes or or removes page metadata for each chunk from the prompt Sensible inputs to an LLM.<br/>F... <skipped 133 characters> ...age numbers, since their relationship to the cards' text is arbitrary.<br/>Applies to each Sensible Instruct field in the config.<br/>For example, removes phrases like `The excerpt starts at the top of page 1 and ends at the bottom of page 1.` | Overrides config-level parameter for a single field. |\n   51  | chunkCount                          | number. default: see each method's [reference topic](doc:Query Group method-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The number of top-scoring chunks Sensible combines as context as part of the full... <skipped 80 characters> ...e config.<br/>Often, chunk count and chunk size are related. For example, if you know that your target data are spread over 7-10 pages, and occupy a small portion of those pages, you can specify a chunk count of 10 and a half-page  chunk size. | Overrides config-level parameter for a single field. |\n   52: | chunkSize                           | `0.5`, `1` default:  see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The size of the chunks Sensible splits the document into, as a page fraction. For example, `0.5` specifies each chunk is half a page.<br/>Applies to each Sensible Instruct field in the config. <br... <skipped 237 characters> ...\n   53: | chunkOverlapPercentage              | `0`, `0.25`, `0.5` default: see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The extent to which chunks overlap, as a percentage of the chunks' height. For example, `0.5` specifies each chunk overlaps by half its height. <br/>Applies to each Sensible Instruct field in the ... <skipped 301 characters> ...\n   54: <skipped 205 characters> ...ction.<br/>If specified, Sensible creates chunks in the page range and ignores other pages. For example, use this parameter to improve performance, or to avoid extracting unwanted data if your prompt has multiple candidate answers.<br/><br/>Contains the following parameters: <br/>`startPage`:  Zero-based index of the page at which Sensible starts creating chunks (inclusive). <br/>`endPage`: Zero-based index of the page at which Sensible stops creating chunks (exclusive).<br/><br/>**Note:** Sensible ignores this parameter when searching for a field's anchor. If you want to exclude the field's anchor from the page range, use the [Page Range](doc:page-range) preprocessor instead.<br/> | Overrides c... <skipped 43 characters> ...\n   55  | (**Deprecated**) promptIntroduction | string                                                       | Deprecated. Overwrites the introductory text at the beginning of the full prompt that Sensible submits to the LLM. |                                                      |\n   56  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\2000 - list-tips.md:\n    3  hidden: false\n    4  ---\n    5: This Sensible Instruct method extracts repeating data in a document based on your description of the list’s overall contents and each individual item. Data such as the work history or skills on a resume, the vehicles on an auto insurance policy, or the line items on an invoice are best suited for this method. \n    6  \n    7  This method is an alternative to the [NLP Table](doc:table-tips) method, when the data you want can appear either as a table or as another layout. The List method can find data in paragraphs of free text or in more structured layouts, such as key/value pairs or tables.  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\3000 - table-tips.md:\n    4  ---\n    5  \n    6: This Sensible Instruct method extracts a table in a document based on your description of the table title and each of its column headers.\n    7  \n    8  **Prompt Tips**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\index.md:\n    4  ---\n    5  \n    6: To extract from documents, describe your target data using Sensible's prompt-authoring environment, *Sensible Instruct*. Sensible Instruct is a large language-model (LLM)-based subset of *SenseML*, Sensible's JSON-based document extraction query language. By combining Sensible Instruct and SenseML, you can extract data from a range of document types, from highly structured business forms to unstructured research documents.\n    7  \n    8  See the following topics for tips on configuring extractions in Sensible Instruct:\n    .\n   17  ====\n   18  \n   19: For layout-based extraction methods, see [methods](doc:methods).\n   20  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n   11  - [Preprocessors](doc:preprocessors)\n   12  - [Methods](doc:methods)\n   13: - [LLM-based methods](doc:llm-based-methods), including LLM-based Sensible Instruct methods. For more information about choosing whether to author configs in either SenseML or Sensible Instruct, see [Choosing an extraction approach](doc:author).\n   14  - [Configuration settings](doc:config-settings)\n   15  - [Computed Field methods](doc:computed-field-methods)\n   ..\n   18  Or, for a getting started tutorial, see:\n   19  \n   20: - [Getting started with layout-based extraction](doc:getting-started)\n   21  \n   22  Examples\n   ..\n   51    ],\n   52    \"fields\": [\n   53:     /* LAYOUT-BASED EXAMPLE */\n   54      {\n   55        \"id\": \"_driver_name_raw\", // ID for extracted target data\n   ..\n   60        }\n   61      },\n   62:     /* LLM-BASED EXAMPLE */\n   63      {\n   64        \"method\": {\n   ..\n  130    There are two broad categories of methods:\n  131  \n  132:   |                         | [LLM-based methods](doc:llm-based-methods)     | Layout-based [methods](doc:methods)                          |\n  133    | ----------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  134    | Notes                   | Ask questions about info in the document, as you'd ask a human. For example, \"what's the policy period\"?  Uses large language models (LLMs). | Find the information in the document using anchoring text and layout data. For example, write instructions to grab the second cell in a column headed by \"premium\". |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   18  | Key                         | Value                                                        | Description                                                  |\n   19  | --------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   20: | `id`                        | see [Methods](doc:methods) and [LLM-based methods](doc:llm-based-methods). | see [Methods](doc:methods) and [LLM-based methods](doc:llm-based-methods). |\n   21: | tiebreaker                  | integer (zero-based index)<br/> or<br/>ordinal (`first`, `second`, `third`, `last`)<br/>or <br/> comparison (`>`, `<`)<br/>or<br/>`join`<br/> Default: `join` | If the method returns multiple elements (for example, a Row method), specifies which element to extract in the returned array. <br/><br/>**integer**: Returns t... <skipped 872 characters> ...\n   22  | lineFilters                 | Match object                                                 | Filters out the specified lines from the method match. For example, if the Box method extracts unwanted footer lines from a box, you can filter out the lines  with this parameter. |\n   23  | typeFilters                 | array of [Types](doc:types)                                  | Filters out the specified types from the method results. For example, for a target box containing a delivery date, a street address, and delivery notes, you can filter out the lines containing Date and Address types in order to extract the delivery notes. Note that less strict types, such as Name and Currency types, are less useful in this filter than stricter types such as the Phone Number type.<br/>For an example, see the Examples section. |\n   ..\n  167  \n  168  - The Text Table method with `\"detectMultipleLinesPerRow\": true` configured.\n  169: - LLM-based methods, such as the NLP Table method.\n  170  \n  171  Try out this example in the Sensible app using the following document and config:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n   45  Address\n   46  ====\n   47: Returns USA-based addresses.  By default, Sensible recognizes  single- or multi-line addresses isolated from other lines in \"block\" format. For example, `\"type\":\"address\"` recognizes address such as:\n   48  \n   49  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/type_address_block.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   50  | Parameter                                                    | Value                                              | Description                                                  |\n   51  | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n   52: <skipped 355 characters> ...the first returns null.<br/>For example, to capture differences in wording between document revisions, define two fields with the same ID, which anchor on synonymous text that 's present or absent in different document revisions. <br/>Or, specify an optional anchor anywhere in a document for an LLM-based field, and fall back to a different field if the anchor isn't present. <br/>Fallback fields can be of any kind. For example, you can fallback from a field, to a computed field, to a section group. Fallbacks don't work across nested structures. For example, you can't fall back from a parent section ... <skipped 49 characters> ...\n   53: | anchor (**required**) except for fields that use [LLM-based methods](doc:llm-based-methods) | object                                             | The anchor identifies one or more lines of text in the document at which Sensible starts executing a method. Can be a string, Match object, or array of Match objects. For more information, see [Anchor object](doc:anchor) and [Match object](doc:match). |\n   54: | method (**required**)                                        | object                                             | The method describes how Sensible expands from the anchor and extracts the target data. For more information, see [Methods](doc:methods), [LLM-based methods](doc:llm-based-methods), and [Method object](doc:method). |\n   55  | type                                                         | see [Types](doc:types)                             | The data type to extract, for example, a currency, an address, or a custom type you define. This structured output includes the type information. If the field captures other data in addition to the data matching the type, Sensible suppresses the additional data from the output. For more information, see [Types](doc:types). |\n   56  | match                                                        | `first`,`last`,`all`, `allWithNull`,`mostFrequent` | If there are multiple anchors, specifies which one to use to extract output. <br/> <br/>- `first`  specifies the first anchor in the document that returns non-null output.<br/><br/>-... <skipped 1023 characters> ... a scanned document repeats a box titled `1 Wages` four times with the same dollar value, `21850.20`. Due to OCR errors, the extracted outputs are `21050.20`, `21850.20`, `21850.20` and `21850.58`.  This option returns the most frequent, and therefore the mostly likely correct output,  `21850.20`. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   22  | offsetY           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page.  For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   23  | offsetBoxes       | object. default: `none`                                      | Recognize a box offset from the point defined in the Position parameter by a number of contiguous boxes that share borders. For example, use this parameter for tables or grids where borders surround every cell. Contains the following parameters:<br/>\\- `direction`: The direction to search in (`above, below, right, left`, relative to the starting box.<br/>\\- `number`: The number of boxes to offset by.<br/>For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   24: <skipped 185 characters> ...s parameter for checkboxes with dark backgrounds relative to the surrounding background.<br/>If the document has a white background, the default value is 0.9.<br/>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   25  | includeAnchor     | `true`, `false`. default: false                              | If true, includes anchors lines that are inside the box borders in the method output. Ignores anchor lines that are outside box borders. |\n   26  \n   ..\n   31  ----\n   32  \n   33: The following example shows extracting a dollar amount from a box in a 1099 form, based on anchor text matching in the box.\n   34  \n   35  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1100 - checkbox.md:\n   27  | width             | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   28  | height            | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   29: <skipped 113 characters> ...w which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document.<br/> |\n   30  \n   31  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1400 - fixed-table.md:\n   25  | id (**required**)               | `fixedTable`                                                 | When you specify this, you must also specify `\"type\": \"table\"` in the field's parameters. See the Stop parameter for details about how Sensible recognizes a table. |\n   26  | columnCount (**required**)      | integer                                                      | The number of columns the tables must have.                  |\n   27: | columns (**required**)          | array                                                        | An array of objects with the following parameters: <br/> -`id` (**required**): The ID for the column in the extraction output <br/> - `index` (**required**): The zero-based column index <br/>-`type` : The table cell's type. For more information, see  [Types](doc:types) <br/> -`isRequired` (default: false): If true, Sensible omits a row if its cell is empty in this column, or if the contents don't match the value you specify in this column's Type parameter. If false, S... <skipped 202 characters> ...\n   28  | stop                            | [Match object](doc:match) or array of Match objects. default: none | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Ama... <skipped 131 characters> ...specify a stop, Sensible supports:<br/>- merged cells in tables. Sensible populates \"empty\" spanned cells with the spanned value. For an example, see [Merged cell example](doc:fixed-table#example-merged-cells).<br/> - checkboxes in cells. Returns checkbox selection status as `[true]` or `[false]`. |\n   29  | startOnRow                      | integer. default: 0                                          | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1660 - paragraph.md:\n   80    \"lead_warning_spans_pages\": {\n   81      \"type\": \"string\",\n   82:     \"value\": \"LEAD WARNING STATEMENT: Housing built before 1978 may contain lead-based paint. Lead from paint, paint chips, and dust can pose health hazards if not managed properly. Lead exposure is especially harmful to young children and pregnant women. Before renting a home built before 1978, landlords must disclose the presence of any known lead- based paint and/or lead-based paint hazards in the dwelling. Tenants must also receive a federally approved pamphlet on lead poisoning prevention.\"\n   83    }\n   84  }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1900 - region.md:\n   23  | id                     | value                             | description                                                  |\n   24  | ---------------------- | --------------------------------- | ------------------------------------------------------------ |\n   25: <skipped 163 characters> ... the line's boundary box overlap for at least 90% of either the region *or* the line's width (\"x extent\").<br/> AND<br/> - condition 2: the region and the line's boundary box overlap for at least 80% of either the region *or* the line's height (\"y extent\").<br/><br/> Sensible calculates percentages based on the smaller of the two extents. For example, if the line is less wide than the region, condition 1 is met if the overlap is 90% of the line's width. If the region is less wide than the line, condition 1 is met if the overlap is 90% of the region's width.  The same logic for calculating percentages applies to condition 2. |\n   26  | start (**required**)   | `above`, `below`, `left`, `right` | Defines the starting point for the extraction region relative to the anchor. For example,  `right`  specifies starting at the midpoint of the anchor line's right boundary, and `below` specifies starting at the midpoint of the anchor line's bottom boundary. |\n   27  | offsetX (**required**) | number                            | The horizontal offset in inches from the point defined in the Start parameter to the top left corner of the region. Positive values offset to the right, negative values offset to the left.<br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking a point in the document in the Sensible app, then dragging to display inch dimensions. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - text-table.md:\n    3  hidden: false\n    4  ---\n    5: Matches tables based on column coordinates in inches and returns their collated column contents.  Anchor on the table title, or use a negative Offset Y parameter to enable anchoring on a column heading.\n    6  \n    7  This method's advantages are:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\index.md:\n    9  \n   10  \n   11: ## Layout-based methods\n   12  \n   13  | Method                                       | Image                                                        | Notes                                                        |\n   ..\n   30  | **[Text Table](doc:text-table)**             | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table.png) | Extracts tables using solely text-positioning data (fast but limited). |\n   31  \n   32: ## Large language model (LLM)-based methods\n   33  \n   34: See [LLM-based methods](doc:llm-based-methods).\n   35  \n   36  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   10  \n   11  - Low code. Describe what you want to extract in prompts for a large language model (LLM)\n   12: - Can reformat or filter extracted data based on your prompts. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n  454     2. If you specify Fast for the LLM Engine parameter,  1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. To improve performance, Sensible removes chunks that are significantly less relevant from the list of top-scoring chunks. The number of chunks Sensible sumbits to the LLM can therefore be smaller than the number specified by the Chunk Count parameter.\n  455  3. To avoid large language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers. Sensible batches a maxiumum of 20 page numbers. The chunks in each page group can be non-consecutive in the document.\n  456: <skipped 80 characters> ...the pages' chunks as context, page-hinting data, and your prompts. For information about the LLM model, see the LLM Engine parameter. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n  457  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n  458  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n    3  hidden: false\n    4  ---\n    5: Extracts a table based on your natural-language description of the data you want to extract. This method can extract tables that span multiple pages.\n    6  \n    7  For tips on authoring this method in Sensible Instruct, see [NLP Table tips](doc:table-tips).\n    .\n   10  \n   11  - Low code. Describe what you want to extract in prompts for a large language model (LLM).\n   12: - Can reformat or filter extracted column data based on your prompts. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n  337  \n  338     - Sensible compares the two concatenations using the OpenAI Embeddings API. \n  339: 4. Sensible creates a full prompt for the LLM (GPT-4) that includes the top-scoring table, page hinting data, and your prompts. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to restructure the best-scoring table based on your column descriptions and your overall table description. \n  340  6. Sensible returns the restructured table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1600 - summarizer.md:\n    3  hidden: false\n    4  ---\n    5: Automatically extracts key/value pairs from short snippets of free text using an LLM (GPT-3.5 Turbo). The Summarizer computed field method takes as input a snippet of free text, and extracts key/value pairs based on instructions or short samples of extracted values you provide. \n    6  \n    7  Example use cases for this method include:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\index.md:\n    1  ---\n    2: title: \"LLM-based methods\"\n    3  hidden: false\n    4  ---\n    5  \n    6: Extract free text from unstructured documents using large language model (LLM)-based SenseML methods. For example, extract information from legal paragraphs in contracts and leases, or results from research papers.\n    7  \n    8: These methods are also low-code alternatives to [layout based methods](doc:methods).  \n    9  \n   10  \n   11: The following topics describe how to author LLM-based methods using the SenseML editor. For information about authoring LLM-based methods using a visual tool instead of JSON, see [Prompt tips](doc:instruct). \n   12  \n   13  | Method                                                       | Example use case                                             | Notes                                                        |\n   ..\n   25  \n   26  \n   27: For layout-based extraction methods, see [methods](doc:methods).\n   28  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1200 - page-range.md:\n   15  | ----------- | ------ | ------------------------------------------------------------ |\n   16  | type      | `pageRange` |                                                   |\n   17: | startPage | number. default: 0 | Zero-based index of the first page (inclusive). |\n   18: | endPage   | number. default: last page | Zero-based index of the last page (exclusive). |\n   19  \n   20   \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   20  | -------------- | ------ | ------------------------------------------------------------ |\n   21  | type (**required**) | `removeFooter` | For an example, see the Examples section. |\n   22: | startsOnPage | integer. default: 1 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   23  | match | [Match](doc:match) object or array of Match objects | Bypasses automatic footer recognition.<br/>Removes all text on the page below the bottom boundary of the matched line.<br>If Sensible doesn't find the match, it doesn't perform footer removal. |\n   24  | offsetY | number in inches. default: 0 | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the bottom of the page.<br>If used with the Match parameter, offsets from the bottom boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   18  | ------------------- | --------------------------------------------------- | ------------------------------------------------------------ |\n   19  | type (**required**) | `removeHeader`                                      | For an example, see the Examples section.                    |\n   20: | startsOnPage        | integer. default: 1                                 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   21  | match               | [Match](doc:match) object or array of Match objects | Bypasses automatic header recognition.<br/>Removes all text on the page above the top boundary of the matched line.<br/>If Sensible doesn't find the match, it doesn't perform header removal. |\n   22  | offsetY             | number in inches. default: 0                        | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the top of the page.<br/>If used with the Match parameter, offsets from the top boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n    6  \n    7  \n    8: Corrects the size of text in documents whose size varies, for example as a result of being photographed at different distances. ID cards and receipts are common examples of such documents. This preprocessor enables coordinates-based methods, such as the Region or Text Table methods, to work with such unpredictably scaled documents. For alternatives to this preprocessor, see [Page transformation preprocessors](doc:deskew#notes).\n    9  \n   10  [**Parameters**]( doc:scale#parameters)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\index.md:\n   12  | **[Ligature](doc:ligature)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ligature.png) | Intelligently replaces Unicode ligatures in a text extraction. |\n   13  | **[Merge Lines](doc:merge-lines)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_1.png) | Corrects oversplit lines.                                    |\n   14: | **[NLP](doc:nlp)**                     |                                                              | Advanced prompt configuration for each large language model (LLM)-based method in a config. |\n   15  | **[OCR](doc:ocr)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ocr.png) | Selectively OCRs pages in documents containing a mix of digitally generated text and text images (such as scanned text). If the whole PDF is a scan, you don't need to configure this preprocessor. |\n   16  | **[Page Filter](doc:page-filter)**     |                                                              | Filters out low-scoring pages given a bag of target terms and stop terms. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1400 - split.md:\n   15  | source_id (**required**) | a field id in the current config | The id of the field to split into substrings.                |\n   16  | separator (**required**) | string                           | The separator to use in the split.                           |\n   17: | index                    | integer                          | The zero-based index of the substring to return after the split. If unspecified, returns all the split substrings as an array. |\n   18  \n   19  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\1000 - deprecated-key-value.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-based methods](doc:instruct) replace this method.\n    8  \n    9  ## Decription\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2000 - deprecated-tfidf.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-based methods](doc:instruct) replace this method.\n    8  \n    9  ## Description\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2100 - deprecated-table.md:\n    9  ## Description\n   10  \n   11: Extracts tables based on bag-of-words scoring and returns their collated column contents. Anchor either on the table title or on a table column heading.\n   12  \n   13   Use the Table method for tables that have variable column formatting.  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1600 - file-types.md:\n   34       - Adds the sheet name as a header on each page.\n   35  - For TIFF documents, SenseML methods that attempt to render pages return an error, including:\n   36:      - pixel-based methods, such as Box, Checkbox, Signature, and image coordinates returned by the Document Range method\n   37       - Key/Value method\n   38       - Fixed Table method with the Stop parameter specified. Use the Text Table method as an alternative.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3600 - section-nuances.md:\n   37  \n   38  1. (one time) Finds the section group's range in which to recognize columns using Match and Stop lines. A range can span pages.\n   39: 2. (repeats) Recognizes columns inside the range, based on whitespace gutters and searching left-to-right. If non-columnar text is present in the range, it can affect column recognition as follows:\n   40  \n   41     - If there's a Stop parameter, Sensible adds the non-column text to each column. Each column then has a nonlinear, irregular shape. For example, this allows each column to use a table title that spans multiple columns as an anchor. \n   ..\n   83  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_section_column_selection.png)\n   84  \n   85: As steps 2 and 3 in the previous image illustrate, the varying gap sizes between columns in each section mean that you can't use coordinate-based methods such as the Region method for fields in these sections.\n   86  \n   87  For more information about this example, see [Labeled rows and labeled columns table example](doc:sections-example-labeled-rows)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4500 - draft-senseml-order.md:\n    4  ---\n    5  \n    6: this draft is on hold, based on team meeting onboarding slides from aug 2022 as well as notion docs for onboarding devs. publish if there's an audience need for it (hasn't really come up)\n    7  \n    8  \n    .\n  101  Determine the best extraction, which is the one Sensible returns data from.\n  102  \n  103: Score each configuration's extraction based on how much data it found, and its [validations](doc:validate-extractions):\n  104  \n  105  - For each field that returns non-null data, +1 point\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4600 - table-methods.md:\n    8  ### Overview of table methods\n    9  \n   10: | method      | based on | description                                                  | comments                                                   |\n   11  | ----------- | -------- | ------------------------------------------------------------ | ---------------------------------------------------------- |\n   12: | NLP Table   | large language models (LLM)s     | Extracts a table based on your prompt to an LLM. | Low code, doesn't require an anchor. Slowest table method. |\n   13  | Fixed Table | layout   | Extracts tables with a fixed number and layout of columns.   | Faster than NLP Table method.                              |\n   14: | Text Table  | layout   | Extracts tables based on column coordinates in inches.       | Fastest table method.                                      |\n   15  \n   16  ### Features supported\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: <skipped 55 characters> ...racting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n    4  ---\n    5  \n    6: As you scale up and encounter document complexity, you can optimize extraction performance by choosing between LLMs or layout-based extraction methods.\n    7  \n    8: See the following diagram for an overview of when to use Sensible Instruct (LLMs) or SenseML (layout-based) for extractions: \n    9  \n   10  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_landscape.png)\n   11  \n   12: Sensible recommends using large language model (LLM) prompts for free-form, highly variable documents, and layout-based, or \"rule-based\" queries for structured, less-variable documents.  You can combine both strategies since they're fully compatible with each other. \n   13  \n   14  See the following table to learn more about extraction strategies:\n   ..\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18  | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19: | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with LLM-based queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   21  \n   22: See the following table for an overview of the pros and cons of LLMs versus layout-based extraction:\n   23  \n   24: |                              | LLM (Sensible Instruct)                                      | layout-based (SenseML)                                       |\n   25  | ---------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   26: | Technical expertise required | For nontechnical users. Describe what you want to extract in a prompt to an LLM.  For example, \"the policy period\" or \"total amount invoiced\". | Offers highly configurable JSON-based extraction configuration for technical users. For example, write instructions in JSON to grab the second cell in a column headed by \"premium.\" |\n   27  | Workflow automation          | Suited to workflows that include human review or that are fault-tolerant. | Suited to automated workflows that require predictable results and validation. |\n   28  | Document variability         | Suited to documents that are unstructured or that have a large number of layout variations or revisions. | Suited to structured documents with a finite number of variations, where you know the layout of the document in advance. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 191 characters> ...to your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n    2  \n    3  \n    4: <skipped 191 characters> ...to your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\n119 matches across 45 files\n\n\nSearching 160 files for \"based\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\batch-api.md:\n   47  \n   48  \n   49: 2. Create  upload URLs for an indexed range of the documents in the batch. Use zero-based indices to upload the documents in the same order that you listed them in the previous step. For example, to upload the two documents in the previous step :\n   50  \n   51  ```curl\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\4000 - validate-extractions.md:\n   11  - If Sensible extracted a field from OCR'd text,  test the confidence score for the field's anchor and value as a measure of the quality of the text images. For example, test that text in a scanned document isn't blurry or illegible.\n   12  \n   13: Then write your own logic based on the validations, for example:\n   14  \n   15  - pass a document extraction automatically through your pipeline if there are no errors and 10% of warning validations fail\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - performance.md:\n   16  \n   17  \n   18: In an ideal performance scenario, you extract data from digitally generated PDFs using text-based or coordinate-based Sensible methods, such as Label, Row, Region, Text Table, and Document Range.\n   19  \n   20  In order of largest to smallest impact, these factors add seconds to the ideal document processing time:\n   ..\n   33  | OCR preprocessor                               | Some documents mix digital text with text images, for example by embedding scanned pages in a digital PDF. Speed this up by OCRing select pages, not the whole document. For more information, see the [OCR preprocessor](doc:ocr). |\n   34  | Fixed Tables with stops,<br/>Nearest Checkbox method | Sensible processes Fixed Tables that include a Stop parameter in less than 5 seconds. Or, convert to the faster [Text Table](doc:text-table) method, which skips table recognition. |\n   35: | LLM-based methods                                    | For methods based on large language models (LLMs), see [Sensible Instruct](doc:instruct) |\n   36  \n   37   **Under 1 second per document**\n   38  \n   39: Some Sensible methods use pixels, for example to recognize borders. Pixel recognition for PDF documents requires rendering a PDF page, which can take hundreds of milliseconds. To improve processing time, use coordinate-based alternatives to these methods. \n   40  \n   41  | Factor                                                       | Notes                                                        |\n   42  | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   43: | Box method                                                   | To improve processing speed, convert the more flexible Box method to the strictly coordinate-based Region method. |\n   44  | Signature method,<br/> Checkbox method,<br/>[image coordinate extraction](doc:document-range) | These methods have no alternatives. See the following section for ways to avoid running these methods except when necessary. |\n   45  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\2000 - zapier-tutorial-2.md:\n    7  This topic describes how to configure an example two-Zap workflow for Zapier. The example workflow extracts data from emailed documents and uploads them as spreadsheets to Google Drive. \n    8  \n    9: You can use the example Zaps in this topic as templates. For example, modify this workflow to trigger extractions based on other file actions in Zapier-support apps (for example, a new document uploaded to Google Drive instead of a new email in Gmail). Or, output to different destinations (for example, a database record instead of spreadsheet files in Google Drive).\n   10  \n   11  Zap 1\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n   96  -----\n   97  \n   98: Sensible converts the JSON extraction output from the [auto_insurance_anyco](https://github.com/sensible-hq/sensible-docs/raw/main/readme-sync/assets/v0/pdfs/auto_insurance_anyco.pdf) example described in the [Getting started with layout-based extractions](doc:getting-started) to the following spreadsheet:\n   99  \n  100  **Spreadsheet output**\n  ...\n  119  **Example configuration**\n  120  \n  121: See the [Getting started with layout-based extractions](doc:getting-started)  for the SenseML configuration for this example.\n  122  \n  123  **JSON output**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n    1  ---\n    2: title: \"Getting started with layout-based extractions\"\n    3  hidden: false\n    4  ---\n    5  \n    6  \n    7: In this tutorial, you'll learn to extract data out of a set of similar documents using a layout-based query language, SenseML. You'll write JSON to tell Sensible about which data to extract from an example document, using what you know about the layout of the document. SenseML uses a mix of techniques, including machine learning, heuristics, and rules, to extract your target information.\n    8  \n    9  You can then save your descriptions as a \"config.\" Publish your config to automate extracting from similar documents.   \n   ..\n   88            {\n   89              /* ask a free-text question.\n   90:            You can author LLM-based queries in Sensible Instruct\n   91             instead of in JSON */\n   92              \"id\": \"bodily_injury_premium\",\n   ..\n  195  - If you want to skip ahead and try out the API or SDKs, see [Integrate with your application](doc:getting-started#integrate-with-your-application). \n  196  \n  197: How layout-based extraction works\n  198  ====\n  199  \n  200: This guide focuses on layout-based document extraction, which works as follows:\n  201  \n  202  - Each \"field\" is a basic query unit in Sensible.  Each field outputs a piece of data from the document that you want to extract. Sensible uses the field `id` as the key in the key/value JSON output. For more information, see [Field](doc:field-query-object).\n  ...\n  206  - Then, Sensible uses a \"method\" to expand its search out from the anchor and extract the data you want. For more information about methods, see [Methods](doc:methods).\n  207  \n  208: This config uses three types of layout-based methods:\n  209  \n  210    | Type of method | explanation                                                  | description                                       |\n  ...\n  215  \n  216  \n  217: This config also uses one large language model (LLM)-based method, to demonstrate that you can combine layout-based and LLM-based methods in the same config:\n  218  \n  219  | Type of method   | explanation                                                  | description                                                  |\n  220  | ---------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  221: | LLM-based | [How it works: query group method](doc:getting-started#how-it-works-query-group-method) | Ask a free-text question about simple information in the document |\n  222  \n  223  How it works: Query Group method\n  ...\n  241            {\n  242              /* ask a free-text question.\n  243:            You can author LLM-based queries in Sensible Instruct\n  244             instead of in JSON */\n  245              \"id\": \"bodily_injury_premium\",\n  ...\n  276  Try it out: change one of the questions to `\"street address for the Anyco insurance company\"` and see what you get. For easy authoring, try out this method in Sensible's [visual authoring tool](doc:instruct).\n  277  \n  278: LLM-based methods such as the Query Group method can run up against limitations with complex document formatting. In such cases, combine LLM-based methods with layout-based methods in the same document extraction configuration. \n  279  \n  280: Let's look next at several simple layout-based methods.\n  281  \n  282  How it works: Label method\n  ...\n  442  **Note:** Sensible extracts the box contents, but not the anchor itself.  By default, Sensible returns method results, not anchor results.\n  443  \n  444: Advanced layout-based queries\n  445  ----\n  446  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\3000 - portfolio.md:\n   38  - **config content:**\n   39  \n   40: The config is the same as the one used in the [Getting started with layout-based extractions](doc:getting-started), with the addition of the following fingerprint:\n   41  \n   42  ```json\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4000 - repeat-layouts.md:\n    4  ---\n    5  \n    6: To extract complex, repeating data from documents, use layout-based sections to break the document into subdocuments. Then extract data from each subdocument with layout- or LLM-based fields. Note that for simpler repeating data, you can use the [List](doc:list) method.\n    7  \n    8  The following images show using sections to enable extracting repeating data in a claims loss run and in a complex table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\2000 - ui.md:\n   38  -----\n   39  \n   40: 7. Click a new configuration to edit the SenseML and extract structured data from the document. For a tutorial, see [Getting started with layout-based extractions](doc:getting-started).\n   41  8. (Optional) Click the **Validations** tab and write [validations](doc:validate-extractions).\n   42  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\3000 - prompt.md:\n   50  | pageHinting                         | boolean. default: true                                       | Configures context's metadata. For details about context and chunks, see the Notes section. <br/>Includes or or removes page metadata for each chunk from the prompt Sensible inputs to an LLM.<br/>F... <skipped 133 characters> ...age numbers, since their relationship to the cards' text is arbitrary.<br/>Applies to each Sensible Instruct field in the config.<br/>For example, removes phrases like `The excerpt starts at the top of page 1 and ends at the bottom of page 1.` | Overrides config-level parameter for a single field. |\n   51  | chunkCount                          | number. default: see each method's [reference topic](doc:Query Group method-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The number of top-scoring chunks Sensible combines as context as part of the full... <skipped 80 characters> ...e config.<br/>Often, chunk count and chunk size are related. For example, if you know that your target data are spread over 7-10 pages, and occupy a small portion of those pages, you can specify a chunk count of 10 and a half-page  chunk size. | Overrides config-level parameter for a single field. |\n   52: | chunkSize                           | `0.5`, `1` default:  see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The size of the chunks Sensible splits the document into, as a page fraction. For example, `0.5` specifies each chunk is half a page.<br/>Applies to each Sensible Instruct field in the config. <br... <skipped 237 characters> ...\n   53: | chunkOverlapPercentage              | `0`, `0.25`, `0.5` default: see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The extent to which chunks overlap, as a percentage of the chunks' height. For example, `0.5` specifies each chunk overlaps by half its height. <br/>Applies to each Sensible Instruct field in the ... <skipped 301 characters> ...\n   54: <skipped 205 characters> ...ction.<br/>If specified, Sensible creates chunks in the page range and ignores other pages. For example, use this parameter to improve performance, or to avoid extracting unwanted data if your prompt has multiple candidate answers.<br/><br/>Contains the following parameters: <br/>`startPage`:  Zero-based index of the page at which Sensible starts creating chunks (inclusive). <br/>`endPage`: Zero-based index of the page at which Sensible stops creating chunks (exclusive).<br/><br/>**Note:** Sensible ignores this parameter when searching for a field's anchor. If you want to exclude the field's anchor from the page range, use the [Page Range](doc:page-range) preprocessor instead.<br/> | Overrides c... <skipped 43 characters> ...\n   55  | (**Deprecated**) promptIntroduction | string                                                       | Deprecated. Overwrites the introductory text at the beginning of the full prompt that Sensible submits to the LLM. |                                                      |\n   56  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\2000 - list-tips.md:\n    3  hidden: false\n    4  ---\n    5: This Sensible Instruct method extracts repeating data in a document based on your description of the list’s overall contents and each individual item. Data such as the work history or skills on a resume, the vehicles on an auto insurance policy, or the line items on an invoice are best suited for this method. \n    6  \n    7  This method is an alternative to the [NLP Table](doc:table-tips) method, when the data you want can appear either as a table or as another layout. The List method can find data in paragraphs of free text or in more structured layouts, such as key/value pairs or tables.  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\3000 - table-tips.md:\n    4  ---\n    5  \n    6: This Sensible Instruct method extracts a table in a document based on your description of the table title and each of its column headers.\n    7  \n    8  **Prompt Tips**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\index.md:\n    4  ---\n    5  \n    6: To extract from documents, describe your target data using Sensible's prompt-authoring environment, *Sensible Instruct*. Sensible Instruct is a large language-model (LLM)-based subset of *SenseML*, Sensible's JSON-based document extraction query language. By combining Sensible Instruct and SenseML, you can extract data from a range of document types, from highly structured business forms to unstructured research documents.\n    7  \n    8  See the following topics for tips on configuring extractions in Sensible Instruct:\n    .\n   17  ====\n   18  \n   19: For layout-based extraction methods, see [methods](doc:methods).\n   20  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n   11  - [Preprocessors](doc:preprocessors)\n   12  - [Methods](doc:methods)\n   13: - [LLM-based methods](doc:llm-based-methods), including LLM-based Sensible Instruct methods. For more information about choosing whether to author configs in either SenseML or Sensible Instruct, see [Choosing an extraction approach](doc:author).\n   14  - [Configuration settings](doc:config-settings)\n   15  - [Computed Field methods](doc:computed-field-methods)\n   ..\n   18  Or, for a getting started tutorial, see:\n   19  \n   20: - [Getting started with layout-based extraction](doc:getting-started)\n   21  \n   22  Examples\n   ..\n   51    ],\n   52    \"fields\": [\n   53:     /* LAYOUT-BASED EXAMPLE */\n   54      {\n   55        \"id\": \"_driver_name_raw\", // ID for extracted target data\n   ..\n   60        }\n   61      },\n   62:     /* LLM-BASED EXAMPLE */\n   63      {\n   64        \"method\": {\n   ..\n  130    There are two broad categories of methods:\n  131  \n  132:   |                         | [LLM-based methods](doc:llm-based-methods)     | Layout-based [methods](doc:methods)                          |\n  133    | ----------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  134    | Notes                   | Ask questions about info in the document, as you'd ask a human. For example, \"what's the policy period\"?  Uses large language models (LLMs). | Find the information in the document using anchoring text and layout data. For example, write instructions to grab the second cell in a column headed by \"premium\". |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   18  | Key                         | Value                                                        | Description                                                  |\n   19  | --------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   20: | `id`                        | see [Methods](doc:methods) and [LLM-based methods](doc:llm-based-methods). | see [Methods](doc:methods) and [LLM-based methods](doc:llm-based-methods). |\n   21: | tiebreaker                  | integer (zero-based index)<br/> or<br/>ordinal (`first`, `second`, `third`, `last`)<br/>or <br/> comparison (`>`, `<`)<br/>or<br/>`join`<br/> Default: `join` | If the method returns multiple elements (for example, a Row method), specifies which element to extract in the returned array. <br/><br/>**integer**: Returns t... <skipped 872 characters> ...\n   22  | lineFilters                 | Match object                                                 | Filters out the specified lines from the method match. For example, if the Box method extracts unwanted footer lines from a box, you can filter out the lines  with this parameter. |\n   23  | typeFilters                 | array of [Types](doc:types)                                  | Filters out the specified types from the method results. For example, for a target box containing a delivery date, a street address, and delivery notes, you can filter out the lines containing Date and Address types in order to extract the delivery notes. Note that less strict types, such as Name and Currency types, are less useful in this filter than stricter types such as the Phone Number type.<br/>For an example, see the Examples section. |\n   ..\n  167  \n  168  - The Text Table method with `\"detectMultipleLinesPerRow\": true` configured.\n  169: - LLM-based methods, such as the NLP Table method.\n  170  \n  171  Try out this example in the Sensible app using the following document and config:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n   45  Address\n   46  ====\n   47: Returns USA-based addresses.  By default, Sensible recognizes  single- or multi-line addresses isolated from other lines in \"block\" format. For example, `\"type\":\"address\"` recognizes address such as:\n   48  \n   49  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/type_address_block.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   50  | Parameter                                                    | Value                                              | Description                                                  |\n   51  | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n   52: <skipped 355 characters> ...the first returns null.<br/>For example, to capture differences in wording between document revisions, define two fields with the same ID, which anchor on synonymous text that 's present or absent in different document revisions. <br/>Or, specify an optional anchor anywhere in a document for an LLM-based field, and fall back to a different field if the anchor isn't present. <br/>Fallback fields can be of any kind. For example, you can fallback from a field, to a computed field, to a section group. Fallbacks don't work across nested structures. For example, you can't fall back from a parent section ... <skipped 49 characters> ...\n   53: | anchor (**required**) except for fields that use [LLM-based methods](doc:llm-based-methods) | object                                             | The anchor identifies one or more lines of text in the document at which Sensible starts executing a method. Can be a string, Match object, or array of Match objects. For more information, see [Anchor object](doc:anchor) and [Match object](doc:match). |\n   54: | method (**required**)                                        | object                                             | The method describes how Sensible expands from the anchor and extracts the target data. For more information, see [Methods](doc:methods), [LLM-based methods](doc:llm-based-methods), and [Method object](doc:method). |\n   55  | type                                                         | see [Types](doc:types)                             | The data type to extract, for example, a currency, an address, or a custom type you define. This structured output includes the type information. If the field captures other data in addition to the data matching the type, Sensible suppresses the additional data from the output. For more information, see [Types](doc:types). |\n   56  | match                                                        | `first`,`last`,`all`, `allWithNull`,`mostFrequent` | If there are multiple anchors, specifies which one to use to extract output. <br/> <br/>- `first`  specifies the first anchor in the document that returns non-null output.<br/><br/>-... <skipped 1023 characters> ... a scanned document repeats a box titled `1 Wages` four times with the same dollar value, `21850.20`. Due to OCR errors, the extracted outputs are `21050.20`, `21850.20`, `21850.20` and `21850.58`.  This option returns the most frequent, and therefore the mostly likely correct output,  `21850.20`. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   22  | offsetY           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page.  For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   23  | offsetBoxes       | object. default: `none`                                      | Recognize a box offset from the point defined in the Position parameter by a number of contiguous boxes that share borders. For example, use this parameter for tables or grids where borders surround every cell. Contains the following parameters:<br/>\\- `direction`: The direction to search in (`above, below, right, left`, relative to the starting box.<br/>\\- `number`: The number of boxes to offset by.<br/>For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   24: <skipped 185 characters> ...s parameter for checkboxes with dark backgrounds relative to the surrounding background.<br/>If the document has a white background, the default value is 0.9.<br/>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document. For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   25  | includeAnchor     | `true`, `false`. default: false                              | If true, includes anchors lines that are inside the box borders in the method output. Ignores anchor lines that are outside box borders. |\n   26  \n   ..\n   31  ----\n   32  \n   33: The following example shows extracting a dollar amount from a box in a 1099 form, based on anchor text matching in the box.\n   34  \n   35  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1100 - checkbox.md:\n   27  | width             | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   28  | height            | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   29: <skipped 113 characters> ...w which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default value based on the amount of contrast in the document.<br/> |\n   30  \n   31  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1400 - fixed-table.md:\n   25  | id (**required**)               | `fixedTable`                                                 | When you specify this, you must also specify `\"type\": \"table\"` in the field's parameters. See the Stop parameter for details about how Sensible recognizes a table. |\n   26  | columnCount (**required**)      | integer                                                      | The number of columns the tables must have.                  |\n   27: | columns (**required**)          | array                                                        | An array of objects with the following parameters: <br/> -`id` (**required**): The ID for the column in the extraction output <br/> - `index` (**required**): The zero-based column index <br/>-`type` : The table cell's type. For more information, see  [Types](doc:types) <br/> -`isRequired` (default: false): If true, Sensible omits a row if its cell is empty in this column, or if the contents don't match the value you specify in this column's Type parameter. If false, S... <skipped 202 characters> ...\n   28  | stop                            | [Match object](doc:match) or array of Match objects. default: none | (**Recommended**)  Stops table recognition at the matched line. Otherwise, Sensible searches all pages for tables, which can impact performance.<br/>When you specify a stop, Sensible  uses an Ama... <skipped 131 characters> ...specify a stop, Sensible supports:<br/>- merged cells in tables. Sensible populates \"empty\" spanned cells with the spanned value. For an example, see [Merged cell example](doc:fixed-table#example-merged-cells).<br/> - checkboxes in cells. Returns checkbox selection status as `[true]` or `[false]`. |\n   29  | startOnRow                      | integer. default: 0                                          | Zero-indexed row number at which to start table extraction. For example, use this to exclude column headings from the output. As a stricter alternative, set the Is Required parameter on a column and set a type on the column (see example in Examples section). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1660 - paragraph.md:\n   80    \"lead_warning_spans_pages\": {\n   81      \"type\": \"string\",\n   82:     \"value\": \"LEAD WARNING STATEMENT: Housing built before 1978 may contain lead-based paint. Lead from paint, paint chips, and dust can pose health hazards if not managed properly. Lead exposure is especially harmful to young children and pregnant women. Before renting a home built before 1978, landlords must disclose the presence of any known lead- based paint and/or lead-based paint hazards in the dwelling. Tenants must also receive a federally approved pamphlet on lead poisoning prevention.\"\n   83    }\n   84  }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1900 - region.md:\n   23  | id                     | value                             | description                                                  |\n   24  | ---------------------- | --------------------------------- | ------------------------------------------------------------ |\n   25: <skipped 163 characters> ... the line's boundary box overlap for at least 90% of either the region *or* the line's width (\"x extent\").<br/> AND<br/> - condition 2: the region and the line's boundary box overlap for at least 80% of either the region *or* the line's height (\"y extent\").<br/><br/> Sensible calculates percentages based on the smaller of the two extents. For example, if the line is less wide than the region, condition 1 is met if the overlap is 90% of the line's width. If the region is less wide than the line, condition 1 is met if the overlap is 90% of the region's width.  The same logic for calculating percentages applies to condition 2. |\n   26  | start (**required**)   | `above`, `below`, `left`, `right` | Defines the starting point for the extraction region relative to the anchor. For example,  `right`  specifies starting at the midpoint of the anchor line's right boundary, and `below` specifies starting at the midpoint of the anchor line's bottom boundary. |\n   27  | offsetX (**required**) | number                            | The horizontal offset in inches from the point defined in the Start parameter to the top left corner of the region. Positive values offset to the right, negative values offset to the left.<br/>You can visually determine this number in the Sensible app by changing the number and watching the green region box resize, or by clicking a point in the document in the Sensible app, then dragging to display inch dimensions. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - text-table.md:\n    3  hidden: false\n    4  ---\n    5: Matches tables based on column coordinates in inches and returns their collated column contents.  Anchor on the table title, or use a negative Offset Y parameter to enable anchoring on a column heading.\n    6  \n    7  This method's advantages are:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\index.md:\n    9  \n   10  \n   11: ## Layout-based methods\n   12  \n   13  | Method                                       | Image                                                        | Notes                                                        |\n   ..\n   30  | **[Text Table](doc:text-table)**             | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/text_table.png) | Extracts tables using solely text-positioning data (fast but limited). |\n   31  \n   32: ## Large language model (LLM)-based methods\n   33  \n   34: See [LLM-based methods](doc:llm-based-methods).\n   35  \n   36  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - list.md:\n   10  \n   11  - Low code. Describe what you want to extract in prompts for a large language model (LLM)\n   12: - Can reformat or filter extracted data based on your prompts. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n  454     2. If you specify Fast for the LLM Engine parameter,  1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. To improve performance, Sensible removes chunks that are significantly less relevant from the list of top-scoring chunks. The number of chunks Sensible sumbits to the LLM can therefore be smaller than the number specified by the Chunk Count parameter.\n  455  3. To avoid large language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers. Sensible batches a maxiumum of 20 page numbers. The chunks in each page group can be non-consecutive in the document.\n  456: <skipped 80 characters> ...the pages' chunks as context, page-hinting data, and your prompts. For information about the LLM model, see the LLM Engine parameter. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to create a list formatted as a table, based on the context.\n  457  5. Sensible concatenates the results from the LLM for each page group and returns a list, formatted as a table.\n  458  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1000 - nlp-table.md:\n    3  hidden: false\n    4  ---\n    5: Extracts a table based on your natural-language description of the data you want to extract. This method can extract tables that span multiple pages.\n    6  \n    7  For tips on authoring this method in Sensible Instruct, see [NLP Table tips](doc:table-tips).\n    .\n   10  \n   11  - Low code. Describe what you want to extract in prompts for a large language model (LLM).\n   12: - Can reformat or filter extracted column data based on your prompts. \n   13  - Doesn't require an [anchor](doc:anchor).\n   14  \n   ..\n  337  \n  338     - Sensible compares the two concatenations using the OpenAI Embeddings API. \n  339: 4. Sensible creates a full prompt for the LLM (GPT-4) that includes the top-scoring table, page hinting data, and your prompts. For more information about the full prompt, see [Advanced prompt configuration](doc:prompt). The full prompt instructs the LLM to restructure the best-scoring table based on your column descriptions and your overall table description. \n  340  6. Sensible returns the restructured table.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\1600 - summarizer.md:\n    3  hidden: false\n    4  ---\n    5: Automatically extracts key/value pairs from short snippets of free text using an LLM (GPT-3.5 Turbo). The Summarizer computed field method takes as input a snippet of free text, and extracts key/value pairs based on instructions or short samples of extracted values you provide. \n    6  \n    7  Example use cases for this method include:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\index.md:\n    1  ---\n    2: title: \"LLM-based methods\"\n    3  hidden: false\n    4  ---\n    5  \n    6: Extract free text from unstructured documents using large language model (LLM)-based SenseML methods. For example, extract information from legal paragraphs in contracts and leases, or results from research papers.\n    7  \n    8: These methods are also low-code alternatives to [layout based methods](doc:methods).  \n    9  \n   10  \n   11: The following topics describe how to author LLM-based methods using the SenseML editor. For information about authoring LLM-based methods using a visual tool instead of JSON, see [Prompt tips](doc:instruct). \n   12  \n   13  | Method                                                       | Example use case                                             | Notes                                                        |\n   ..\n   25  \n   26  \n   27: For layout-based extraction methods, see [methods](doc:methods).\n   28  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1200 - page-range.md:\n   15  | ----------- | ------ | ------------------------------------------------------------ |\n   16  | type      | `pageRange` |                                                   |\n   17: | startPage | number. default: 0 | Zero-based index of the first page (inclusive). |\n   18: | endPage   | number. default: last page | Zero-based index of the last page (exclusive). |\n   19  \n   20   \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1300 - remove-footer.md:\n   20  | -------------- | ------ | ------------------------------------------------------------ |\n   21  | type (**required**) | `removeFooter` | For an example, see the Examples section. |\n   22: | startsOnPage | integer. default: 1 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   23  | match | [Match](doc:match) object or array of Match objects | Bypasses automatic footer recognition.<br/>Removes all text on the page below the bottom boundary of the matched line.<br>If Sensible doesn't find the match, it doesn't perform footer removal. |\n   24  | offsetY | number in inches. default: 0 | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the bottom of the page.<br>If used with the Match parameter, offsets from the bottom boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1400 - remove-header.md:\n   18  | ------------------- | --------------------------------------------------- | ------------------------------------------------------------ |\n   19  | type (**required**) | `removeHeader`                                      | For an example, see the Examples section.                    |\n   20: | startsOnPage        | integer. default: 1                                 | The first page number on which to start checking for repeated elements. Note this is the page *number*, not the page's zero-based index in the pages array. To filter out end pages that lack a repeating element, use the Page Range preprocessor to define an End Page parameter. |\n   21  | match               | [Match](doc:match) object or array of Match objects | Bypasses automatic header recognition.<br/>Removes all text on the page above the top boundary of the matched line.<br/>If Sensible doesn't find the match, it doesn't perform header removal. |\n   22  | offsetY             | number in inches. default: 0                        | Bypasses automatic footer recognition.<br/>Defines a point at which to start text removal. Positive values offset down the page, negative values offset up the page.<br/>If used with no Match parameter defined, offsets from the top of the page.<br/>If used with the Match parameter, offsets from the top boundary of the matched line. <br/> |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n    6  \n    7  \n    8: Corrects the size of text in documents whose size varies, for example as a result of being photographed at different distances. ID cards and receipts are common examples of such documents. This preprocessor enables coordinates-based methods, such as the Region or Text Table methods, to work with such unpredictably scaled documents. For alternatives to this preprocessor, see [Page transformation preprocessors](doc:deskew#notes).\n    9  \n   10  [**Parameters**]( doc:scale#parameters)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\index.md:\n   12  | **[Ligature](doc:ligature)**           | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ligature.png) | Intelligently replaces Unicode ligatures in a text extraction. |\n   13  | **[Merge Lines](doc:merge-lines)**     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/merge_lines_oversplit_1.png) | Corrects oversplit lines.                                    |\n   14: | **[NLP](doc:nlp)**                     |                                                              | Advanced prompt configuration for each large language model (LLM)-based method in a config. |\n   15  | **[OCR](doc:ocr)**                     | ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/thumbnail_ocr.png) | Selectively OCRs pages in documents containing a mix of digitally generated text and text images (such as scanned text). If the whole PDF is a scan, you don't need to configure this preprocessor. |\n   16  | **[Page Filter](doc:page-filter)**     |                                                              | Filters out low-scoring pages given a bag of target terms and stop terms. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1400 - split.md:\n   15  | source_id (**required**) | a field id in the current config | The id of the field to split into substrings.                |\n   16  | separator (**required**) | string                           | The separator to use in the split.                           |\n   17: | index                    | integer                          | The zero-based index of the substring to return after the split. If unspecified, returns all the split substrings as an array. |\n   18  \n   19  Examples\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\1000 - deprecated-key-value.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-based methods](doc:instruct) replace this method.\n    8  \n    9  ## Decription\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2000 - deprecated-tfidf.md:\n    5  ## Deprecated\n    6  \n    7: This method is deprecated. [LLM-based methods](doc:instruct) replace this method.\n    8  \n    9  ## Description\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2100 - deprecated-table.md:\n    9  ## Description\n   10  \n   11: Extracts tables based on bag-of-words scoring and returns their collated column contents. Anchor either on the table title or on a table column heading.\n   12  \n   13   Use the Table method for tables that have variable column formatting.  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1600 - file-types.md:\n   34       - Adds the sheet name as a header on each page.\n   35  - For TIFF documents, SenseML methods that attempt to render pages return an error, including:\n   36:      - pixel-based methods, such as Box, Checkbox, Signature, and image coordinates returned by the Document Range method\n   37       - Key/Value method\n   38       - Fixed Table method with the Stop parameter specified. Use the Text Table method as an alternative.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3600 - section-nuances.md:\n   37  \n   38  1. (one time) Finds the section group's range in which to recognize columns using Match and Stop lines. A range can span pages.\n   39: 2. (repeats) Recognizes columns inside the range, based on whitespace gutters and searching left-to-right. If non-columnar text is present in the range, it can affect column recognition as follows:\n   40  \n   41     - If there's a Stop parameter, Sensible adds the non-column text to each column. Each column then has a nonlinear, irregular shape. For example, this allows each column to use a table title that spans multiple columns as an anchor. \n   ..\n   83  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/vertical_section_column_selection.png)\n   84  \n   85: As steps 2 and 3 in the previous image illustrate, the varying gap sizes between columns in each section mean that you can't use coordinate-based methods such as the Region method for fields in these sections.\n   86  \n   87  For more information about this example, see [Labeled rows and labeled columns table example](doc:sections-example-labeled-rows)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4500 - draft-senseml-order.md:\n    4  ---\n    5  \n    6: this draft is on hold, based on team meeting onboarding slides from aug 2022 as well as notion docs for onboarding devs. publish if there's an audience need for it (hasn't really come up)\n    7  \n    8  \n    .\n  101  Determine the best extraction, which is the one Sensible returns data from.\n  102  \n  103: Score each configuration's extraction based on how much data it found, and its [validations](doc:validate-extractions):\n  104  \n  105  - For each field that returns non-null data, +1 point\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4600 - table-methods.md:\n    8  ### Overview of table methods\n    9  \n   10: | method      | based on | description                                                  | comments                                                   |\n   11  | ----------- | -------- | ------------------------------------------------------------ | ---------------------------------------------------------- |\n   12: | NLP Table   | large language models (LLM)s     | Extracts a table based on your prompt to an LLM. | Low code, doesn't require an anchor. Slowest table method. |\n   13  | Fixed Table | layout   | Extracts tables with a fixed number and layout of columns.   | Faster than NLP Table method.                              |\n   14: | Text Table  | layout   | Extracts tables based on column coordinates in inches.       | Fastest table method.                                      |\n   15  \n   16  ### Features supported\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\2000 - getting-started-ai.md:\n    6  ## Overview\n    7  \n    8: <skipped 55 characters> ...racting structured data from documents, for example, business forms in PDF format. It's highly configurable: you can get simple data in minutes by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful layout-based document primitives.\n    9  \n   10  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n    4  ---\n    5  \n    6: As you scale up and encounter document complexity, you can optimize extraction performance by choosing between LLMs or layout-based extraction methods.\n    7  \n    8: See the following diagram for an overview of when to use Sensible Instruct (LLMs) or SenseML (layout-based) for extractions: \n    9  \n   10  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/document_landscape.png)\n   11  \n   12: Sensible recommends using large language model (LLM) prompts for free-form, highly variable documents, and layout-based, or \"rule-based\" queries for structured, less-variable documents.  You can combine both strategies since they're fully compatible with each other. \n   13  \n   14  See the following table to learn more about extraction strategies:\n   ..\n   17  | ----------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   18  | LLMs              | You describe the document data that you want to extract, using Sensible's visual authoring tool, *Sensible Instruct*. Sensible uses GPT-4 and other large language models (LLMs) to extract data from your documents. | [Getting started](doc:getting-started-ai)                    |\n   19: | layout-based      | To extract from complex document layouts, use *SenseML*, a superset of Sensible Instruct. SenseML is a JSON-formatted query language that combines layout-based queries with LLM-based queries. When either strategy can work, Sensible recommends layout-based queries for the sake of fast performance and deterministic output. | [Getting started with layout-based extractions](doc:getting-started) |\n   20  | out-of-the-box    | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. | [Getting started with out-of-the-box extractions](doc:library-quickstart) |\n   21  \n   22: See the following table for an overview of the pros and cons of LLMs versus layout-based extraction:\n   23  \n   24: |                              | LLM (Sensible Instruct)                                      | layout-based (SenseML)                                       |\n   25  | ---------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   26: | Technical expertise required | For nontechnical users. Describe what you want to extract in a prompt to an LLM.  For example, \"the policy period\" or \"total amount invoiced\". | Offers highly configurable JSON-based extraction configuration for technical users. For example, write instructions in JSON to grab the second cell in a column headed by \"premium.\" |\n   27  | Workflow automation          | Suited to workflows that include human review or that are fault-tolerant. | Suited to automated workflows that require predictable results and validation. |\n   28  | Document variability         | Suited to documents that are unstructured or that have a large number of layout variations or revisions. | Suited to structured documents with a finite number of variations, where you know the layout of the document in advance. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n    2  # Sensible Node SDK\n    3  \n    4: <skipped 191 characters> ...to your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-api-py\\README.md:\n    2  \n    3  \n    4: <skipped 191 characters> ...to your SaaS products. Sensible is highly configurable: you can get simple data [in minutes](https://docs.sensible.so/docs/getting-started-ai) by leveraging GPT-4 and other large-language models (LLMs), or you can tackle complex and idiosyncratic document formatting with Sensible's powerful [layout-based document primitives](https://docs.sensible.so/docs/getting-started).\n    5  \n    6  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/intro_SDK_2.png)\n\n119 matches across 45 files\n\n\nSearching 160 files for \"method-method\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\3000 - prompt.md:\n   49  | contextDescription                  | string. default: `The below context is an excerpt from a document.` | Configures context's metadata. For details about context and chunks, see the Notes section.<br/>Overwrites the default context description.<br/>Applies to each Sensible Instruct field in the... <skipped 78 characters> ...ed index card that contains botanical information about a single plant species, including phenology information.`<br/>\\- `The below context is an excerpt from an email. Assume the sender is always an automated system from an insurance broker.` | Overrides config-level parameter for a single field. |\n   50  | pageHinting                         | boolean. default: true                                       | Configures context's metadata. For details about context and chunks, see the Notes section. <br/>Includes or or removes page metadata for each chunk from the prompt Sensible inputs to an LLM.<br/>F... <skipped 133 characters> ...age numbers, since their relationship to the cards' text is arbitrary.<br/>Applies to each Sensible Instruct field in the config.<br/>For example, removes phrases like `The excerpt starts at the top of page 1 and ends at the bottom of page 1.` | Overrides config-level parameter for a single field. |\n   51: | chunkCount                          | number. default: see each method's [reference topic](doc:Query Group method-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The number of top-scoring chunks Sensible combines as context as part of the full prompt it submits to an LLM. <br/>Applies to each Sensible Instruct field in the config.<br/>Often, chunk count and chunk... <skipped 258 characters> ...\n   52  | chunkSize                           | `0.5`, `1` default:  see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The size of the chunks Sensible splits the document into, as a page fraction. For exam... <skipped 47 characters> ...<br/>Applies to each Sensible Instruct field in the config. <br/>Often, chunk count and chunk size are related. For example, if you know that the data you seek is contained in one cover page, you can set chunk size to 1 and a chunk count to 1. | Overrides config-level parameter for a single field. |\n   53  | chunkOverlapPercentage              | `0`, `0.25`, `0.5` default: see each method's [reference topic](doc:llm-based-methods) | Configures context's size. For details about context and chunks, see the Notes section.<br/>The extent to which chunks overlap, as a percentage of the chunks' height. For ... <skipped 118 characters> ...onfig. <br/>Sensible recommends setting a non-zero overlap to avoid splitting data across chunks. Set overlap to 0 solely if you're confident that your document layout doesn't flow across page boundaries and you're using a one-page chunk size. | Overrides config-level parameter for a single field. |\n\n1 match in 1 file\n\n\nSearching 160 files for \"Query Group method-methods\" (regex)\n\n0 matches\n\nSearching 160 files for \"language-\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\llm-based extractions\\instruct\\index.md:\n    4  ---\n    5  \n    6: To extract from documents, describe your target data using Sensible's prompt-authoring environment, *Sensible Instruct*. Sensible Instruct is a large language-model (LLM)-based subset of *SenseML*, Sensible's JSON-based document extraction query language. By combining Sensible Instruct and SenseML, you can extract data from a range of document types, from highly structured business forms to unstructured research documents.\n    7  \n    8  See the following topics for tips on configuring extractions in Sensible Instruct:\n\n1 match in 1 file\n\n\nSearching 160 files for \"are also\" (regex)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - natural-language-methods\\index.md:\n    6  Extract free text from unstructured documents using large language model (LLM)-based SenseML methods. For example, extract information from legal paragraphs in contracts and leases, or results from research papers.\n    7  \n    8: These methods are also low-code alternatives to [layout based methods](doc:methods).  \n    9  \n   10  \n\n1 match in 1 file\n\n\nSearching 160 files for \"layout based\" (regex)\n\n0 matches\n\nSearching 160 files for \"layout based\"\n\n0 matches\n\nSearching 161 files for \"\"all\"\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\4000 - quick-extraction\\7600 - excel-reference.md:\n  158  \n  159  - the [table methods](doc:table-methods), invoices, and other methods that output nested JSON objects.\n  160: - methods that output arrays of unpredictable length, for example, fields with `\"match\":\"all\"` configured.\n  161  \n  162  Example\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  448  \n  449  - The limits listed in the table are tricky for the Row method to capture since they can be a variable number of lines. Row methods depend on strict horizontal alignment of lines, so Sensible extracts the first line. Instead, use the [NLP Table method](doc:nlp-table) to more reliably capture the data in each cell of the whole table. \n  450: - What if the document listed emails, and you wanted to capture all those emails? You could use a regular expression (regex) in a `\"match\":\"all\"` anchor coupled with a [Passthrough method](doc:passthrough), or the [Regex method](doc:regex).\n  451  - You can split the policy period into two dates, either by using the [Split computed field method](doc:split), or by setting the [Date](doc:types#date) type on the field and using a tiebreaker.\n  452  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1100 - match.md:\n  216        /* to show matching behavior, output all matching\n  217           anchor lines, not just the first match */\n  218:       \"match\": \"all\",\n  219        \"method\": {\n  220          /* to show matching behavior, use passthrough\n  ...\n  239                   but NOT \"should not\" */\n  240                {\n  241:                 \"type\": \"all\",\n  242                  \"matches\": [\n  243                    {\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1700 - passthrough.md:\n   31      {\n   32        \"id\": \"forms_with_4_numbers\",\n   33:       \"match\": \"all\",\n   34        \"anchor\": {\n   35          \"start\": {\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1450 - scale.md:\n   53        \"id\": \"white_house_tenure\",\n   54        \"anchor\": \"tenure\",\n   55:       \"match\": \"all\",\n   56        \"method\": {\n   57          \"id\": \"region\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1350 - pick-values.md:\n   89        \"method\": {\n   90          \"id\": \"pickValues\",\n   91:         \"match\": \"all\",\n   92          \"value\": \"yes\",\n   93          \"source_ids\": [\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\1500 - zip.md:\n    5  Zips one of the following:\n    6  \n    7: - Zips the output of array source fields into an array of objects. Each source field must output an array, for example, as a result of configuring `\"match\": \"all\"` or `\"type\": \"name\"` for the field. \n    8  - Zips the output of a single [table method](doc:table-methods) into row objects. Or, use this to zip multiple tables together.\n    9  - Zips the output of [sections](doc:sections) into an array of objects.\n   ..\n   17  | :------------------------- | :--------------------------------------- | :----------------------------------------------------------- |\n   18  | id (**required**)          | `zip`                                    |                                                              |\n   19: <skipped 976 characters> ... <br/><br/>-  If the output of the source IDs are arrays, the Zip method joins them up to their maximum shared length. For example, if you zip arrays that have 4, 5, and 6 elements respectively, the zipped array has 4 elements. Examples of source IDs that output arrays include fields with `\"match\": \"all\"` configured, and section groups. To ensure the longest source array isn't shortened when using `\"match\": \"all\"`, instead use  `\"match\":\"allWithNull\"` for all source fields. For an example, see the Examples section. <br/> |\n   20  \n   21  Examples\n   ..\n  189  ---\n  190  \n  191: The following example shows using `\"match\":\"allWithNull\"` as an alternative to [sections](doc:sections) to return parallel arrays of phones and last names. If you used `\"match\":\"all\"` instead of `allWithNull`, the missing phone number for claimant Badawi would result in that claimant's omission from the zipped `name_and_phone` array.\n  192  \n  193  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\1000 - sections-example-loss-run.md:\n   26        with match all (simpler alternative to sections) */\n   27        \"id\": \"monthly_total_unprocessed_claims\",\n   28:       \"match\": \"all\",\n   29        \"anchor\": {\n   30          \"match\": {\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\9000 - sections-example-copy-to-section.md:\n   36        with match all (simpler alternative to sections) */\n   37        \"id\": \"monthly_total_unprocessed_claims\",\n   38:       \"match\": \"all\",\n   39        \"anchor\": {\n   40          \"match\": {\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7000 - deprecated-methods\\2000 - deprecated-tfidf.md:\n   72  ====\n   73  \n   74: The following example classifies the items on a restaurant menu. For the sake of concise syntax, the two source fields use `\"match\":\"all\"` to return arrays, and the TFIDF computed fields return classifications as parallel arrays to the input arrays.\n   75  \n   76  **Config**\n   ..\n   81      {\n   82        \"id\": \"dinner_specials\",\n   83:       \"match\": \"all\",\n   84        \"anchor\": {\n   85          \"start\": {\n   ..\n  102      {\n  103        \"id\": \"dessert_specials\",\n  104:       \"match\": \"all\",\n  105        \"anchor\": {\n  106          \"start\": {\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0400 - anchor-nuances.md:\n  108      {\n  109        \"id\": \"match_array\",\n  110:       \"match\": \"all\",\n  111        \"anchor\": {\n  112          \"match\": [\n  ...\n  127      {\n  128        \"id\": \"start_and_match\",\n  129:       \"match\": \"all\",\n  130        \"anchor\": {\n  131          \"start\": {\n\n18 matches across 11 files\n",
			"settings":
			{
				"buffer_size": 210928,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "",
			"file": "v0/senseml-reference/3000 - natural-language-methods/index.md",
			"file_size": 2044,
			"file_write_time": 133554298172409756,
			"settings":
			{
				"buffer_size": 0,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					6,
					2,
					"left_delete",
					null,
					"AgAAABwBAAAAAAAAHAEAAAAAAAAEAAAAYWxzbxsBAAAAAAAAGwEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAAoBAAAAAAAACgEAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAACwEAAAAAAAALAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "For"
					},
					"AwAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA0BAAAAAAAADgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQEAAAAAAAANAQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "structured"
					},
					"CgAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " documents,"
					},
					"CwAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACEBAAAAAAAAAAAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAjAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwEAAAAAAAAjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " example"
					},
					"CAAAACcBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAAC0BAAAAAAAAAAAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " tax"
					},
					"BAAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwEAAAAAAAAvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " documents,"
					},
					"CwAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADkBAAAAAAAAAAAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwEAAAAAAAAzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAD4BAAAAAAAAPwEAAAAAAAAAAAAAPwEAAAAAAABAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgEAAAAAAAA+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "These"
					},
					"BQAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " methods"
					},
					"CAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " can"
					},
					"BAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " also"
					},
					"BQAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwEAAAAAAAAbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " extract"
					},
					"CAAAACABAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAEAAAAAAAAgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgBAAAAAAAAKQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAEAAAAAAAAoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "from"
					},
					"BAAAACkBAAAAAAAAKgEAAAAAAAAAAAAAKgEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0BAAAAAAAALgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAC4BAAAAAAAALgEAAAAAAAAEAAAARm9yIA",
					"AQAAAAAAAAABAAAALgEAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					4,
					"left_delete",
					null,
					"BAAAAA4BAAAAAAAADgEAAAAAAABSAAAAZSBtZXRob2RzIGNhbiBhbHNvIGV4dHJhY3QgZnJvbSBzdHJ1Y3R1cmVkIGRvY3VtZW50cywgZm9yIGV4YW1wbGUgdGF4IGRvY3VtZW50cywgdA0BAAAAAAAADQEAAAAAAAABAAAAcwwBAAAAAAAADAEAAAAAAAABAAAAZQsBAAAAAAAACwEAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAYAEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAADwBAAAAAAAAPAEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAPQEAAAAAAAA9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAADwBAAAAAAAAPQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAEAAAAAAAA8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAFgBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABaAQAAAAAAAAAAAABaAQAAAAAAAFsBAAAAAAAAAAAAAFsBAAAAAAAAXAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAEAAAAAAABYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFwBAAAAAAAAXQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAEAAAAAAABcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "structured"
					},
					"CgAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAABfAQAAAAAAAGABAAAAAAAAAAAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAABiAQAAAAAAAGMBAAAAAAAAAAAAAGMBAAAAAAAAZAEAAAAAAAAAAAAAZAEAAAAAAABlAQAAAAAAAAAAAABlAQAAAAAAAGYBAAAAAAAAAAAAAGYBAAAAAAAAZwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQEAAAAAAABdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " documents"
					},
					"CgAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAABpAQAAAAAAAGoBAAAAAAAAAAAAAGoBAAAAAAAAawEAAAAAAAAAAAAAawEAAAAAAABsAQAAAAAAAAAAAABsAQAAAAAAAG0BAAAAAAAAAAAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAbgEAAAAAAABvAQAAAAAAAAAAAABvAQAAAAAAAHABAAAAAAAAAAAAAHABAAAAAAAAcQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHEBAAAAAAAAcgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQEAAAAAAABxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAHIBAAAAAAAAcwEAAAAAAAAAAAAAcwEAAAAAAAB0AQAAAAAAAAAAAAB0AQAAAAAAAHUBAAAAAAAAAAAAAHUBAAAAAAAAdgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgEAAAAAAAByAQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " example,"
					},
					"CQAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAHkBAAAAAAAAegEAAAAAAAAAAAAAegEAAAAAAAB7AQAAAAAAAAAAAAB7AQAAAAAAAHwBAAAAAAAAAAAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB+AQAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " tax"
					},
					"BAAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAACBAQAAAAAAAIIBAAAAAAAAAAAAAIIBAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwEAAAAAAAB/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " documents"
					},
					"CgAAAIMBAAAAAAAAhAEAAAAAAAAAAAAAhAEAAAAAAACFAQAAAAAAAAAAAACFAQAAAAAAAIYBAAAAAAAAAAAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAACLAQAAAAAAAIwBAAAAAAAAAAAAAIwBAAAAAAAAjQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAACPAQAAAAAAAJABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " insurance"
					},
					"CgAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAEAAAAAAACQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " forms"
					},
					"BgAAAJoBAAAAAAAAmwEAAAAAAAAAAAAAmwEAAAAAAACcAQAAAAAAAAAAAACcAQAAAAAAAJ0BAAAAAAAAAAAAAJ0BAAAAAAAAngEAAAAAAAAAAAAAngEAAAAAAACfAQAAAAAAAAAAAACfAQAAAAAAAKABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADhBwAALS0tCnRpdGxlOiAiTExNLWJhc2VkIG1ldGhvZHMiCmhpZGRlbjogZmFsc2UKLS0tCgpFeHRyYWN0IGZyZWUgdGV4dCBmcm9tIHVuc3RydWN0dXJlZCBkb2N1bWVudHMgdXNpbmcgbGFyZ2UgbGFuZ3VhZ2UgbW9kZWwgKExMTSktYmFzZWQgU2Vuc2VNTCBtZXRob2RzLiBGb3IgZXhhbXBsZSwgZXh0cmFjdCBpbmZvcm1hdGlvbiBmcm9tIGxlZ2FsIHBhcmFncmFwaHMgaW4gY29udHJhY3RzIGFuZCBsZWFzZXMsIG9yIHJlc3VsdHMgZnJvbSByZXNlYXJjaCBwYXBlcnMuCgpUaGVzZSBtZXRob2RzIGFyZSBsb3ctY29kZSBhbHRlcm5hdGl2ZXMgdG8gW2xheW91dC1iYXNlZCBtZXRob2RzXShkb2M6bWV0aG9kcykgZm9yIHN0cnVjdHVyZWQgZG9jdW1lbnRzLCBmb3IgZXhhbXBsZSwgdGF4IGRvY3VtZW50cyBvciBpbnN1cmFuY2UgZm9ybXMuICAKCgpUaGUgZm9sbG93aW5nIHRvcGljcyBkZXNjcmliZSBob3cgdG8gYXV0aG9yIExMTS1iYXNlZCBtZXRob2RzIHVzaW5nIHRoZSBTZW5zZU1MIGVkaXRvci4gRm9yIGluZm9ybWF0aW9uIGFib3V0IGF1dGhvcmluZyBMTE0tYmFzZWQgbWV0aG9kcyB1c2luZyBhIHZpc3VhbCB0b29sIGluc3RlYWQgb2YgSlNPTiwgc2VlIFtQcm9tcHQgdGlwc10oZG9jOmluc3RydWN0KS4gCgp8IE1ldGhvZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEV4YW1wbGUgdXNlIGNhc2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IE5vdGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwKfCBbTGlzdF0oZG9jOmxpc3QpIG1ldGhvZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAiRm9yIGVhY2ggdmVoaWNsZSBpbiBhbiBhdXRvIGluc3VyYW5jZSBkZWNsYXJhdGlvbiwgZXh0cmFjdCB0aGUgVklOLCBtb2RlbCwgYW5kIHllYXIuIiB8IEV4dHJhY3RzIGEgbGlzdCBvZiBkYXRhIG91dCBvZiBhIGRvY3VtZW50LCB3aGVyZSB5b3UgZG9uJ3Qga25vdyBob3cgdGhlIGRhdGEgYXJlIHJlcHJlc2VudGVkLiB8CnwgW05MUCBUYWJsZV0oZG9jOm5scC10YWJsZSkgbWV0aG9kICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIkZvciBlYWNoIHRyYW5zYWN0aW9uIGluIGEgYmFuayBzdGF0ZW1lbnQgdGFibGUsIGV4dHJhY3QgdGhlIGRhdGUgYW5kIGFtb3VudC4iIHwgRXh0cmFjdHMgYSBsaXN0IG9mIGRhdGEgb3V0IG9mIGEgZG9jdW1lbnQsIHdoZXJlIHlvdSBrbm93IHRoZXkncmUgaW4gYSB0YWJsZS4gfAp8IFtRdWVyeSBHcm91cF0oZG9jOnF1ZXJ5LWdyb3VwKSBtZXRob2QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICJXaGVuIGRvZXMgdGhlIHBvbGljeSBwZXJpb2QgZW5kPyI8YnIvPiJXaGF0IGFyZSB0aGUgbGFzdCA0IG51bWJlcnMgb2YgdGhlIGFjY291bnQ/IiB8IEV4dHJhY3RzIGEgc2luZ2xlIGZhY3Qgb3IgZGF0YSBwb2ludC4gICAgICAgICAgICAgICAgICAgICAgICB8CnwgW1N1bW1hcml6ZXJdKGRvYzpzdW1tYXJpemVyKSBjb21wdXRlZCBmaWVsZCBtZXRob2QgKyBbVG9waWNdKGRvYzp0b3BpYykgbWV0aG9kIHwgImxpc3QgdGhlIHJlbnRzLCBob3cgb2Z0ZW4gdGhlIHJlbnQgbXVzdCBiZSBwYWlkLCBhbmQgd2hlbiB0aGUgcmVudCBpcyBkdWUiIHwgTW9yZSBjb25maWd1cmFibGUgYWx0ZXJuYXRpdmUgdG8gdGhlIExpc3QgbWV0aG9kLiAgICAgICAgICAgIHwKCgoKTm90ZXMKPT09PQoKCgpGb3IgbGF5b3V0LWJhc2VkIGV4dHJhY3Rpb24gbWV0aG9kcywgc2VlIFttZXRob2RzXShkb2M6bWV0aG9kcykuCgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQIAAAAAAABZAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/llm-based extractions/instruct/index.md",
			"settings":
			{
				"buffer_size": 1585,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAMoAAAAAAAAAygAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAxBgAALS0tCnRpdGxlOiAiUHJvbXB0IHRpcHMiCmhpZGRlbjogZmFsc2UKLS0tCgpUbyBleHRyYWN0IGZyb20gZG9jdW1lbnRzLCBkZXNjcmliZSB5b3VyIHRhcmdldCBkYXRhIHVzaW5nIFNlbnNpYmxlJ3MgcHJvbXB0LWF1dGhvcmluZyBlbnZpcm9ubWVudCwgKlNlbnNpYmxlIEluc3RydWN0Ki4gU2Vuc2libGUgSW5zdHJ1Y3QgaXMgYSBsYXJnZSBsYW5ndWFnZSBtb2RlbCAoTExNKS1iYXNlZCBzdWJzZXQgb2YgKlNlbnNlTUwqLCBTZW5zaWJsZSdzIEpTT04tYmFzZWQgZG9jdW1lbnQgZXh0cmFjdGlvbiBxdWVyeSBsYW5ndWFnZS4gQnkgY29tYmluaW5nIFNlbnNpYmxlIEluc3RydWN0IGFuZCBTZW5zZU1MLCB5b3UgY2FuIGV4dHJhY3QgZGF0YSBmcm9tIGEgcmFuZ2Ugb2YgZG9jdW1lbnQgdHlwZXMsIGZyb20gaGlnaGx5IHN0cnVjdHVyZWQgYnVzaW5lc3MgZm9ybXMgdG8gdW5zdHJ1Y3R1cmVkIHJlc2VhcmNoIGRvY3VtZW50cy4KClNlZSB0aGUgZm9sbG93aW5nIHRvcGljcyBmb3IgdGlwcyBvbiBjb25maWd1cmluZyBleHRyYWN0aW9ucyBpbiBTZW5zaWJsZSBJbnN0cnVjdDoKCnwgTWV0aG9kICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEV4YW1wbGUgdXNlIGNhc2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IE5vdGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8CnwgW0xpc3RdKGRvYzpsaXN0LXRpcHMpIG1ldGhvZCAgICAgICB8IEZvciBlYWNoIHZlaGljbGUgaW4gYW4gYXV0byBpbnN1cmFuY2UgZGVjbGFyYXRpb24sIGV4dHJhY3QgdGhlIFZJTiwgbW9kZWwsIGFuZCB5ZWFyLiB8IEV4dHJhY3RzIGEgbGlzdCBvZiBkYXRhIG91dCBvZiBhIGRvY3VtZW50LCB3aGVyZSB5b3UgZG9uJ3Qga25vdyBob3cgdGhlIGRhdGEgYXJlIHJlcHJlc2VudGVkLiB8CnwgW05MUCBUYWJsZV0oZG9jOnRhYmxlLXRpcHMpIG1ldGhvZCB8IEZvciBlYWNoIHRyYW5zYWN0aW9uIGluIGEgYmFuayBzdGF0ZW1lbnQgdGFibGUsIGV4dHJhY3QgdGhlIGRhdGUgYW5kIGFtb3VudC4gfCBFeHRyYWN0cyBhIGxpc3Qgb2YgZGF0YSBvdXQgb2YgYSBkb2N1bWVudCwgd2hlcmUgeW91IGtub3cgdGhleSdyZSBpbiBhIHRhYmxlLiB8CnwgW1F1ZXJ5IEdyb3VwXShkb2M6cXVlcnktZ3JvdXAtdGlwcykgbWV0aG9kICAgICB8ICJXaGVuIGRvZXMgdGhlIHBvbGljeSBwZXJpb2QgZW5kPyI8YnIvPiJXaGF0IGFyZSB0aGUgbGFzdCA0IG51bWJlcnMgb2YgdGhlIGFjY291bnQ/IiB8IEV4dHJhY3RzIGEgc2luZ2xlIGZhY3Qgb3IgZGF0YSBwb2ludC4gICAgICAgICAgICAgICAgICAgICAgICB8CgpOb3Rlcwo9PT09CgpGb3IgbGF5b3V0LWJhc2VkIGV4dHJhY3Rpb24gbWV0aG9kcywgc2VlIFttZXRob2RzXShkb2M6bWV0aG9kcykuCgAAAAAAAAAAMQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/llm-based extractions/3000 - prompt.md",
			"settings":
			{
				"buffer_size": 9725,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"cut",
					null,
					"AQAAAOcWAAAAAAAA5xYAAAAAAAAaAAAAUXVlcnkgR3JvdXAgbWV0aG9kLW1ldGhvZHM",
					"AQAAAAAAAAABAAAA5xYAAAAAAAABFwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "llmpba"
					},
					"BgAAAOcWAAAAAAAA6BYAAAAAAAAAAAAA6BYAAAAAAADpFgAAAAAAAAAAAADpFgAAAAAAAOoWAAAAAAAAAAAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAADsFgAAAAAAAO0WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xYAAAAAAADnFgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					3,
					"left_delete",
					null,
					"AwAAAOwWAAAAAAAA7BYAAAAAAAABAAAAYesWAAAAAAAA6xYAAAAAAAABAAAAYuoWAAAAAAAA6hYAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "-based-methods"
					},
					"DgAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAADsFgAAAAAAAO0WAAAAAAAAAAAAAO0WAAAAAAAA7hYAAAAAAAAAAAAA7hYAAAAAAADvFgAAAAAAAAAAAADvFgAAAAAAAPAWAAAAAAAAAAAAAPAWAAAAAAAA8RYAAAAAAAAAAAAA8RYAAAAAAADyFgAAAAAAAAAAAADyFgAAAAAAAPMWAAAAAAAAAAAAAPMWAAAAAAAA9BYAAAAAAAAAAAAA9BYAAAAAAAD1FgAAAAAAAAAAAAD1FgAAAAAAAPYWAAAAAAAAAAAAAPYWAAAAAAAA9xYAAAAAAAAAAAAA9xYAAAAAAAD4FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAYhgAAAAAAABiGAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/best-practices/5000 - guides/1000 - performance.md",
			"settings":
			{
				"buffer_size": 3752,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACoDgAALS0tCnRpdGxlOiAiT3B0aW1pemluZyBleHRyYWN0aW9uIHBlcmZvcm1hbmNlIgpoaWRkZW46IGZhbHNlCgotLS0KClRvIGltcHJvdmUgZXh0cmFjdGlvbiBwZXJmb3JtYW5jZSwgeW91IGNhbiBvcHRpbWl6ZToKCi0gZG9jdW1lbnQgcGVyZm9ybWFuY2UKLSBkb2N1bWVudCB0eXBlIHBlcmZvcm1hbmNlCgpOb3RlIHRoYXQgdGhlIG51bWJlciBvZiBkb2N1bWVudHMgeW91IHN1Ym1pdCBmb3IgZXh0cmFjdGlvbiBoYXMgbm8gbm90aWNlYWJsZSBlZmZlY3Qgb24gcGVyZm9ybWFuY2UuIEVhY2ggZG9jdW1lbnQgZ2V0cyBpdHMgb3duIHdvcmtlciBpbiBwYXJhbGxlbC4KCkRvY3VtZW50IHBlcmZvcm1hbmNlCi0tLS0KCgpJbiBhbiBpZGVhbCBwZXJmb3JtYW5jZSBzY2VuYXJpbywgeW91IGV4dHJhY3QgZGF0YSBmcm9tIGRpZ2l0YWxseSBnZW5lcmF0ZWQgUERGcyB1c2luZyB0ZXh0LWJhc2VkIG9yIGNvb3JkaW5hdGUtYmFzZWQgU2Vuc2libGUgbWV0aG9kcywgc3VjaCBhcyBMYWJlbCwgUm93LCBSZWdpb24sIFRleHQgVGFibGUsIGFuZCBEb2N1bWVudCBSYW5nZS4KCkluIG9yZGVyIG9mIGxhcmdlc3QgdG8gc21hbGxlc3QgaW1wYWN0LCB0aGVzZSBmYWN0b3JzIGFkZCBzZWNvbmRzIHRvIHRoZSBpZGVhbCBkb2N1bWVudCBwcm9jZXNzaW5nIHRpbWU6CgoqKk92ZXIgMTAgc2Vjb25kcyBwZXIgZG9jdW1lbnQqKgoKfCBGYWN0b3IgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBOb3RlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8Cnwgd2hvbGUtZG9jdW1lbnQgT0NSIGZvciBkb2N1bWVudCBpbWFnZXMgfCBTZW5zaWJsZSB0YWtlcyAxMCBzZWNvbmRzIG9yIG1vcmUgdG8gT0NSIGFuIGVudGlyZSBkb2N1bWVudC4gWW91IGNhbiBzcGVlZCBPQ1IgdXAgZm9yIGRvY3VtZW50cyB0aGF0IGFyZSAyNSBwYWdlcyBhbmQgc2hvcnRlciBieSBjaG9vc2luZyBTZW5zaWJsZSdzIEdvb2dsZSBPQ1Igb3B0aW9uIGZvciBhIGRvY3VtZW50IHR5cGUuIHwKfCB3aG9sZS1kb2N1bWVudCB0YWJsZSByZWNvZ25pdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBBdm9pZCBjb25maWd1cmluZyBTZW5zaWJsZSB0byBzZWFyY2ggYSB3aG9sZSBkb2N1bWVudCBmb3IgdGFibGVzLiBJbnN0ZWFkLCBjb25maWd1cmUgYSB0YWJsZSBzdG9wLiBGb3IgZXhhbXBsZXMsIHNlZSBhbnkgb2YgdGhlIHRhYmxlIFttZXRob2RzXShkb2M6dGFibGUtbWV0aG9kcykuIHwKCiAqKlVuZGVyIDUgc2Vjb25kcyBwZXIgZG9jdW1lbnQqKgoKfCBGYWN0b3IgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgTm90ZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwKfCBPQ1IgcHJlcHJvY2Vzc29yICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgU29tZSBkb2N1bWVudHMgbWl4IGRpZ2l0YWwgdGV4dCB3aXRoIHRleHQgaW1hZ2VzLCBmb3IgZXhhbXBsZSBieSBlbWJlZGRpbmcgc2Nhbm5lZCBwYWdlcyBpbiBhIGRpZ2l0YWwgUERGLiBTcGVlZCB0aGlzIHVwIGJ5IE9DUmluZyBzZWxlY3QgcGFnZXMsIG5vdCB0aGUgd2hvbGUgZG9jdW1lbnQuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtPQ1IgcHJlcHJvY2Vzc29yXShkb2M6b2NyKS4gfAp8IEZpeGVkIFRhYmxlcyB3aXRoIHN0b3BzLDxici8+TmVhcmVzdCBDaGVja2JveCBtZXRob2QgfCBTZW5zaWJsZSBwcm9jZXNzZXMgRml4ZWQgVGFibGVzIHRoYXQgaW5jbHVkZSBhIFN0b3AgcGFyYW1ldGVyIGluIGxlc3MgdGhhbiA1IHNlY29uZHMuIE9yLCBjb252ZXJ0IHRvIHRoZSBmYXN0ZXIgW1RleHQgVGFibGVdKGRvYzp0ZXh0LXRhYmxlKSBtZXRob2QsIHdoaWNoIHNraXBzIHRhYmxlIHJlY29nbml0aW9uLiB8CnwgTExNLWJhc2VkIG1ldGhvZHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEZvciBtZXRob2RzIGJhc2VkIG9uIGxhcmdlIGxhbmd1YWdlIG1vZGVscyAoTExNcyksIHNlZSBbU2Vuc2libGUgSW5zdHJ1Y3RdKGRvYzppbnN0cnVjdCkgfAoKICoqVW5kZXIgMSBzZWNvbmQgcGVyIGRvY3VtZW50KioKClNvbWUgU2Vuc2libGUgbWV0aG9kcyB1c2UgcGl4ZWxzLCBmb3IgZXhhbXBsZSB0byByZWNvZ25pemUgYm9yZGVycy4gUGl4ZWwgcmVjb2duaXRpb24gZm9yIFBERiBkb2N1bWVudHMgcmVxdWlyZXMgcmVuZGVyaW5nIGEgUERGIHBhZ2UsIHdoaWNoIGNhbiB0YWtlIGh1bmRyZWRzIG9mIG1pbGxpc2Vjb25kcy4gVG8gaW1wcm92ZSBwcm9jZXNzaW5nIHRpbWUsIHVzZSBjb29yZGluYXRlLWJhc2VkIGFsdGVybmF0aXZlcyB0byB0aGVzZSBtZXRob2RzLiAKCnwgRmFjdG9yICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgTm90ZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAp8IEJveCBtZXRob2QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFRvIGltcHJvdmUgcHJvY2Vzc2luZyBzcGVlZCwgY29udmVydCB0aGUgbW9yZSBmbGV4aWJsZSBCb3ggbWV0aG9kIHRvIHRoZSBzdHJpY3RseSBjb29yZGluYXRlLWJhc2VkIFJlZ2lvbiBtZXRob2QuIHwKfCBTaWduYXR1cmUgbWV0aG9kLDxici8+IENoZWNrYm94IG1ldGhvZCw8YnIvPltpbWFnZSBjb29yZGluYXRlIGV4dHJhY3Rpb25dKGRvYzpkb2N1bWVudC1yYW5nZSkgfCBUaGVzZSBtZXRob2RzIGhhdmUgbm8gYWx0ZXJuYXRpdmVzLiBTZWUgdGhlIGZvbGxvd2luZyBzZWN0aW9uIGZvciB3YXlzIHRvIGF2b2lkIHJ1bm5pbmcgdGhlc2UgbWV0aG9kcyBleGNlcHQgd2hlbiBuZWNlc3NhcnkuIHwKCkRvY3VtZW50IHR5cGUgcGVyZm9ybWFuY2UKLS0tLQoKCkJ5IGRlZmF1bHQsIFNlbnNpYmxlIHJ1bnMgYWxsIHRoZSBjb25maWdzIGluIGEgZG9jdW1lbnQgdHlwZSBiZWZvcmUgY2hvb3NpbmcgdGhlIGJlc3Qgb25lIGZvciBhIGdpdmVuIGRvY3VtZW50LiBJZiB5b3VyIGRvY3VtZW50IHR5cGUgY29udGFpbnMgY29uZmlncyB3aXRoIGNvbXB1dGF0aW9uYWxseSBleHBlbnNpdmUgbWV0aG9kcywgeW91IGNhbiBpbXByb3ZlIHBlcmZvcm1hbmNlIGJ5IHNlbGVjdGl2ZWx5IHJ1bm5pbmcgYW5kIHNraXBwaW5nIGNvbmZpZ3MuICBVc2UgZmluZ2VycHJpbnRzIHRvIHRlc3Qgd2hldGhlciBkb2N1bWVudHMgY29udGFpbiBtYXRjaGluZyB0ZXh0IGJlZm9yZSBza2lwcGluZyBvciBydW5uaW5nIGNvbmZpZ3MuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgW2ZpbmdlcnByaW50XShkb2M6ZmluZ2VycHJpbnQpLgoAAAAAAAAAAKgOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwgAAAAAAACPCAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ui:",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js",
		"/C/Users/franc/Documents/GitHub/sensible-api-py"
	],
	"file_history":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/00 - draft-overview.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/2000 - getting-started-ai.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/0300 - accuracy-measures.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1500 - deprecated-query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - query-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1300 - types.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/1000 - senseml-reference-introduction.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/3000 - prompt.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/1000 - getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1200 - method.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/3000 - confidence.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2000 - deprecated-tfidf.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1000 - deprecated-key-value.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1100 - page-filter.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/2000 - topic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1500 - invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - performance.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/6000 - author.md",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/4600 - table-methods.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1600 - summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0700 - get-file-metadata.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/4000 - ocr-level.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/6000 - sections-example-table-grid.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/4000 - sections-example-nested-columns.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/1000 - zapier-getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/3000 - go-live.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/2000 - troubleshoot.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - test-before-integrating-configs.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6700 - config-settings/2000 - verbosity.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/2000 - list-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1400 - fixed-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0100 - add-computed-fields.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/cheat/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6000 - computed-field-methods/1500 - zip.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2200 - text-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2000 - row.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/3000 - table-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/7600 - excel-reference.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/1000 - query-group-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - draft-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/1000 - query-tips.md",
		"/C/Users/franc/Documents/GitHub/bekindtoyourspine/CNAME",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
		"/C/Users/franc/Downloads/for the following table represented in json,",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1060 - nlp.md",
		"/C/Users/franc/Downloads/bal",
		"/C/Users/franc/Downloads/balasdf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/1000 - fingerprint-mode.md",
		"/C/Users/franc/Downloads/asdfasdf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1100 - match.md",
		"/C/Users/franc/Downloads/fdas.yaml",
		"/C/Users/franc/Documents/GitHub/sensible/.git/info/exclude",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/assets/v0/json/verbose_extraction_3_verbosity.json",
		"/C/Users/franc/Pictures/greenshot pics/2023-12-15 12_52_16-Franco Fontana _ Basilicata (1986) _ Available for Sale _ Artsy.png",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/node/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/3000 - integrate.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/2000 - library-quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_configuration.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links/check_links.rb",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/check_links.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/4000 - validate-extractions.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/1000 - api-tutorial-sync.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1000 - anchor.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/3600 - section-nuances.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1300 - document-range.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/3000 - quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/README.md",
		"/?wsl.localhost/Ubuntu-20.04/home/franc/sensible-typescript/extract_dir_1_excel.mjs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/draft-python.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/5000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/draft_python.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/extract_doc.py",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/sdk-quickstarts.md",
		"/C/ProgramData/Vanta/vanta.conf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-node-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/write-prompts/instruct/1000 - query-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-javascript-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-javascript.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-javascript.md"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 125.6,
		"where_history":
		[
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"<open files>",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\, C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0; C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\"all\"",
			"layout based",
			"are also",
			"language-",
			"Query Group method-methods",
			"method-method",
			"based",
			"power",
			"powered",
			"LLM-powered",
			"powered",
			"large-language",
			"signature",
			"paragraph",
			"large-language",
			"doc:methods#",
			"methods#",
			"large-lan",
			"nlp [^t]",
			"nlp ^[t]",
			"nlp",
			"llm",
			"natural",
			"llm-based-methods",
			"[Natural-language methods](doc:llm-based-methods)",
			"llm-based-methods",
			"llm-based",
			"[NLP methods](doc:llm-based-methods)",
			"[Natural language methods](doc:llm-based-methods)",
			"doc:llm-based-methods",
			"doc:natural-language-methods",
			"natural-language",
			"or query",
			"natural-language",
			"natural language",
			"natural-language",
			"api",
			"`document_name` p",
			"API",
			"sdk",
			"API",
			"zapier.com",
			"retrocedant",
			"doc:tf",
			"deprecate",
			"doc:regex",
			"doc:signature",
			"doc:key-value",
			"key-value",
			"key-balue",
			"advanced-methods",
			"\"fixedTable",
			"fixedTable",
			"\"not\"",
			"annotateS",
			"detectTableStructureOnly",
			"doc\\:table",
			"doc\\:table^-",
			"doc:table#",
			"doc:table)",
			"doc:table",
			"table",
			"Table",
			"fixed-table_merged_cells.pdf",
			"\\\"id\\\"\\: \\\"table\\\"",
			"process",
			"sensible process ",
			"\"id\": \"table\"",
			"\"id\": \"ta",
			"\"table\"",
			"Table",
			"query-tips",
			"(doc:query",
			"(query",
			"query-tips",
			"pagehin",
			"page hinting",
			"Query",
			"query",
			"Query method",
			"(doc:query#",
			"[Query](doc:query#",
			"doc:query#",
			"doc:query",
			"(doc:query-group-tips",
			"(doc:query-tips",
			"(query-tips",
			"(query",
			"[query",
			"(doc:query-tips)",
			"[Query](doc:query-tips)",
			"(doc:query-tips)",
			"(doc:query)",
			"Query method",
			"[Query method](doc:query)",
			"[Query](doc:query)",
			"\"query\"",
			"column id",
			"2do",
			"todo",
			"annotate",
			"line-sort",
			"2do",
			"todo",
			"tips",
			"fingerprint.*50",
			"orange",
			"the filename in the extraction re",
			"producer",
			"filename",
			"gas_dec",
			"accord_25_test",
			"rate_confirmation_ch",
			"file t",
			"docx",
			"micros",
			"thorough",
			"range_2",
			"extraction history",
			"filter",
			"prompt intro",
			"promptint",
			"deprecated",
			"introduction",
			"readingOrderLeft",
			"\"type\": \"table\"",
			"\"type\":\"table\"",
			"left side"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"LLM-based",
			"large language",
			"[LLM-based methods](doc:llm-based-methods)",
			"doc:llm-based-methods",
			"Query Group method",
			"(doc:query-group#",
			"[Query Group](doc:query-group#",
			"[Query Group](doc:query-group-tips)",
			"[Query Group](doc:query-group)",
			"model",
			"insurer",
			"**Publish configuration**",
			"from sensibleapi",
			"index.py",
			"Python",
			"size and types",
			"https://github.com/sensible-hq/sensible-api-js#readme",
			"Node",
			"node",
			"-node",
			"node",
			"Node",
			"node",
			"doc:config-settings"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 210928,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "",
								"scope": ""
							}
						},
						"selection":
						[
							[
								207595,
								207595
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 43,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 103938.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "v0/senseml-reference/3000 - natural-language-methods/index.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "v0/llm-based extractions/instruct/index.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1585,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								203
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "v0/llm-based extractions/3000 - prompt.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9725,
						"regions":
						{
						},
						"selection":
						[
							[
								6242,
								6242
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1631.2,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "v0/best-practices/5000 - guides/1000 - performance.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3752,
						"regions":
						{
						},
						"selection":
						[
							[
								2191,
								2191
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 531.2,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "f_project.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 257.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 285.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
