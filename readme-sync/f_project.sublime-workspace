{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "asdf"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					4,
					"left_delete",
					null,
					"BAAAAAMAAAAAAAAAAwAAAAAAAAABAAAAZgIAAAAAAAAAAgAAAAAAAAABAAAAZAEAAAAAAAAAAQAAAAAAAAABAAAAcwAAAAAAAAAAAAAAAAAAAAABAAAAYQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
			"settings":
			{
				"buffer_size": 1926645,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA6cAAAAAAAAD5wAAAAAAAAAAAAAD5wAAAAAAAAdnAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADpwAAAAAAAAOnAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAABucAAAAAAAAbpwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAG5wAAAAAAAAbnAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					6,
					"left_delete",
					null,
					"BgAAACWcAAAAAAAAJZwAAAAAAAACAAAAICAjnAAAAAAAACOcAAAAAAAAAgAAACAgIZwAAAAAAAAhnAAAAAAAAAIAAAAgIB+cAAAAAAAAH5wAAAAAAAACAAAAICAdnAAAAAAAAB2cAAAAAAAAAgAAACAgG5wAAAAAAAAbnAAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJ5wAAAAAAAAnnAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "document_n"
					},
					"CwAAABucAAAAAAAAHJwAAAAAAAAAAAAAHJwAAAAAAAAcnAAAAAAAAAsAAABlbnZpcm9ubWVudBycAAAAAAAAHZwAAAAAAAAAAAAAHZwAAAAAAAAenAAAAAAAAAAAAAAenAAAAAAAAB+cAAAAAAAAAAAAAB+cAAAAAAAAIJwAAAAAAAAAAAAAIJwAAAAAAAAhnAAAAAAAAAAAAAAhnAAAAAAAACKcAAAAAAAAAAAAACKcAAAAAAAAI5wAAAAAAAAAAAAAI5wAAAAAAAAknAAAAAAAAAAAAAAknAAAAAAAACWcAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAG5wAAAAAAAAmnAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "ame"
					},
					"AwAAACWcAAAAAAAAJpwAAAAAAAAAAAAAJpwAAAAAAAAnnAAAAAAAAAAAAAAnnAAAAAAAACicAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJZwAAAAAAAAlnAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "DocumentName"
					},
					"DQAAAFScAAAAAAAAVZwAAAAAAAAAAAAAVZwAAAAAAABVnAAAAAAAAA8AAABFbnZpcm9ubWVudE5hbWVVnAAAAAAAAFacAAAAAAAAAAAAAFacAAAAAAAAV5wAAAAAAAAAAAAAV5wAAAAAAABYnAAAAAAAAAAAAABYnAAAAAAAAFmcAAAAAAAAAAAAAFmcAAAAAAAAWpwAAAAAAAAAAAAAWpwAAAAAAABbnAAAAAAAAAAAAABbnAAAAAAAAFycAAAAAAAAAAAAAFycAAAAAAAAXZwAAAAAAAAAAAAAXZwAAAAAAABenAAAAAAAAAAAAABenAAAAAAAAF+cAAAAAAAAAAAAAF+cAAAAAAAAYJwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVJwAAAAAAABjnAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC+wAAAAAAAAMLAAAAAAAAAAAAAAMLAAAAAAAAA8sAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAL7AAAAAAAAAvsAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"paste",
					null,
					"AQAAAC+wAAAAAAAAgbAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAL7AAAAAAAAAvsAAAAAAAAAAAAAAAYGFA"
				],
				[
					133,
					7,
					"left_delete",
					null,
					"BwAAADuwAAAAAAAAO7AAAAAAAAALAAAAZW52aXJvbm1lbnQ5sAAAAAAAADmwAAAAAAAAAgAAACAgN7AAAAAAAAA3sAAAAAAAAAIAAAAgIDWwAAAAAAAANbAAAAAAAAACAAAAICAzsAAAAAAAADOwAAAAAAAAAgAAACAgMbAAAAAAAAAxsAAAAAAAAAIAAAAgIC+wAAAAAAAAL7AAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAO7AAAAAAAABGsAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "document"
					},
					"CAAAAC+wAAAAAAAAMLAAAAAAAAAAAAAAMLAAAAAAAAAxsAAAAAAAAAAAAAAxsAAAAAAAADKwAAAAAAAAAAAAADKwAAAAAAAAM7AAAAAAAAAAAAAAM7AAAAAAAAA0sAAAAAAAAAAAAAA0sAAAAAAAADWwAAAAAAAAAAAAADWwAAAAAAAANrAAAAAAAAAAAAAANrAAAAAAAAA3sAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAL7AAAAAAAAAvsAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "_name"
					},
					"BQAAADewAAAAAAAAOLAAAAAAAAAAAAAAOLAAAAAAAAA5sAAAAAAAAAAAAAA5sAAAAAAAADqwAAAAAAAAAAAAADqwAAAAAAAAO7AAAAAAAAAAAAAAO7AAAAAAAAA8sAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAN7AAAAAAAAA3sAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "DocumentName"
					},
					"DQAAAGiwAAAAAAAAabAAAAAAAAAAAAAAabAAAAAAAABpsAAAAAAAAA8AAABFbnZpcm9ubWVudE5hbWVpsAAAAAAAAGqwAAAAAAAAAAAAAGqwAAAAAAAAa7AAAAAAAAAAAAAAa7AAAAAAAABssAAAAAAAAAAAAABssAAAAAAAAG2wAAAAAAAAAAAAAG2wAAAAAAAAbrAAAAAAAAAAAAAAbrAAAAAAAABvsAAAAAAAAAAAAABvsAAAAAAAAHCwAAAAAAAAAAAAAHCwAAAAAAAAcbAAAAAAAAAAAAAAcbAAAAAAAABysAAAAAAAAAAAAABysAAAAAAAAHOwAAAAAAAAAAAAAHOwAAAAAAAAdLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaLAAAAAAAAB3sAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB6uAAAAAAAAH64AAAAAAAAAAAAAH64AAAAAAAArrgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHq4AAAAAAAAergAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": "documet"
					},
					"BwAAAB6uAAAAAAAAH64AAAAAAAAAAAAAH64AAAAAAAAgrgAAAAAAAAAAAAAgrgAAAAAAACGuAAAAAAAAAAAAACGuAAAAAAAAIq4AAAAAAAAAAAAAIq4AAAAAAAAjrgAAAAAAAAAAAAAjrgAAAAAAACSuAAAAAAAAAAAAACSuAAAAAAAAJa4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHq4AAAAAAAAergAAAAAAAAAAAAAAYGFA"
				],
				[
					295,
					7,
					"left_delete",
					null,
					"BwAAACSuAAAAAAAAJK4AAAAAAAABAAAAdCOuAAAAAAAAI64AAAAAAAABAAAAZSKuAAAAAAAAIq4AAAAAAAABAAAAbSGuAAAAAAAAIa4AAAAAAAABAAAAdSCuAAAAAAAAIK4AAAAAAAABAAAAYx+uAAAAAAAAH64AAAAAAAABAAAAbx6uAAAAAAAAHq4AAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJa4AAAAAAAAlrgAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "document_name:"
					},
					"DgAAAB6uAAAAAAAAH64AAAAAAAAAAAAAH64AAAAAAAAgrgAAAAAAAAAAAAAgrgAAAAAAACGuAAAAAAAAAAAAACGuAAAAAAAAIq4AAAAAAAAAAAAAIq4AAAAAAAAjrgAAAAAAAAAAAAAjrgAAAAAAACSuAAAAAAAAAAAAACSuAAAAAAAAJa4AAAAAAAAAAAAAJa4AAAAAAAAmrgAAAAAAAAAAAAAmrgAAAAAAACeuAAAAAAAAAAAAACeuAAAAAAAAKK4AAAAAAAAAAAAAKK4AAAAAAAAprgAAAAAAAAAAAAAprgAAAAAAACquAAAAAAAAAAAAACquAAAAAAAAK64AAAAAAAAAAAAAK64AAAAAAAAsrgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHq4AAAAAAAAergAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACyuAAAAAAAALa4AAAAAAAAAAAAALa4AAAAAAAA5rgAAAAAAAAAAAAA5rgAAAAAAADuuAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALK4AAAAAAAAsrgAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAADuuAAAAAAAAPK4AAAAAAAAAAAAAPK4AAAAAAAA9rgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAO64AAAAAAAA7rgAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAADuuAAAAAAAAO64AAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPa4AAAAAAAA9rgAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"paste",
					null,
					"AQAAADuuAAAAAAAAa64AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAO64AAAAAAAA7rgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "DocumentName"
					},
					"DQAAAFeuAAAAAAAAWK4AAAAAAAAAAAAAWK4AAAAAAABYrgAAAAAAABMAAABFeHRyYWN0aW9uQ29tcGxldGVkWK4AAAAAAABZrgAAAAAAAAAAAABZrgAAAAAAAFquAAAAAAAAAAAAAFquAAAAAAAAW64AAAAAAAAAAAAAW64AAAAAAABcrgAAAAAAAAAAAABcrgAAAAAAAF2uAAAAAAAAAAAAAF2uAAAAAAAAXq4AAAAAAAAAAAAAXq4AAAAAAABfrgAAAAAAAAAAAABfrgAAAAAAAGCuAAAAAAAAAAAAAGCuAAAAAAAAYa4AAAAAAAAAAAAAYa4AAAAAAABirgAAAAAAAAAAAABirgAAAAAAAGOuAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAV64AAAAAAABqrgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABKuAAAAAAAAE64AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEq4AAAAAAAASrgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"paste",
					null,
					"AQAAABKuAAAAAAAAX64AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEq4AAAAAAAASrgAAAAAAAAAAAAAAAAAA"
				],
				[
					324,
					4,
					"left_delete",
					null,
					"BAAAACmuAAAAAAAAKa4AAAAAAAABAAAAbSiuAAAAAAAAKK4AAAAAAAABAAAAYSeuAAAAAAAAJ64AAAAAAAABAAAAbiauAAAAAAAAJq4AAAAAAAABAAAAXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKq4AAAAAAAAqrgAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					9,
					"left_delete",
					null,
					"CQAAACauAAAAAAAAJq4AAAAAAAABAAAAZSWuAAAAAAAAJa4AAAAAAAABAAAAdCSuAAAAAAAAJK4AAAAAAAABAAAAbiOuAAAAAAAAI64AAAAAAAABAAAAZSKuAAAAAAAAIq4AAAAAAAABAAAAbSGuAAAAAAAAIa4AAAAAAAABAAAAdSCuAAAAAAAAIK4AAAAAAAABAAAAYx+uAAAAAAAAH64AAAAAAAABAAAAbx6uAAAAAAAAHq4AAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJ64AAAAAAAAnrgAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": "environment"
					},
					"CwAAAB6uAAAAAAAAH64AAAAAAAAAAAAAH64AAAAAAAAgrgAAAAAAAAAAAAAgrgAAAAAAACGuAAAAAAAAAAAAACGuAAAAAAAAIq4AAAAAAAAAAAAAIq4AAAAAAAAjrgAAAAAAAAAAAAAjrgAAAAAAACSuAAAAAAAAAAAAACSuAAAAAAAAJa4AAAAAAAAAAAAAJa4AAAAAAAAmrgAAAAAAAAAAAAAmrgAAAAAAACeuAAAAAAAAAAAAACeuAAAAAAAAKK4AAAAAAAAAAAAAKK4AAAAAAAAprgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHq4AAAAAAAAergAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "Environment"
					},
					"DAAAAFWuAAAAAAAAVq4AAAAAAAAAAAAAVq4AAAAAAABWrgAAAAAAAAgAAABEb2N1bWVudFauAAAAAAAAV64AAAAAAAAAAAAAV64AAAAAAABYrgAAAAAAAAAAAABYrgAAAAAAAFmuAAAAAAAAAAAAAFmuAAAAAAAAWq4AAAAAAAAAAAAAWq4AAAAAAABbrgAAAAAAAAAAAABbrgAAAAAAAFyuAAAAAAAAAAAAAFyuAAAAAAAAXa4AAAAAAAAAAAAAXa4AAAAAAABergAAAAAAAAAAAABergAAAAAAAF+uAAAAAAAAAAAAAF+uAAAAAAAAYK4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVa4AAAAAAABdrgAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"left_delete",
					null,
					"AQAAAF+uAAAAAAAAX64AAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYK4AAAAAAABgrgAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAF+uAAAAAAAAYK4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAX64AAAAAAABfrgAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert_completion",
					{
						"completion": "EnvironmentName",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "EnvironmentName"
					},
					"AgAAAFWuAAAAAAAAVa4AAAAAAAALAAAARW52aXJvbm1lbnRVrgAAAAAAAGSuAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYK4AAAAAAABgrgAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAGSuAAAAAAAAZa4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZK4AAAAAAABkrgAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "sy"
					},
					"AgAAAN0DAAAAAAAA3gMAAAAAAAAAAAAA3gMAAAAAAADfAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3QMAAAAAAADdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					3,
					"left_delete",
					null,
					"AwAAAN4DAAAAAAAA3gMAAAAAAAABAAAAed0DAAAAAAAA3QMAAAAAAAABAAAAc9wDAAAAAAAA3AMAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3wMAAAAAAADfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwDAAAAAAAA3QMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AMAAAAAAADcAwAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoDAAAAAAAAqwMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgMAAAAAAACqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsDAAAAAAAArQMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwMAAAAAAACrAwAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "sync"
					},
					"BAAAAKwDAAAAAAAArQMAAAAAAAAAAAAArQMAAAAAAACuAwAAAAAAAAAAAACuAwAAAAAAAK8DAAAAAAAAAAAAAK8DAAAAAAAAsAMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArAMAAAAAAACsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"cut",
					null,
					"AQAAAFWYAAAAAAAAVZgAAAAAAAA7AQAAICAgIERvY3VtZW50TmFtZToKICAgICAgdHlwZTogc3RyaW5nCiAgICAgIGRlc2NyaXB0aW9uOiA+LQogICAgICAgIElmIHlvdSBzcGVjaWZ5IHRoZSBmaWxlbmFtZSBvZiB0aGUgZG9jdW1lbnQgdXNpbmcgdGhlIGBkb2N1bWVudF9uYW1lYCBwYXJhbWV0ZXIsIHRoZW4gCiAgICAgICAgU2Vuc2libGUgZGlzcGxheXMgdGhlIG5hbWUgaW4gZXh0cmFjdGlvbiBoaXN0b3J5IGluIHRoZSBTZW5zaWJsZSBhcHAgCiAgICAgICAgYW5kIHJldHVybnMgdGhlIG5hbWUgaW4gdGhlIGV4dHJhY3Rpb24gcmVzcG9uc2UuCiAgICAgIGV4YW1wbGU6IGV4YW1wbGUucGRm",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkJkAAAAAAABVmAAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHubAAAAAAAAfJsAAAAAAAAAAAAAfJsAAAAAAAB9mwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAe5sAAAAAAAB7mwAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"paste",
					null,
					"AQAAAHubAAAAAAAAtpwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAe5sAAAAAAAB7mwAAAAAAAAAAAAAAAAAA"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACybAAAAAAAALZsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALJsAAAAAAAAsmwAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIybAAAAAAAAjZsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjJsAAAAAAACMmwAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMKuAAAAAAAAw64AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwq4AAAAAAADCrgAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACexAAAAAAAAKLEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJ7EAAAAAAAAnsQAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": "Name"
					},
					"BQAAACObAAAAAAAAJJsAAAAAAAAAAAAAJJsAAAAAAAAkmwAAAAAAAAoAAAB1bWVudE5hbWUxJJsAAAAAAAAlmwAAAAAAAAAAAAAlmwAAAAAAACabAAAAAAAAAAAAACabAAAAAAAAJ5sAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAI5sAAAAAAAAtmwAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					10,
					"left_delete",
					null,
					"CgAAAIabAAAAAAAAhpsAAAAAAAABAAAAMYWbAAAAAAAAhZsAAAAAAAABAAAAZYSbAAAAAAAAhJsAAAAAAAABAAAAbYObAAAAAAAAg5sAAAAAAAABAAAAYYKbAAAAAAAAgpsAAAAAAAABAAAAToGbAAAAAAAAgZsAAAAAAAABAAAAdICbAAAAAAAAgJsAAAAAAAABAAAAbn+bAAAAAAAAf5sAAAAAAAABAAAAZX6bAAAAAAAAfpsAAAAAAAABAAAAbX2bAAAAAAAAfZsAAAAAAAABAAAAdQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAh5sAAAAAAACHmwAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": "Name"
					},
					"BAAAAH2bAAAAAAAAfpsAAAAAAAAAAAAAfpsAAAAAAAB/mwAAAAAAAAAAAAB/mwAAAAAAAICbAAAAAAAAAAAAAICbAAAAAAAAgZsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfZsAAAAAAAB9mwAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"left_delete",
					null,
					"AQAAAKquAAAAAAAAqq4AAAAAAAANAAAARG9jdW1lbnROYW1lMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqq4AAAAAAAC3rgAAAAAAAAAAAAAAAPC/"
				],
				[
					576,
					1,
					"insert",
					{
						"characters": "DocName"
					},
					"BwAAAKquAAAAAAAAq64AAAAAAAAAAAAAq64AAAAAAACsrgAAAAAAAAAAAACsrgAAAAAAAK2uAAAAAAAAAAAAAK2uAAAAAAAArq4AAAAAAAAAAAAArq4AAAAAAACvrgAAAAAAAAAAAACvrgAAAAAAALCuAAAAAAAAAAAAALCuAAAAAAAAsa4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqq4AAAAAAACqrgAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					10,
					"left_delete",
					null,
					"CgAAABWxAAAAAAAAFbEAAAAAAAABAAAAMRSxAAAAAAAAFLEAAAAAAAABAAAAZROxAAAAAAAAE7EAAAAAAAABAAAAbRKxAAAAAAAAErEAAAAAAAABAAAAYRGxAAAAAAAAEbEAAAAAAAABAAAAThCxAAAAAAAAELEAAAAAAAABAAAAdA+xAAAAAAAAD7EAAAAAAAABAAAAbg6xAAAAAAAADrEAAAAAAAABAAAAZQ2xAAAAAAAADbEAAAAAAAABAAAAbQyxAAAAAAAADLEAAAAAAAABAAAAdQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFrEAAAAAAAAWsQAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "Name'"
					},
					"BQAAAAyxAAAAAAAADbEAAAAAAAAAAAAADbEAAAAAAAAOsQAAAAAAAAAAAAAOsQAAAAAAAA+xAAAAAAAAAAAAAA+xAAAAAAAAELEAAAAAAAAAAAAAELEAAAAAAAARsQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADLEAAAAAAAAMsQAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": "DocName"
					},
					"CAAAAAO6AAAAAAAABLoAAAAAAAAAAAAABLoAAAAAAAAEugAAAAAAAAwAAABEb2N1bWVudE5hbWUEugAAAAAAAAW6AAAAAAAAAAAAAAW6AAAAAAAABroAAAAAAAAAAAAABroAAAAAAAAHugAAAAAAAAAAAAAHugAAAAAAAAi6AAAAAAAAAAAAAAi6AAAAAAAACboAAAAAAAAAAAAACboAAAAAAAAKugAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAA7oAAAAAAAAPugAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/franc/Documents/GitHub/test-docs/mint.json",
			"settings":
			{
				"buffer_size": 3552,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAKAFAAAAAAAAoAUAAAAAAACdAAAAewogICAgICAgICAgICAgICAgImdyb3VwIjogIk5lc3RlZCBSZWZlcmVuY2UgUGFnZXMiLAogICAgICAgICAgICAgICAgInBhZ2VzIjogWyJsYXlvdXQtYmFzZWQtZXh0cmFjdGlvbnMvbmVzdC9tdWx0aS1kb2N1bWVudC1leHRyYWN0aW9ucyJdCiAgICAgICAgICAgICAgICAgfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoAUAAAAAAAA9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					2,
					"left_delete",
					null,
					"AgAAAJ4FAAAAAAAAngUAAAAAAAACAAAAICCcBQAAAAAAAJwFAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoAUAAAAAAACgBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_configuration.yml",
			"redo_stack":
			[
				[
					241,
					1,
					"left_delete",
					null,
					"AgAAAK9pAAAAAAAAsGkAAAAAAAAAAAAAsGkAAAAAAADTaQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAr2kAAAAAAACvaQAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"left_delete",
					null,
					"AQAAAH9pAAAAAAAAgWkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAf2kAAAAAAAB/aQAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"left_delete",
					null,
					"AgAAAHZpAAAAAAAAd2kAAAAAAAAAAAAAd2kAAAAAAACfaQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdmkAAAAAAAB2aQAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"left_delete",
					null,
					"AQAAANppAAAAAAAA3mkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2mkAAAAAAADaaQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": " #Get"
					},
					"BQAAAN1pAAAAAAAA3WkAAAAAAAABAAAAdNxpAAAAAAAA3GkAAAAAAAABAAAAZdtpAAAAAAAA22kAAAAAAAABAAAAR9ppAAAAAAAA2mkAAAAAAAABAAAAI9lpAAAAAAAA2WkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3mkAAAAAAADeaQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "          "
					},
					"CgAAAKlpAAAAAAAAqWkAAAAAAAABAAAAIKhpAAAAAAAAqGkAAAAAAAABAAAAIKdpAAAAAAAAp2kAAAAAAAABAAAAIKZpAAAAAAAApmkAAAAAAAABAAAAIKVpAAAAAAAApWkAAAAAAAABAAAAIKRpAAAAAAAApGkAAAAAAAABAAAAIKNpAAAAAAAAo2kAAAAAAAABAAAAIKJpAAAAAAAAomkAAAAAAAABAAAAIKFpAAAAAAAAoWkAAAAAAAABAAAAIKBpAAAAAAAAoGkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqmkAAAAAAACqaQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"paste",
					null,
					"AgAAAM9pAAAAAAAALmsAAAAAAAAAAAAAoGkAAAAAAACgaQAAAAAAAC8AAAAkcmVmOiAnIy9jb21wb25lbnRzL3NjaGVtYXMvRG9jdW1lbnRUeXBlT3V0cHV0Jw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAz2kAAAAAAADPaQAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 51601,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					87,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHVqAAAAAAAAdmoAAAAAAAAAAAAAdmoAAAAAAAB+agAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdWoAAAAAAAB1agAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAADRqAAAAAAAANGoAAAAAAAABAAAAIw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANWoAAAAAAAA1agAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAAElqAAAAAAAASWoAAAAAAAABAAAAIw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASmoAAAAAAABKagAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"paste",
					null,
					"AQAAAHNqAAAAAAAAhWoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAc2oAAAAAAABzagAAAAAAAAAAAAAAYGFA"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHNqAAAAAAAAdGoAAAAAAAAAAAAAdGoAAAAAAAB8agAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAc2oAAAAAAABzagAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "  schema:"
					},
					"CQAAAHNqAAAAAAAAdGoAAAAAAAAAAAAAdGoAAAAAAAB1agAAAAAAAAAAAAB1agAAAAAAAHZqAAAAAAAAAAAAAHZqAAAAAAAAd2oAAAAAAAAAAAAAd2oAAAAAAAB4agAAAAAAAAAAAAB4agAAAAAAAHlqAAAAAAAAAAAAAHlqAAAAAAAAemoAAAAAAAAAAAAAemoAAAAAAAB7agAAAAAAAAAAAAB7agAAAAAAAHxqAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAc2oAAAAAAABzagAAAAAAAAAAAAAAAFdA"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHxqAAAAAAAAfWoAAAAAAAAAAAAAfWoAAAAAAACHagAAAAAAAAAAAACHagAAAAAAAIlqAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfGoAAAAAAAB8agAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"paste",
					null,
					"AQAAAIlqAAAAAAAAqmoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiWoAAAAAAACJagAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"cut",
					null,
					"AQAAALNqAAAAAAAAs2oAAAAAAAASAAAARG9jdW1lbnRUeXBlT3V0cHV0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAs2oAAAAAAADFagAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					4,
					"left_delete",
					null,
					"BAAAAKhqAAAAAAAAqGoAAAAAAAABAAAAZadqAAAAAAAAp2oAAAAAAAABAAAAdKZqAAAAAAAApmoAAAAAAAABAAAAYaVqAAAAAAAApWoAAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqWoAAAAAAACpagAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"paste",
					null,
					"AQAAAKVqAAAAAAAAt2oAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApWoAAAAAAAClagAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					5,
					"left_delete",
					null,
					"BQAAAL9qAAAAAAAAv2oAAAAAAAACAAAAICC9agAAAAAAAL1qAAAAAAAAAgAAACAgu2oAAAAAAAC7agAAAAAAAAIAAAAgILlqAAAAAAAAuWoAAAAAAAACAAAAICC4agAAAAAAALhqAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwWoAAAAAAADBagAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
			"settings":
			{
				"buffer_size": 11206,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "This"
					},
					"BAAAAIcDAAAAAAAAiAMAAAAAAAAAAAAAiAMAAAAAAACJAwAAAAAAAAAAAACJAwAAAAAAAIoDAAAAAAAAAAAAAIoDAAAAAAAAiwMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhwMAAAAAAACHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " endpoint"
					},
					"CQAAAIsDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACNAwAAAAAAAAAAAACNAwAAAAAAAI4DAAAAAAAAAAAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwMAAAAAAACLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAACWAwAAAAAAAJcDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " asynchronou"
					},
					"DAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACZAwAAAAAAAAAAAACZAwAAAAAAAJoDAAAAAAAAAAAAAJoDAAAAAAAAmwMAAAAAAAAAAAAAmwMAAAAAAACcAwAAAAAAAAAAAACcAwAAAAAAAJ0DAAAAAAAAAAAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAACfAwAAAAAAAKADAAAAAAAAAAAAAKADAAAAAAAAoQMAAAAAAAAAAAAAoQMAAAAAAACiAwAAAAAAAAAAAACiAwAAAAAAAKMDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlwMAAAAAAACXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "s."
					},
					"AgAAAKMDAAAAAAAApAMAAAAAAAAAAAAApAMAAAAAAAClAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAowMAAAAAAACjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUDAAAAAAAApgMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQMAAAAAAAClAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 161 files for \"PortfolioBase\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n 1130      ExtractionPortfolioRetrievalResponse:\n 1131        allOf:\n 1132:         - $ref: '#/components/schemas/PortfolioBase'\n 1133          - type: object\n 1134            properties:\n ....\n 1174      ExtractFromUrlPortfolioResponse:\n 1175        allOf:\n 1176:         - $ref: '#/components/schemas/PortfolioBase'\n 1177          - type: object\n 1178            properties:\n ....\n 1183      UploadPortfolioResponse:\n 1184        allOf:\n 1185:         - $ref: '#/components/schemas/PortfolioBase'\n 1186          - type: object\n 1187            properties:\n ....\n 1249  \n 1250  \n 1251:     PortfolioBase:\n 1252        type: object\n 1253        properties:\n\n4 matches in 1 file\n\n\nSearching 161 files for \"environment:\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_configuration.yml:\n  744        schema:\n  745          type: string\n  746:     environment:\n  747        name: environment\n  748        in: query\n  ...\n 1014  \n 1015  \n 1016:     Environment:\n 1017        type: string\n 1018        enum: [production, development]\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n  813        example: test.pdf\n  814  \n  815:     environment:\n  816        name: environment\n  817        in: query\n  ...\n  977        description: The coverage score measures how fully an extraction captured all your target data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For more information about scoring, see [Monitoring extractions](doc:metrics).\n  978        example: 0.75\n  979:     Environment:\n  980        type: string\n  981        description: >-\n  ...\n 1004                example: 100\n 1005                description: Total number of pages in the document.\n 1006:             environment:\n 1007                $ref: '#/components/schemas/EnvironmentName'\n 1008              document_name:\n ....\n 1153          - type: object\n 1154            properties:\n 1155:             environment:\n 1156                $ref: '#/components/schemas/EnvironmentName'\n 1157              errors:\n ....\n 1212          document_name:\n 1213           $ref: '#/components/schemas/DocumentName'\n 1214:         environment:\n 1215           $ref: '#/components/schemas/Environment'\n 1216          coverage:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - test-before-integrating-configs.md:\n    4  ---\n    5  \n    6: Before integrating existing config updates into your application, test the updates in a Development environment:\n    7  \n    8  1. In the Sensible app, click **Publish configuration** and choose **Development** to save your updates to a development environment.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n   71        url: \"https://github.com/sensible-hq/sensible-docs/raw/main/readme-sync/assets/v0/pdfs/contract.pdf\",\n   72        documentType: \"sensible_instruct_basics\",\n   73:       environment: \"development\"\n   74      });\n   75  const results = await sensible.waitFor(request); // polls every 5 seconds. Optional if you configure a webhook\n   ..\n  137        documentType: \"tax_forms\",\n  138        configurationName: \"1040_2021\",\n  139:       environment: \"development\",\n  140        documentName=\"1040_john_doe.pdf\",\n  141        webhook: {\n\n10 matches across 4 files\n\n\nSearching 161 files for \"thorough\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - llm-based-methods\\1000 - list.md:\n   40  | properties (**required**)           | object                              | An array of objects with the following parameters: <br/> -`id` (**required**): A user-friendly ID for the data in the extraction output. <br/>  -`description` (**required**):  A prompt describing the list item that you want to extract. The prompt can include instructions to reformat or filter the data. For example, provide prompts like `\" transaction amount. return the absolute value\"` or `\"vehicle make (not model)\"`.  <br/> -`type`: The list item's type. For more information, see [types](doc:types). |\n   41  | (**Deprecated**) promptIntroduction | string.                             | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   42: | llmEngine                           | `fast`, `thorough`. default: `fast` | Specifies the LLM model to which Sensible submits the full prompt, and affects the number of chunks that Sensible submits to the LLM.<br/>If the Fast parameter results in incomplete extractions for multi-page lists, use Thorough as an alternative.<br/>- `fast`:  Sensible uses a faster LLM model (GPT-3.5 Turbo) and can submit a smaller number of chunks than specified by the Chunk Count parameter.<br/>- `thorough`: Sensible uses a slower LLM model (GPT-4 Turbo) and submits exactly the number of chunks specified by the Chunk Count parameter.<br/>For more information, see [Notes](#notes). |\n   43  | contextDescription                  |                                     | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters) |\n   44  | pageHinting                         |                                     | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters) |\n   ..\n  451  \n  452  2. Sensible selects a number of the top-scoring chunks: \n  453:    1. If you specify Thorough for the LLM Engine parameter, the Chunk Count parameter determines the number of top-scoring chunks Sensible selects to submit to the LLM.\n  454     2. If you specify Fast for the LLM Engine parameter,  1. Sensible selects a number of top-scoring chunks as determined by the Chunk Count parameter. 2. To improve performance, Sensible removes chunks that are significantly less relevant from the list of top-scoring chunks. The number of chunks Sensible sumbits to the LLM can therefore be smaller than the number specified by the Chunk Count parameter.\n  455  3. To avoid large language model (LLM)'s token limits, Sensible batches the chunks into groups by page numbers. Sensible batches a maxiumum of 20 page numbers. The chunks in each page group can be non-consecutive in the document.\n\n4 matches in 1 file\n\n\nSearching 161 files for \"if you specify a match\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6700 - config-settings\\1000 - fingerprint.md:\n   90  | key                  | value                                                        | description                                                  |\n   91  | -------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   92: | match (**required**) | a string, a [Match object](doc:match), or array of Match objects. | Specifies the text to match for the test.<br/>If you specify a Match array in this parameter, then Sensible must find all the matches in the array on the same page for the test to pass.<br/>If you want to specify fallback matches for the same page type, specify the matches in separate tests. For example, a form has revisions 1 and 2 that have slightly different word... <skipped 148 characters> ...\n   93  | offset               | integer                                                      | Specifies where to start or end the document segment, offset in pages relative to the first or last page defined by the Match parameter. For example, if you specify that the page that contains the phrase \"A summary of your rights\" is the first page of a segment, and Sensible finds a match for the first page on the zero-indexed page 3 of a portfolio:<br/>- specifying `\"offset\": -1` starts the document segment on page 2 of the portfolio.<br/>- specifying `\"offset\": 1` starts the document segment on page 4 of the portfolio. |\n   94  | page                 | `first`, `last`, `every`, `any`                              | Configure with the following enums:<br/>`first` - The first page of a document segment must meet the match criteria.  <br/>`last` - The last page of a document segment must meet the match criteria. If you specify... <skipped 278 characters> ...t segment can meet the criteria. <br/>**Notes:** <br/>- For an example see [Multi-document extraction](doc:portfolio). <br/>- If you reuse the same config between portfolios and standalone documents, then for standalone document extractions, Sensible ignores the configured value of this parameter. |\n\n1 match in 1 file\n\n\nSearching 161 files for \"if you specify a match array\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6700 - config-settings\\1000 - fingerprint.md:\n   90  | key                  | value                                                        | description                                                  |\n   91  | -------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   92: | match (**required**) | a string, a [Match object](doc:match), or array of Match objects. | Specifies the text to match for the test.<br/>If you specify a Match array in this parameter, then Sensible must find all the matches in the array on the same page for the test to pass.<br/>If you want to specify fallback matches for the same page type, specify the matches in separate tests. For example, a form has revisions 1 and 2 that have slightly different wordings o... <skipped 142 characters> ...\n   93  | offset               | integer                                                      | Specifies where to start or end the document segment, offset in pages relative to the first or last page defined by the Match parameter. For example, if you specify that the page that contains the phrase \"A summary of your rights\" is the first page of a segment, and Sensible finds a match for the first page on the zero-indexed page 3 of a portfolio:<br/>- specifying `\"offset\": -1` starts the document segment on page 2 of the portfolio.<br/>- specifying `\"offset\": 1` starts the document segment on page 4 of the portfolio. |\n   94  | page                 | `first`, `last`, `every`, `any`                              | Configure with the following enums:<br/>`first` - The first page of a document segment must meet the match criteria.  <br/>`last` - The last page of a document segment must meet the match criteria. If you specify... <skipped 278 characters> ...t segment can meet the criteria. <br/>**Notes:** <br/>- For an example see [Multi-document extraction](doc:portfolio). <br/>- If you reuse the same config between portfolios and standalone documents, then for standalone document extractions, Sensible ignores the configured value of this parameter. |\n\n1 match in 1 file\n\n\nSearching 161 files for \"DocumentName\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_configuration.yml:\n  464      parameters:\n  465        - $ref: '#/components/parameters/documentTypeId'\n  466:       - $ref: '#/components/parameters/documentName'\n  467      get:\n  468        operationId: get-reference-document\n  ...\n  539      parameters:\n  540        - $ref: '#/components/parameters/documentTypeId'\n  541:       - $ref: '#/components/parameters/documentName'\n  542      delete:\n  543        operationId: delete-reference-document-association\n  ...\n  641    #     - $ref: '#/components/parameters/configurationName'\n  642    #     - $ref: '#/components/parameters/versionIdentifier'\n  643:   #     - $ref: '#/components/parameters/documentName'\n  644    #     - $ref: '#/components/parameters/environment'\n  645    #   get:\n  ...\n  727        schema:\n  728          $ref: '#/components/schemas/Name'\n  729:     documentName:\n  730        name: document-name\n  731        required: true\n  ...\n  775        example: anyco_auto_insurance_quote\n  776        type: string\n  777:     DocumentName:\n  778        description: Unique user-friendly name for a document\n  779        example: best_scan_form_num_1234\n  ...\n  889        properties:\n  890          name:\n  891:           $ref: '#/components/schemas/DocumentName'\n  892          created:\n  893            $ref: '#/components/schemas/Date'\n  ...\n  915        properties:\n  916          name:\n  917:           $ref: '#/components/schemas/DocumentName'\n  918          configuration:\n  919            $ref: '#/components/schemas/AssociatedConfigurationName'\n  ...\n  925        properties:\n  926          name:\n  927:           $ref: '#/components/schemas/DocumentName'\n  928          configuration:\n  929            $ref: '#/components/schemas/AssociatedConfigurationName'\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n  982          The environment in which the version of the config used to run the extraction was published.\n  983        example: DEVELOPMENT\n  984:     DocumentName:\n  985        type: string\n  986        description: >-\n  ...\n 1007                $ref: '#/components/schemas/EnvironmentName'\n 1008              document_name:\n 1009:               $ref: '#/components/schemas/DocumentName'  \n 1010              coverage:\n 1011                $ref: '#/components/schemas/Coverage'\n ....\n 1142                $ref: '#/components/schemas/EnvironmentName'\n 1143              document_name:\n 1144:               $ref: '#/components/schemas/DocumentName'\n 1145              download_url:\n 1146                $ref: '#/components/schemas/DownloadUrlDocument'\n ....\n 1160                $ref: '#/components/schemas/EnvironmentName'\n 1161              document_name:\n 1162:               $ref: '#/components/schemas/DocumentName\n 1163              errors:\n 1164                $ref: '#/components/schemas/Errors'\n ....\n 1217            description: Total number of pages in the document.\n 1218          document_name:\n 1219:          $ref: '#/components/schemas/DocumentName'\n 1220          environment:\n 1221           $ref: '#/components/schemas/Environment'\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\batch-api.md:\n   23     --header 'Content-Type: application/json' \\\n   24     --header 'Authorization: Bearer YOUR_API_KEY' \\\n   25:    --data '{\"documentNames\":[\"doc1.pdf\", \"doc2.pdf\"],\n   26     \"description\":\"test batch\",\n   27     \"docType\":\"contracts\",\n   ..\n   38  | Parameter                    | description                                                  |\n   39  | ---------------------------- | ------------------------------------------------------------ |\n   40: | documentNames (**required**) | The file names of the documents in the batch. This endpoint supports PDFs and Word documents. The maximum batch size is 5000. |\n   41  | description                  | Description of the batch.                                    |\n   42  | docType (**required**)       | Type of document to extract from.  If you don't specify this parameter, you must specify the portfolioDocTypes parameter. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js\\README.md:\n  138        configurationName: \"1040_2021\",\n  139        environment: \"development\",\n  140:       documentName=\"1040_john_doe.pdf\",\n  141        webhook: {\n  142           url:\"YOUR_WEBHOOK_URL\",\n  ...\n  155  | documentTypes     | array                                                      | Types of documents to extract from. Use this parameter to extract from multiple documents that are packaged into one file (a \"portfolio\").  This parameter specifies the document types contained in the portfolio. Sensible then segments the portfolio into documents using the specified document types (for example, 1099, w2, and bank_statement) and then runs extractions for each document. For more information, see [Multi-doc extraction](https://docs.sensible.so/docs/portfolio). |\n  156  | configurationName | string                                                     | Sensible uses the specified config to extract data from the document instead of automatically choosing the configuration.<br/>If unspecified, Sensible chooses the best-scoring extraction from the configs in the document type.<br/>Not applicable for portfolios. |\n  157: | documentName      | string                                                     | If you specify the file name of the document using this parameter, then Sensible returns the file name in the extraction response and populates the file name in the Sensible app's list of recent extractions. |\n  158  | environment       | `\"production\"` or `\"development\"`. default: `\"production\"` | If you specify `development`, Sensible extracts preferentially using config versions published to the development environment in the Sensible app. The extraction runs all configs in the doc type before picking the best fit. For each config, falls back to production version if no development version of the config exists. |\n  159  | webhook           | object                                                     | Specifies to return extraction results to the specified webhook URL as soon as they're complete, so you don't have to poll for results status. Sensible also calls this webhook on error.<br/> The webhook object has the following parameters:<br/>`url`:  string. Webhook destination. Sensible posts to this URL when the extraction is complete.<br/>`payload`: string, number, boolean, object, or array. Information additional to the API response, for example a UUID for verification. |\n\n17 matches across 4 files\n\n\nSearching 161 files for \"\"Add Computed\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\7500 - advanced-computed-field-methods\\0100 - add-computed-fields.md:\n    1  ---\n    2: title: \"Add Computed Fields\"\n    3  hidden: false\n    4  ---\n\n1 match in 1 file\n\n\nSearching 161 files for \"versus embe\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3700 - ocr.md:\n   28  ## Notes\n   29  \n   30: - For more information about OCR versus embedded text extraction, see [Solving direct text extraction from PDFs](https://www.sensible.so/blog/solving-direct-text-extraction-from-pdfs).\n   31  \n   32  - For information about extracting data from non-text images, such as photographs, charts, or illustrations, see the [Query Group](doc:query-group) method's Multimodal Engine parameter.\n\n1 match in 1 file\n\n\nSearching 161 files for \"for the ocr e\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6800 - document-type-settings\\2000 - ocr-engine.md:\n    7  ## Enums\n    8  \n    9: The following table shows the enums available for the OCR Engine parameter. \n   10  \n   11  | enum      | description                                                  |\n\n1 match in 1 file\n\n\nSearching 161 files for \"vision preview\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - llm-based-methods\\1500 - query-group.md:\n   42  | queries                | array of objects | An array of query objects, where each extracts a single fact and outputs a single field. Each query contains the following parameters:<br/>`id` (**required**) - The ID for the extracted field. <br/>`description`  (**required**) - A free-text question about information in the document. For example, `\"what's the policy period?\"` or `\"what's the client's first and last name?\"`. For more information about how to write questions (or \"prompts\"), see [Query Group](https://docs.sensible.so/docs/query-group-tips) extraction tips. |\n   43  | chunkScoringText       | string           | Configures context's content. For details about context and chunks, see the Notes section.<br/>A representative snippet of text from the part of the document where you expect to find the answer to your prompt. Use this parameter to narrow down the page l... <skipped 572 characters> ...hunk contains a street address formatted with newlines, then provide a snippet with an example street address that contains newlines, like `123 Main Street\\nLondon, England`. If the chunk contains a street address in a free-text paragraph, then provide an unformatted street address in the snippet. |\n   44: <skipped 329 characters> ...ternative to the [Signature](doc:signature) method, the [Nearest Checkbox](doc:nearest-checkbox) method, the [OCR engine](doc:ocr-engine), and line [preprocessors](doc:preprocessors).<br/><br/>This parameter sends an image of the document region containing the target data to a multimodal LLM (GPT-4 Vision Preview), so that you can ask questions about text and non-text images. This bypasses Sensible's OCR and direct-text extraction processes. Note that this option doesn't support confidence signals.<br/>This parameter has the following parameters:<br/><br/>`region`: The document region to send as an image to... <skipped 762 characters> ...\n   45  | confidenceSignals      |                  | For information about this parameter, see [Advanced prompt configuration](doc:prompt). |\n   46  | contextDescription     |                  | For information about this parameter, see [Advanced prompt configuration](doc:prompt#parameters). |\n\n1 match in 1 file\n\n\nSearching 161 files for \"fallback\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_configuration.yml:\n  836          fingerprint_mode:\n  837            enum:\n  838:             - fallback_to_all\n  839              - strict\n  840            type: string\n  841:           description: The Sensible app defaults to `fallback_to_all`.\n  842  \n  843          ocr_engine:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\1000 - test-before-integrating-configs.md:\n    9  2. To test your updated config, specify `development` for the Environment parameter in your API or SDK extraction calls.\n   10  \n   11: Environment fallback behavior\n   12  ----\n   13  \n   14  When you  specify `?environment=development` in an API endpoint, Sensible falls back to the production version for each configuration if it can't find a development version.\n   15  \n   16: To understand fallback behavior, imagine the document type `test_doc_type` has the following config versions, which fit a `document_a` with varying degrees of accuracy:\n   17  \n   18  | Config  | Version in prod | Version in dev       |\n   ..\n   26   -   `configB` in production (OK fit)\n   27  \n   28: And returns output from  `configB`  (OK fit) in production. Notice that even though the API call specifies  the Development environment, the call returns output from a *production* config because of fallback behavior.\n   29  \n   30  If you don't specify an environment, Sensible ignores development versions and compares:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   50  | Parameter                                                    | Value                                              | Description                                                  |\n   51  | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n   52: | id (**required**)                                            | string                                             | Sensible uses the ID as the key in the structured key/value output. In the API response, this output is in the `parsed_document` object.<br/>To specify fallbacks, use the same ID in multiple fields. Succeeding fields act as fallbacks if the first returns null.<br/>For example, to capture differences in wording between document revisions, define two fields with the same ID, which anchor on synonymous text that 's present or absent in different document revisions. <br/>Or, specify an optional anchor anywhere in a document for an LLM-based field, and fall back to a different field if the anchor isn't present. <br/>Fallback fields can be of any kind. For example, you can fallback from a field, to a computed field, to a section group.<br/>**Limitations:**<br/>- Fallbacks don't work across nested structures. For example, you can't fall back from a parent section group's field to a child section group's field.<br/>- Fallbacks don't work within a query group. To specify fallbacks, define them in separate query groups. |\n   53  | anchor (**required**) except for fields that use [LLM-based methods](doc:llm-based-methods) | object                                             | The anchor identifies one or more lines of text in the document at which Sensible starts executing a method. Can be a string, Match object, or array of Match objects. For more information, see [Anchor object](doc:anchor) and [Match object](doc:match). |\n   54  | method (**required**)                                        | object                                             | The method describes how Sensible expands from the anchor and extracts the target data. For more information, see [Methods](doc:methods), [LLM-based methods](doc:llm-based-methods), and [Method object](doc:method). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\2200 - draft-text-table.md:\n    8  | :------------------- | :------ | :----------------------------------------------------------- |\n    9  | id **required**      | `table` | When you specify this method, you must also specify `\"type\": \"table\"` in the field's parameters. |\n   10: | columns **required** | array   | An array of objects with the following parameters:<br/> -`id` (**required**): The id for the column in the extraction output. <br/>**To specify fallbacks, use the same ID for multiple columns. Succeeding columns act as fallbacks if the first returns null.** <br/> |\n   11  |                      |         |                                                              |\n   12  |                      |         |                                                              |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\index.md:\n   19  | key                   | value                      | description                                                  |\n   20  | :-------------------- | :------------------------- | :----------------------------------------------------------- |\n   21: | id (**required**)     | string                     | Sensible uses the ID as the key in the structured key/value output. In the API response, this output is in the `parsed_document` section. To specify fallbacks, use the same ID for multiple Computed Field methods. Succeeding fields act as fallbacks if the first returns null. For example, to capture differences in wording between document revisions, define two fields with the same ID, which use synonymous source ids that may be present or absent in different document revisions. |\n   22  | method (**required**) | object                     | The method describes the Computed Field method used to transform fields. This object's ID parameter specifies the method, for example, [Concatenate](doc:concatenate) or [Zip](doc:zip). |\n   23  | type                  | string (default: `string`) | Specifies the type of the output value. For more information about types, see [Field query object](doc:field-query-object). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6700 - config-settings\\1000 - fingerprint.md:\n   14  | fingerprints for:                                            | notes                                                        |\n   15  | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   16: <skipped 226 characters> ...gerprint, you can save processing time. This is relevant if a config contains computationally expensive operations like LLM-based methods, selective OCR, table recognition, or box recognition methods.<br/>To test for matching text at the field level instead of the document type level, specify field fallbacks. For more information, see [Field query object](doc:field-query-object). |\n   17  | [portfolios ](doc:fingerprint#portfolios)                    | A portfolio contains multiple documents combined into one file, such as an invoice, a contract, and a tax form. Sensible uses fingerprints to segment a portfolio into documents. Fingerprints test for matching text that characterizes first, last, or other pages for documents in the portfolio. For more information, see [Multi-document extraction](doc:portfolio). |\n   18  \n   ..\n  109  - Avoid specifying an `any` page test unless other page types fail to segment the document.\n  110  \n  111: - If you want to specify fallback matches for the same page type, specify the matches in separate tests. For example, a form has revisions 1 and 2 that have slightly different wordings on the first page. Specify one test with a `first` page type and wording A, and specify a second test with a `first` page type and wording B.\n  112  \n  113  \n\n18 matches across 6 files\n\n\nSearching 161 files for \"fallback column\"\n\n0 matches\n\nSearching 163 files for \"threshold\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n  787  | annotateSuperscriptAndSubscript | Boolean. default: false | When true:<br/>-  Sensible annotates subscript and superscript text with `[^...]` and `[_...]`, respectively.<br/>- Sensible annotates end-of-page breaks with `[EOP]`. |\n  788  | allNewlines                     | Boolean. default: false | When true, Sensible inserts a newline (`\\n`) in the output for every line break in the document text, and two newlines (`\\n\\n`), for every paragraph break.<br/>When false, Sensible inserts a newline for every paragraph break.<br/> |\n  789: | paragraphBreakThreshold         | default: 0.4            | By default, Sensible detects paragraph breaks when the vertical gap between two lines is larger than 40% of the font height of the output line. Use this parameter to change the percentage. |\n  790  \n  791  Percentage\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1000 - box.md:\n   22  | offsetY           | number in inches default: 0                                  | Searches for a box starting at a point offset from the point defined by the Position parameter. Positive values offset down the page, negative values offset up the page.  For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   23  | offsetBoxes       | object. default: `none`                                      | Recognize a box offset from the point defined in the Position parameter by a number of contiguous boxes that share borders. For example, use this parameter for tables or grids where borders surround every cell. Contains the following parameters:<br/>\\- `direction`: The direction to search in (`above, below, right, left`, relative to the starting box.<br/>\\- `number`: The number of boxes to offset by.<br/>For an example of how to use this parameter, see the following [Examples section](doc:box#examples). |\n   24: | darknessThreshold | number between 0 and 1. default: 0.9                         | The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br/>If the document has a white background, the default value is 0.9.<br/>If the document has dark or mottled background, for example a... <skipped 227 characters> ...\n   25  | includeAnchor     | `true`, `false`. default: false                              | If true, includes anchors lines that are inside the box borders in the method output. Ignores anchor lines that are outside box borders. |\n   26  \n   ..\n   79  ----\n   80  \n   81: The following example shows extracting text from a box with a dark background and light text using the `darknessThreshold` parameter.\n   82  \n   83  \n   ..\n   91        \"method\": {\n   92          \"id\": \"box\",\n   93:         \"darknessThreshold\": 0.8\n   94        },\n   95        \"anchor\": \"dark box with light text\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1100 - checkbox.md:\n   27  | width             | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   28  | height            | number in inches. default: none | **For pixel recognition:**  Configure this parameter for pixel recognition of checkboxes larger than the default supported size, or for checkboxes with discontinuous or missing borders.<br/><br/>The Width and Height parameters define a region in which to find a selection mark. Specify a region inside the checkbox borders that doesn't touch the borders. <br/> |\n   29: | darknessThreshold | number between 1 and 0.         | **For pixel recognition:**  The brightness threshold below which to consider a pixel a box boundary. White is 1.0. Configure this parameter for checkboxes with dark backgrounds relative to the surrounding background.<br>If the document has dark or mottled background, for example as the result of a scan, then Sensible automatically chooses a default v... <skipped 60 characters> ...\n   30  \n   31  Examples\n   ..\n   63          \"id\": \"checkbox\",\n   64          \"position\": \"right\",\n   65:         \"darknessThreshold\": 0.4,\n   66          \"offsetX\": 0.8\n   67        }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1300 - document-range.md:\n  233        \"injury_multiline\": {\n  234          \"type\": \"string\",\n  235:         \"value\": \"Slip and fall, from threshold of foyer\"\n  236        }\n  237      },\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - llm-based-methods\\1000 - nlp-table.md:\n   45  | (**Deprecated**) promptIntroduction | string.                 | **(Deprecated)**  overwrites the introductory text at the beginning of the [full prompt](https://docs.sensible.so/docs/prompt) that Sensible submits to the LLM for this field. |\n   46  | rewriteTable                        | Boolean. default: true  | If true, you can use the column descriptions to prompt the LLM to split or merge columns or otherwise restructure the table.<br/>Configure this to false to improve performance, to avoid LLM token overflow errors caused by tables that ... <skipped 73 characters> ...leshoot an incomplete table extraction.<br/>If false, skips the full table restructure described in the Notes section. As a result, Sensible returns the table body unchanged from the OCR extraction, and the only change you can make is to rename the column headings using the columns' ID parameters. |\n   47: | pageSpanThreshold                   | object                  | Configure the Page Span Threshold parameter to troubleshoot automatic multi-page table recognition. <br/>By default, Sensible detects multi-page tables by checking if the table is near the top or bottom of the page. If it is, Sensible searches previous and succeeding pages for continuations of the table. This default behavior fails... <skipped 487 characters> ...ent using this parameter.<br/>-  `bottom`: number. default: 0.2. Sensible searches the next page for a continuation of a multi-page table if the table ends in the bottom 20% of the page. Change the percent using this parameter.<br/>Sensible continues merging the multi-page table until the Page Span Threshold conditions are no longer met, or until Sensible encounters LLM token limits. |\n   48  | detectTableStructureOnly            | boolean. default: false | Set this parameter to true to troubleshoot optional character recognition (OCR) in a table. If true, Sensible bypasses the text output by the table recognition OCR provider. Sensible instead recognizes the table's text using the  [OCR... <skipped 99 characters> ... file if present. For an example, see [Example: Troubleshoot Table OCR](doc:fixed-table#example-troubleshoot-table-ocr).<br/>If `\"detectTableStructureOnly\": true` causes incorrect [line sorting](doc:lines#line-sorting), set `annotateSuperscriptAndSubscript\": true` to correct the line sorting.<br/> |\n   49  | annotateSuperscriptAndSubscript     | boolean. default: false | Set to true only if the Detect Table Structure Only parameter is set to true. When true:<br/>-  Sensible annotates subscript and superscript text in the table with `[^...]` and `[_...]`, respectively. This parameter doesn't support annotating text in multi-line cells. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n  102      {\n  103        \"type\": \"mergeLines\",\n  104:       \"directlyAdjacentThreshold\": 0.15,\n  105:       \"adjacentThreshold\": 0.8,\n  106:       \"yOverlapThreshold\": 0.1\n  107      },\n  108    ],\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1050 - merge-lines.md:\n   22  | ---------------------------------------- | -------------------------------------- | ------------------------------------------------------------ |\n   23  | type (**required**)                      | `mergeLines`                           | merges lines distributed along a horizontal axis.            |\n   24: | directlyAdjacentThreshold (**required**) | number >= 0.16                         | Usually, it's recommended to leave the default for this parameter (0.16).<br/>Sensible uses the default setting for this parameter to transform separate tokens output from Google OCR into lines.<br/>This parameter specifies the fraction of l... <skipped 285 characters> ...\n   25: | adjacentThreshold (**required**)         | number >= 0.6                          | Corrects oversplit lines. <br/>Specifies the fraction of line height under which to merge two adjacent lines distributed along an x-axis *with* a space. The built-in merger uses 0.6, so choosing a larger number merges more aggressive... <skipped 51 characters> ...\n   26: | yOverlapThreshold                        | number between 0 and 1.0. default: 1.0 | Merges lines that aren't perfectly aligned at the same height on the page. <br/> Specifies the y overlap above which the Merge Lines preprocessor merges two adjacent lines. Y overlap is the section of the joint y-axis range of two li... <skipped 307 characters> ...\n   27: | minXGapThreshold                         | number in inches                       | Configure this parameter if two lines overlap on an x-axis. The default behavior is to merge these overlapping lines into one line. To split them instead, set a cap on the amount of allowable overlap. For example:<br/>0 - splits lin... <skipped 259 characters> ...\n   28  \n   29  Examples\n   ..\n   52      {\n   53        \"type\": \"mergeLines\",\n   54:       \"directlyAdjacentThreshold\": 0.15,\n   55:       \"adjacentThreshold\": 0.8,\n   56:       \"yOverlapThreshold\": 0.8,\n   57:       \"minXGapThreshold\": 0.1\n   58      }\n   59    ],\n   ..\n   98  Modify this example to observe the effects of the different parameters on the output. For example:\n   99  \n  100: - set `\"adjacentThreshold\": 0.1` to see oversplit lines. \n  101  \n  102: - set `\"adjacentThreshold\": 2.0` to see aggressively merged lines. \n  103  \n  104: - revert Adjacent Threshold to the original setting, then set `\"yOverlapThreshold\": 0.2`  to observe how lines with misaligned heights (like the email address) merges more aggressively.\n  105  \n  106    \n  ...\n  127      {\n  128        \"type\": \"mergeLines\",\n  129:       \"directlyAdjacentThreshold\": 0.16,\n  130:       \"adjacentThreshold\": 1\n  131      }\n  132    ],\n  ...\n  183      {\n  184        \"type\": \"mergeLines\",\n  185:       \"directlyAdjacentThreshold\": 0.16,\n  186:       \"adjacentThreshold\": 1.5,\n  187:       \"yOverlapThreshold\": 0.1\n  188      }\n  189    ],\n  ...\n  226  ----\n  227  \n  228: The following example shows using the Min X Gap Threshold parameter to extract overlapping text in a poorly formatted document. In this example, the built-in behavior without a Min X Gap Threshold is to merge the overlapping lines into one line (`Supplementary underinsured/uninsured motorist coverage500,000 USD Combined single limit incl. umbl`). \n  229  \n  230: The Min X Gap Threshold preserves the intended document formatting, which is a two-column table. By preserving this format, you can consistently use the Row method on the table in this document, as well as in other examples of this table in documents in which the lines don't overlap.\n  231  \n  232  **Config**\n  ...\n  237      {\n  238        \"type\": \"mergeLines\",\n  239:       \"directlyAdjacentThreshold\": 0.16,\n  240:       \"adjacentThreshold\": 0.6,\n  241:       \"minXGapThreshold\": 1.0\n  242      }\n  243    ],\n  ...\n  279  Because the Merge Lines preprocessor evaluates after the built-in line merger, there are limitations to the combinations of parameter values you can set:\n  280  \n  281: **yOverlapThreshold** \n  282  \n  283: In general, when you set `\"yOverlapThreshold\":1.0` or leave its value unspecified, then you set `\"adjacentThreshold\"` to 0.6 or higher.\n  284  \n  285: In this situation,   `\"directlyAdjacentThreshold\"` and `\"adjacentThreshold\"` have no effect if both their values are less than 0.6. In other words, the following configuration has **no** effect:\n  286  \n  287  ```json\n  288      {\n  289        \"type\": \"mergeLines\",\n  290:       \"directlyAdjacentThreshold\": 0.5,\n  291:       \"adjacentThreshold\": 0.5,\n  292:      \"yOverlapThreshold\": 1,\n  293  \n  294      }\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\1060 - nlp.md:\n   18  | ---------------------- | ------ | ------------------------------------------------------------ |\n   19  | type (**required**)    | `nlp`  |                                                              |\n   20: | nlpTable               | object | Parameters:<br/>- `rewriteTable`<br/>- `pageSpanThreshold`<br/>- `detectTableStructureOnly`<br/>-`annotateSuperscriptAndSubscript`<br/>- (**Deprecated**) `promptIntroduction`<br/>For information about these parameters, see [NLP Table](doc:nlp-table#parameters). |\n   21  | list                   | object | Parameters:<br/>- `llmEngine`<br/>- (**Deprecated**) `promptIntroduction`<br/>For information about these parameters, see [List](doc:list#parameters). |\n   22  | (**Deprecated**) query | object | For information about this deprecated parameter see [Query](doc:deprecated-query). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4600 - table-methods.md:\n   20  | Fixed Table | ✅<br />Ignores repeating column headings.                    | ✅<br /> If you specify the Stop parameter, Sensible populates \"empty\" spanned cells with the spanned value. For an example, see [Merged cell example](doc:fixed-table#example-merged-cells). | ❌                          | ✅ <br />If you specify the Stop parameter, Sensible returns the selection status for checkboxes in table cells as `\"[true]\"` or `\"[false]\"`. | ❌<br/>Use Sections as an alternative                         |\n   21  | Text Table  | ✅<br />Supported if you specify the Stop parameter           | ❌<br/>Sensible returns the first merged cell's value, and returns subsequent spanned cells as nulls. | ❌                          | ❌                                                            | ❌<br/>Use Sections as an alternative                         |\n   22: | NLP Table   | ✅ <br />To troubleshoot intervening non-table text, use the Page Span Threshold parameter. | Indeterminate. Usually supported without additional prompting. | ✅                          | Indeterminate.                                               | Indeterminate.<br/>Use Sections as an alternative.           |\n   23  \n   24  **Note:**  The Table method is deprecated. To duplicate this method's function, use the [NLP Table ](doc:nlp-table)method and set the Rewrite Table parameter to false. For information about the Table method, see [(Deprecated) Table method](doc:deprecated-table).\n\n48 matches across 9 files\n\n\nSearching 163 files for \"capture\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\openapi_extraction.yml:\n  975      Coverage:\n  976        type: number\n  977:       description: The coverage score measures how fully an extraction captured all your target data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For mor... <skipped 71 characters> ...\n  978        example: 0.75\n  979      Environment:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\0300 -  draft-llm-and-layout.md:\n    6  \n    7  \n    8: ## Capture the longtail\n    9  \n   10  In this example, you extract data from automotive repair invoices. You have high volume from 5 auto shops, and a long tail of low-volume invoices from hundreds of other shops.  In this case:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\0310 - metrics.md:\n   13  ---\n   14  \n   15: Extraction coverage measures how fully an extraction captures your target data from the document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of output fields are null. A low percentage can indicate a poor-quality extraction. Or, it can indicate that your documents contain sparse data. For example, if you d... <skipped 198 characters> ...\n   16  \n   17  Since coverage success criteria can vary by document type, you can set your own ranges for each document type in the Sensible app. To set ranges for coverage for past extractions, click **Dashboard** and scroll to the **Extraction coverage** section. In the section, you can filter by:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\best-practices\\5000 - guides\\2500 - handwriting.md:\n   25    \n   26  \n   27: - **Defining regions:** Handwriting can occupy an unpredictable region or even overlap other lines. To capture handwriting, Sensible recommends defining a [region](doc:region) with a small height and long width that runs through the middle of the area that can contain the handwriting. The green boxes in the following image show this approach: \n   28  \n   29    ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/handwriting_1.png) \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\1000 - getting-started.md:\n  447  You can get more advanced with this auto insurance config. For example:\n  448  \n  449: - The limits listed in the table are tricky for the Row method to capture since they can be a variable number of lines. Row methods depend on strict horizontal alignment of lines, so Sensible extracts the first line. Instead, use the [NLP Table method](doc:nlp-table) to more reliably capture the data in each cell of the whole table. \n  450: - What if the document listed emails, and you wanted to capture all those emails? You could use a regular expression (regex) in a `\"match\":\"all\"` anchor coupled with a [Passthrough method](doc:passthrough), or the [Regex method](doc:regex).\n  451  - You can split the policy period into two dates, either by using the [Split computed field method](doc:split), or by setting the [Date](doc:types#date) type on the field and using a tiebreaker.\n  452  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\layout-based-extractions\\4500 - app-guide\\1000 - color.md:\n    9  | ------------------------------------------------------------ | ------------------------------------ |\n   10  | [Yellow box](doc:color#yellow-box)                           | anchor                               |\n   11: | [Blue box](doc:color#blue-box)                               | captured method data                 |\n   12  | [Green box](doc:color#green-box)                             | box, region, table, or chunk         |\n   13  | [Green point](doc:color#green-point)                         | starting point for recognizing a box |\n   ..\n  116  ===\n  117  \n  118: ***Dotted blue boxes*** represent discarded method data. Sensible methods filter out captured data depending on parameters you set in the field, the anchor, and the method.\n  119  \n  120: For example, in the following image, a Row method captures everything to the right of the text \"Python\", but a tiebreaker selects \"0\" (dark blue box) and discards \"first\" (dotted blue box).\n  121  \n  122  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/ui_filtered_method.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\1000 - senseml-reference-introduction.md:\n  140  - The **fingerprint** tells Sensible to preferentially run this config if the document contains the terms \"anyco\" or \"quoted coverage changes.\" For more information about using fingerprints to improve performance, and other configuration settings, see [Configuration Settings](doc:config-settings).\n  141  \n  142: - The **computed field** `\"driver_name_last\"` extracts the last name from the raw output of the `_driver_name_raw` field. For more information about transforming field output, see [Computed field methods](doc:computed-field-methods).  You can also capture the full name as typed output. See [types](doc:types).\n  143  \n  144   \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1200 - method.md:\n   24  | wordFilters                 | string array                                                 | Filters out the specified strings from the method results.   |\n   25  | whitespaceFilter            | `spaces`, `all`                                              | Remove extra whitespaces.<br/> `spaces` - remove solely extra spaces.<br/> `all` - remove all whitespace characters, including newlines. |\n   26: | xRangeFilter                | object                                                       | Defines left and right boundaries in which to capture lines. For example, in combination with the Document Range method, the X Range Filter parameter defines a \"column\" that's bounded at the top and bottom by text matches.  This column excludes any lines that partially fall outside the defined rectangular region. Contains the following parameters: <br/>`start` - `right`,`left`  - Defines the starting point of the \"column\" at either the right or left boundary of the anchor line.<br/> `offsetX` - Adjusts the horizontal position of the starting point defined by the Start parameter. <br/> `width` - The width of the page region to capture, in inches.<br/><br/> For an example, see the Examples section. |\n   27  | **(Deprecated)** xMajorSort | boolean                                                      | **Deprecated:** Use the Sort Lines parameter instead.        |\n   28  | sortLines                   | `readingOrderLeftToRight`                                    | Set this parameter to `readingOrderLeftToRight` to sort lines whose height and vertical position are misaligned. For example, with misaligned handwritten text, slight jitter in the vertical positions of lines can cause Sensible to incorrectly sort lines that a human reader interprets as following left to right. The Sort Lines parameter corrects this problem by sorting lines by their likely reading order. |\n   ..\n   42  **SOLUTION**\n   43  \n   44: To reliably capture the first and last name in their left-to-right order,  set `\"sortLines\": \"readingOrderLeftToRight\"`.\n   45  \n   46  *Config*\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\1300 - types.md:\n  154  Returns a transformed type you define using an array of types. In the array, each successive type in the array takes the previous type's output as its input. For example, use this type:\n  155  \n  156: - As a more syntactically concise alternative to the [Regex](doc:regex) method or to [Computed Field methods](doc:computed-field-methods). For example, you can write a field to capture a date-typed field, then transform the field's output with the [Split](doc:split) method. Or, see the following example to transform dates using the Compose type.\n  157  - To transform table cell contents. As an alternative, see the [NLP table](doc:nlp-table) method to transform table cell contents using large language models(LLMs).\n  158  \n  ...\n  388  | relaxedWithCents          | Boolean. default: false                                      | Use this parameter when poor-quality scans or photographed documents result in erroneous OCR output for the decimal separator or thousands separator.  <br/> If true, Sensible overrides all other Currency typ... <skipped 371 characters> ...eriod or comma: <br/>`.,;: _ `  (period, comma, semicolon, colon, space, underscore)<br/><br/>For example, if you set this parameter to true, then for the erroneous OCR output  `\"7.859:36\"`, Sensible returns: <br>{\"source\": \"7.859:36\",<br/>\"type\": \"currency\",<br/>\"unit\": \"$\",<br/>\"value\": 7859.36} |\n  389  | accountingNegative        | `default`, `anyParentheses`, `bothParentheses`, `suffixNegativeSign` Default: `null` | Replaces the deprecated Accounting Currency type. Specifies to recognize accounting sign conventions for negative numbers.<br/>`null` Sensible recognizes negative numbers as described... <skipped 377 characters> ...y recognized as other characters.<br/>`suffixNegativeSign` - Sensible assigns a negative value to number suffixed by a negative sign.<br/>`default`  Replaces the behavior of the Accounting Currency type for backward compatibility. The equivalent of `bothParentheses` and `suffixNegativeSign`. <br/> |\n  390: | alwaysNegative            | boolean                                                      | If true, Sensible assigns a negative value to a number and ignores sign symbols in the document. For example, use this to capture values in the debit column of an accounting document, where negative signs are omitted. |\n  391  | removeSpaces              | boolean                                                      | Removes whitespace in a line for better currency recognition. For example, changes the line `$  12.45` to `$12.45`. |\n  392  | roundTo                   | number of decimal places to round up to.                     | Rounds up to the specified decimal place. <br/> For example if you specify `\"roundTo\": 3` then Sensible rounds `0.1234` to `0.123`. <br/>  If you specify `\"roundTo\": 2`  and `\"decimalSeparator\": \",\"` then Sensible rounds `5,249` to `5,25`. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - field-query-object\\index.md:\n   50  | Parameter                                                    | Value                                              | Description                                                  |\n   51  | ------------------------------------------------------------ | -------------------------------------------------- | ------------------------------------------------------------ |\n   52: <skipped 99 characters> ...                 | Sensible uses the ID as the key in the structured key/value output. In the API response, this output is in the `parsed_document` object.<br/>To specify fallbacks, use the same ID in multiple fields. Succeeding fields act as fallbacks if the first returns null.<br/>For example, to capture differences in wording between document revisions, define two fields with the same ID, which anchor on synonymous text that 's present or absent in different document revisions. <br/>Or, specify an optional anchor anywhere in a document for an LLM-based field, and fall back to a different field if ... <skipped 439 characters> ...\n   53  | anchor (**required**) except for fields that use [LLM-based methods](doc:llm-based-methods) | object                                             | The anchor identifies one or more lines of text in the document at which Sensible starts executing a method. Can be a string, Match object, or array of Match objects. For more information, see [Anchor object](doc:anchor) and [Match object](doc:match). |\n   54  | method (**required**)                                        | object                                             | The method describes how Sensible expands from the anchor and extracts the target data. For more information, see [Methods](doc:methods), [LLM-based methods](doc:llm-based-methods), and [Method object](doc:method). |\n   55: | type                                                         | see [Types](doc:types)                             | The data type to extract, for example, a currency, an address, or a custom type you define. This structured output includes the type information. If the field captures other data in addition to the data matching the type, Sensible suppresses the additional data from the output. For more information, see [Types](doc:types). |\n   56  | match                                                        | `first`,`last`,`all`, `allWithNull`,`mostFrequent` | If there are multiple anchors, specifies which one to use to extract output. <br/> <br/>- `first`  specifies the first anchor in the document that returns non-null output.<br/><br/>-... <skipped 1023 characters> ... a scanned document repeats a box titled `1 Wages` four times with the same dollar value, `21850.20`. Due to OCR errors, the extracted outputs are `21050.20`, `21850.20`, `21850.20` and `21850.58`.  This option returns the most frequent, and therefore the mostly likely correct output,  `21850.20`. |\n   57  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1650 - nearest-checkbox.md:\n   11  - If the document is a PDF that contains checkbox metadata, then Sensible preferentially uses the metadata to extract selection status.  \n   12  \n   13: - If there's no metadata, Sensible falls back to Azure Form Recognizer’s checkbox detection. This detection uses OCR and machine learning and captures a wide range of checkbox formats.\n   14  \n   15  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\2000 - methods\\1800 - regex.md:\n   18  | ---------------------- | ----------------------------------------------------- | ------------------------------------------------------------ |\n   19  | id (**required**)      | `regex`                                               | Specifies to include the anchor line in the method's output. |\n   20: | pattern (**required**) | Javascript-flavored regex                             | Returns the first capturing group. To capture more than one group, you can use one field for each group, then concatenate them with the [Concatenate](doc:concatenate) computed field method. <br/>Double escape special characters since the regex is in a JSON object. For example, `\\\\s`, not `\\s` , to represent a whitespace character.<br/>Sensible... <skipped 94 characters> ...\n   21  | flags                  | Javascript-flavored regex flags. default: none        | Flags to apply to the regex. For example, \"i\" for case-insensitive. |\n   22  | stop                   | Match object or array of match objects. default: none | Stops extraction at the matched line. Matched line isn't included in the method output. If unspecified, matches to the end of the document. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\5000 - preprocessors\\0900 - deskew.md:\n   49  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/deskew_4.png)\n   50  \n   51: Now Sensible captures the full date range, because the region starts at the middle of the complete line \"White house tenure\".\n   52  \n   53  Try out this example in the Sensible app using the following documents and config:\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6000 - computed-field-methods\\index.md:\n   19  | key                   | value                      | description                                                  |\n   20  | :-------------------- | :------------------------- | :----------------------------------------------------------- |\n   21: <skipped 46 characters> ...       | Sensible uses the ID as the key in the structured key/value output. In the API response, this output is in the `parsed_document` section. To specify fallbacks, use the same ID for multiple Computed Field methods. Succeeding fields act as fallbacks if the first returns null. For example, to capture differences in wording between document revisions, define two fields with the same ID, which use synonymous source ids that may be present or absent in different document revisions. |\n   22  | method (**required**) | object                     | The method describes the Computed Field method used to transform fields. This object's ID parameter specifies the method, for example, [Concatenate](doc:concatenate) or [Zip](doc:zip). |\n   23  | type                  | string (default: `string`) | Specifies the type of the output value. For more information about types, see [Field query object](doc:field-query-object). |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\1000 - sections-example-loss-run.md:\n    6  The following example shows extracting repeated fields from a section group containing a list of claims:\n    7  \n    8: - It captures Sept and Oct claims by specifying  sections that start with \"claim number\" and  section group range that starts with \"September\" and ends with \"November\".\n    9: - From each section, it excludes intervening text that isn't part of a section but that does repeat (`monthly_number_unprocessed_claims`) using a Stop parameter. Instead, it captures this information outside of sections with  `\"match:all\"`.\n   10  \n   11  **Config**\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\3000 - sections-example-labeled-rows.md:\n    4  ---\n    5  \n    6: The following example shows using a vertical section group to capture a table that has both column labels and row labels. It also shows using the Column Selection parameter to create sections out of all but the last and first columns. For more information about the Column Selection parameter, see [Section nuances](doc:section-nuances#column-selection).\n    7  \n    8  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\8000 - sections-example-copy-from-sections.md:\n   13  1. A parent section group's range contains the entire vehicle declaration.\n   14  \n   15: 2. A child section group captures data such as the vehicle description and VIN.\n   16  \n   17: 3. A child section group captures data such as the coverages and premiums:\n   18  \n   19  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/copy_from_sections_2.png)\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\9000 - sections-example-copy-to-section.md:\n   16    \"fields\": [\n   17      {\n   18:       /* capture raw policy # to copy into \n   19        each claim using copy_to_section */\n   20        \"id\": \"_raw_policy_number\",\n   ..\n   27      },\n   28      {\n   29:       /* capture raw policy name to copy into \n   30        each claim using copy_to_section */\n   31        \"id\": \"_raw_policy_name\",\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\9500 - sections-example-external-range.md:\n  232  ---\n  233  \n  234: The following example shows extracting repeated fields from a section group, when each section lacks anchoring text. To overcome this limitation, the example accesses anchors outside the sections. The sections anchor on external ranges that capture page headings, whose alignment changes for odd and even pages.  To avoid misaligned [Intersection](doc:intersection) methods in each section, the example defines dynamic external ranges relative to each section to capture each page's heading.\n  235  \n  236  In the following screenshot, the green brackets denote sections, where each section is a claim. Orange brackets denote external ranges. The labels for the claims' content is at the start of each page, under the `Claims contents` heading. \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\6500 - sections\\index.md:\n   66  | --------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n   67  | direction       | `horizontal`, `vertical`. default: `horizontal`              | If set to `vertical`, Sensible searches for columns in a sections group. <br/>In detail, Sensible searches  left-to-right for columns in the first-found document area defined by the Range parameter, rather than the default behavior of continuing to search for matches for the Range parameter. For an illustration of this behavior, see [section nuances](doc:section-nuances). |\n   68: | columnSelection | array of index selections where each \"index selection\" can be:<br/>- a column index or comma-delimited indices<br><br>- an array with two comma-delimited indices, meaning all the columns in the indices range<br/><br/> default: capture all columns (`[]`) | Use to configure which columns to treat as sections. Sensible adds *unselected* columns to each section, for example so they can be used as anchor candidates. For an illustration, see [Section nuances](doc:section-nuances#column-selection).<br/> `[[0,5]]` selects 1st through 6t... <skipped 341 characters> ...\n   69  | ignoredColumns  | integer array.                                               | Removes unwanted columns from both the output *and* from the SenseML search scope. For example, this is useful if the columns contain text that interferes with anchoring on other columns. |\n   70  | minColumnGap    | number in inches. default: 0                                 | Configures column recognition by specifying the smallest allowed width of the gutters separating the columns. For an example, see [Table grid example](doc:sections-example-table-grid). Use when text in a column contains whitespace gaps such that Sensible can split one column into two. To avoid this split, set a minimum gap that's larger than the gaps inside the column. The default (0) means that zero-width vertical lines define the column boundaries. |\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0300 - accuracy-measures.md:\n   11  - **Confidence signals**: For data extracted by large language models (LLMs), Sensible asks the LLM to report any uncertainties it has about the accuracy of the extracted data. For example, an LLM can report that it found multiple answer candidates. For more information, see [Qualifying LLM accuracy](doc:confidence).\n   12  \n   13: - **Extraction coverage:**  A score that measures how fully an extraction captured all the data in the document. It's a percentage comparing non-null, [validated](doc:validate-extractions) fields to total fields returned by a config for a document. For example, a coverage score of 70% for an extraction with no validation errors means that 30% of fields were null. For more inform... <skipped 49 characters> ...\n   14  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\1500 - coverage.md:\n    6  **Note:** If you're familiar with extraction coverage, this detailed topic is for you. If you're new to Sensible, see [Monitoring extractions](doc:metrics).\n    7  \n    8: Extraction coverage measures how fully an extraction captures your target data from the document. Sensible calculates the coverage for each extraction as follows:\n    9  \n   10  `coverage` = (`non-null fields extracted` - `validation penalties` )  ÷  (`total fields extracted`) \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\3000 - lines.md:\n   37  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/line_grouping.png)\n   38  \n   39: To capture unaligned lines, use the [Document Range](doc:document-range) method.\n   40  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\4500 - draft-senseml-order.md:\n   39  Take the raw text representation (from OCR or directly from the PDF), clean it, and put it in a standard format for Sensible to use.\n   40  \n   41: - Standardize the text to an array of pages, each containing an array of lines with bounding box data. Also capture transformation metadata (e.g., page rotation).\n   42  \n   43  - Apply non-configurable, global preprocessors (for example, clean up whitespaces, sort lines, merge and deduplicate lines).\n\n36 matches across 24 files\n",
			"settings":
			{
				"buffer_size": 69898,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"contents": "```\nExtracts lines contained in the region, where \"contained\" means:\n- condition 1: the region and the line's boundary box overlap for at least 90% of either the region or the line's width (\"x extent\").\nAND\n- condition 2: the region and the line's boundary box overlap for at least 80% of either the region or the line's height (\"y extent\").\n\nSensible calculates percentages based on the smaller of the two extents. For example, if the line is less wide than the region, condition 1 is met if the overlap is 90% of the line's width. If the region is less wide than the line, condition 1 is met if the overlap is 90% of the region's width. The same logic for calculating percentages applies to condition 2.\n```\n\n\n\n\n\n",
			"settings":
			{
				"buffer_size": 715,
				"line_ending": "Windows",
				"name": "```"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "overlapWi"
					},
					"CQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": "dth"
					},
					"AwAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": " --"
					},
					"AwAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAxQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "parameter"
					},
					"CQAAAOECAAAAAAAA4gIAAAAAAAAAAAAA4gIAAAAAAADjAgAAAAAAAAAAAADjAgAAAAAAAOQCAAAAAAAAAAAAAOQCAAAAAAAA5QIAAAAAAAAAAAAA5QIAAAAAAADmAgAAAAAAAAAAAADmAgAAAAAAAOcCAAAAAAAAAAAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADpAgAAAAAAAAAAAADpAgAAAAAAAOoCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAgAAAAAAAOECAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAOoCAAAAAAAA6wIAAAAAAAAAAAAA6wIAAAAAAADsAgAAAAAAAAAAAADsAgAAAAAAAO0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAgAAAAAAAOoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADvAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAgAAAAAAAO0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAO4CAAAAAAAA7gIAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAgAAAAAAAO8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "configure"
					},
					"CQAAAO4CAAAAAAAA7wIAAAAAAAAAAAAA7wIAAAAAAADwAgAAAAAAAAAAAADwAgAAAAAAAPECAAAAAAAAAAAAAPECAAAAAAAA8gIAAAAAAAAAAAAA8gIAAAAAAADzAgAAAAAAAAAAAADzAgAAAAAAAPQCAAAAAAAAAAAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA9QIAAAAAAAD2AgAAAAAAAAAAAAD2AgAAAAAAAPcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAgAAAAAAAO4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA+AIAAAAAAAD5AgAAAAAAAAAAAAD5AgAAAAAAAPoCAAAAAAAAAAAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3AgAAAAAAAPcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " strict"
					},
					"BwAAAPsCAAAAAAAA/AIAAAAAAAAAAAAA/AIAAAAAAAD9AgAAAAAAAAAAAAD9AgAAAAAAAP4CAAAAAAAAAAAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA/wIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AgAAAAAAAPsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "ness"
					},
					"BAAAAAIDAAAAAAAAAwMAAAAAAAAAAAAAAwMAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAwAAAAAAAAIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAAYDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAkDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAwAAAAAAAAYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " condi"
					},
					"BgAAAA0DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAABADAAAAAAAAAAAAABADAAAAAAAAEQMAAAAAAAAAAAAAEQMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAwAAAAAAAA0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "tions"
					},
					"BQAAABMDAAAAAAAAFAMAAAAAAAAAAAAAFAMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABYDAAAAAAAAAAAAABYDAAAAAAAAFwMAAAAAAAAAAAAAFwMAAAAAAAAYAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAABgDAAAAAAAAGQMAAAAAAAAAAAAAGQMAAAAAAAAaAwAAAAAAAAAAAAAaAwAAAAAAABsDAAAAAAAAAAAAABsDAAAAAAAAHAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAwAAAAAAABgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwDAAAAAAAAHQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAwAAAAAAABwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					4,
					"left_delete",
					null,
					"BAAAABwDAAAAAAAAHAMAAAAAAAABAAAAIBsDAAAAAAAAGwMAAAAAAAABAAAAchoDAAAAAAAAGgMAAAAAAAABAAAAbxkDAAAAAAAAGQMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdAwAAAAAAAB0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "by"
					},
					"AgAAABkDAAAAAAAAGgMAAAAAAAAAAAAAGgMAAAAAAAAbAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAwAAAAAAABkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " which"
					},
					"BgAAABsDAAAAAAAAHAMAAAAAAAAAAAAAHAMAAAAAAAAdAwAAAAAAAAAAAAAdAwAAAAAAAB4DAAAAAAAAAAAAAB4DAAAAAAAAHwMAAAAAAAAAAAAAHwMAAAAAAAAgAwAAAAAAAAAAAAAgAwAAAAAAACEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAwAAAAAAABsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAACEDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAjAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAwAAAAAAACEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " line"
					},
					"BQAAACMDAAAAAAAAJAMAAAAAAAAAAAAAJAMAAAAAAAAlAwAAAAAAAAAAAAAlAwAAAAAAACYDAAAAAAAAAAAAACYDAAAAAAAAJwMAAAAAAAAAAAAAJwMAAAAAAAAoAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAwAAAAAAACMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAwAAAAAAACgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " condi"
					},
					"BgAAACsDAAAAAAAALAMAAAAAAAAAAAAALAMAAAAAAAAtAwAAAAAAAAAAAAAtAwAAAAAAAC4DAAAAAAAAAAAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAwAAAAAAACsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAADADAAAAAAAAMAMAAAAAAAABAAAAaS8DAAAAAAAALwMAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAADEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "sidered"
					},
					"BwAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAwAAAAAAAC8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYDAAAAAAAANwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADcDAAAAAAAAOQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "contained"
					},
					"CQAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAABAAwAAAAAAAEEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AwAAAAAAADgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAwAAAAAAAEIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAwAAAAAAAEUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " region"
					},
					"BwAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAABJAwAAAAAAAEoDAAAAAAAAAAAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAwAAAAAAAEcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					4,
					"left_delete",
					null,
					"BAAAAE0DAAAAAAAATQMAAAAAAAABAAAAbkwDAAAAAAAATAMAAAAAAAABAAAAb0sDAAAAAAAASwMAAAAAAAABAAAAaUoDAAAAAAAASgMAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAwAAAAAAAE4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "ctangual"
					},
					"CAAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAABPAwAAAAAAAFADAAAAAAAAAAAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAwAAAAAAAEoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					2,
					"left_delete",
					null,
					"AgAAAFEDAAAAAAAAUQMAAAAAAAABAAAAbFADAAAAAAAAUAMAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAwAAAAAAAFIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "lar"
					},
					"AwAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAwAAAAAAAFADAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " region."
					},
					"CAAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAABVAwAAAAAAAFYDAAAAAAAAAAAAAFYDAAAAAAAAVwMAAAAAAAAAAAAAVwMAAAAAAABYAwAAAAAAAAAAAABYAwAAAAAAAFkDAAAAAAAAAAAAAFkDAAAAAAAAWgMAAAAAAAAAAAAAWgMAAAAAAABbAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAwAAAAAAAFMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFsDAAAAAAAAXAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAAFsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					2,
					"left_delete",
					null,
					"AgAAAP0CAAAAAAAA/QIAAAAAAAARAAAAdHJpY3RuZXNzIG9mIHRoZSD8AgAAAAAAAPwCAAAAAAAAAQAAAHM",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AgAAAAAAAA4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "\nFo"
					},
					"AwAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAABLAwAAAAAAAEwDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAwAAAAAAAEkDAAAAAAAAAAAAAADAgkA"
				],
				[
					56,
					2,
					"left_delete",
					null,
					"AgAAAEsDAAAAAAAASwMAAAAAAAABAAAAb0oDAAAAAAAASgMAAAAAAAABAAAARg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAwAAAAAAAEwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "strictness"
					},
					"CwAAAPwCAAAAAAAA/QIAAAAAAAAAAAAA/QIAAAAAAAD9AgAAAAAAAAoAAABjb25kaXRpb25z/QIAAAAAAAD+AgAAAAAAAAAAAAD+AgAAAAAAAP8CAAAAAAAAAAAAAP8CAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAABAwAAAAAAAAAAAAABAwAAAAAAAAIDAAAAAAAAAAAAAAIDAAAAAAAAAwMAAAAAAAAAAAAAAwMAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AgAAAAAAAAYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAAYDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAkDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAwAAAAAAAAYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " confit"
					},
					"BwAAAA0DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAABADAAAAAAAAAAAAABADAAAAAAAAEQMAAAAAAAAAAAAAEQMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAFAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAwAAAAAAAA0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					3,
					"left_delete",
					null,
					"AwAAABMDAAAAAAAAEwMAAAAAAAABAAAAdBIDAAAAAAAAEgMAAAAAAAABAAAAaREDAAAAAAAAEQMAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "ditions"
					},
					"BwAAABEDAAAAAAAAEgMAAAAAAAAAAAAAEgMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFQMAAAAAAAAAAAAAFQMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABcDAAAAAAAAAAAAABcDAAAAAAAAGAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAwAAAAAAABEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\nIn"
					},
					"AwAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABdAwAAAAAAAAAAAABdAwAAAAAAAF4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAAFsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF4DAAAAAAAAXwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAwAAAAAAAF4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					3,
					"left_delete",
					null,
					"AwAAAF4DAAAAAAAAXgMAAAAAAAABAAAAIF0DAAAAAAAAXQMAAAAAAAABAAAAblwDAAAAAAAAXAMAAAAAAAABAAAASQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAwAAAAAAAF8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "Configures"
					},
					"CgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABeAwAAAAAAAAAAAABeAwAAAAAAAF8DAAAAAAAAAAAAAF8DAAAAAAAAYAMAAAAAAAAAAAAAYAMAAAAAAABhAwAAAAAAAAAAAABhAwAAAAAAAGIDAAAAAAAAAAAAAGIDAAAAAAAAYwMAAAAAAAAAAAAAYwMAAAAAAABkAwAAAAAAAAAAAABkAwAAAAAAAGUDAAAAAAAAAAAAAGUDAAAAAAAAZgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAwAAAAAAAFwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAGYDAAAAAAAAZwMAAAAAAAAAAAAAZwMAAAAAAABoAwAAAAAAAAAAAABoAwAAAAAAAGkDAAAAAAAAAAAAAGkDAAAAAAAAagMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAwAAAAAAAGYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " perce"
					},
					"BgAAAGoDAAAAAAAAawMAAAAAAAAAAAAAawMAAAAAAABsAwAAAAAAAAAAAABsAwAAAAAAAG0DAAAAAAAAAAAAAG0DAAAAAAAAbgMAAAAAAAAAAAAAbgMAAAAAAABvAwAAAAAAAAAAAABvAwAAAAAAAHADAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAwAAAAAAAGoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAHADAAAAAAAAcQMAAAAAAAAAAAAAcQMAAAAAAAByAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAwAAAAAAAHADAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					6,
					"left_delete",
					null,
					"BgAAAHEDAAAAAAAAcQMAAAAAAAABAAAAdHADAAAAAAAAcAMAAAAAAAABAAAAbm8DAAAAAAAAbwMAAAAAAAABAAAAZW4DAAAAAAAAbgMAAAAAAAABAAAAY20DAAAAAAAAbQMAAAAAAAABAAAAcmwDAAAAAAAAbAMAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAwAAAAAAAHIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAGwDAAAAAAAAbQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAwAAAAAAAGwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					2,
					"left_delete",
					null,
					"AgAAAGwDAAAAAAAAbAMAAAAAAAABAAAAZGsDAAAAAAAAawMAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAwAAAAAAAG0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAGsDAAAAAAAAbAMAAAAAAAAAAAAAbAMAAAAAAABtAwAAAAAAAAAAAABtAwAAAAAAAG4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAwAAAAAAAGsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					2,
					"left_delete",
					null,
					"AgAAAG0DAAAAAAAAbQMAAAAAAAABAAAAZmwDAAAAAAAAbAMAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAwAAAAAAAG4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAGwDAAAAAAAAbQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAwAAAAAAAGwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					2,
					"left_delete",
					null,
					"AgAAAGwDAAAAAAAAbAMAAAAAAAABAAAAZWsDAAAAAAAAawMAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAwAAAAAAAG0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "percent"
					},
					"BwAAAGsDAAAAAAAAbAMAAAAAAAAAAAAAbAMAAAAAAABtAwAAAAAAAAAAAABtAwAAAAAAAG4DAAAAAAAAAAAAAG4DAAAAAAAAbwMAAAAAAAAAAAAAbwMAAAAAAABwAwAAAAAAAAAAAABwAwAAAAAAAHEDAAAAAAAAAAAAAHEDAAAAAAAAcgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAwAAAAAAAGsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " described"
					},
					"CgAAAHIDAAAAAAAAcwMAAAAAAAAAAAAAcwMAAAAAAAB0AwAAAAAAAAAAAAB0AwAAAAAAAHUDAAAAAAAAAAAAAHUDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAB3AwAAAAAAAHgDAAAAAAAAAAAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB6AwAAAAAAAAAAAAB6AwAAAAAAAHsDAAAAAAAAAAAAAHsDAAAAAAAAfAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAwAAAAAAAHIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAHwDAAAAAAAAfQMAAAAAAAAAAAAAfQMAAAAAAAB+AwAAAAAAAAAAAAB+AwAAAAAAAH8DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AwAAAAAAAHwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " condition"
					},
					"CgAAAH8DAAAAAAAAgAMAAAAAAAAAAAAAgAMAAAAAAACBAwAAAAAAAAAAAACBAwAAAAAAAIIDAAAAAAAAAAAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACEAwAAAAAAAAAAAACEAwAAAAAAAIUDAAAAAAAAAAAAAIUDAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAACHAwAAAAAAAAAAAACHAwAAAAAAAIgDAAAAAAAAAAAAAIgDAAAAAAAAiQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AwAAAAAAAH8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAwAAAAAAAIkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " above."
					},
					"BwAAAIsDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACNAwAAAAAAAAAAAACNAwAAAAAAAI4DAAAAAAAAAAAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAwAAAAAAAIsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJIDAAAAAAAAkwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAwAAAAAAAJIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " Set"
					},
					"BAAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABdAwAAAAAAAAAAAABdAwAAAAAAAF4DAAAAAAAAAAAAAF4DAAAAAAAAXwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAAFsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAF8DAAAAAAAAYAMAAAAAAAAAAAAAYAMAAAAAAABhAwAAAAAAAAAAAABhAwAAAAAAAGIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAwAAAAAAAF8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					7,
					"left_delete",
					null,
					"BwAAAGEDAAAAAAAAYQMAAAAAAAABAAAAdGADAAAAAAAAYAMAAAAAAAABAAAAaV8DAAAAAAAAXwMAAAAAAAABAAAAIF4DAAAAAAAAXgMAAAAAAAABAAAAdF0DAAAAAAAAXQMAAAAAAAABAAAAZVwDAAAAAAAAXAMAAAAAAAABAAAAU1sDAAAAAAAAWwMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAwAAAAAAAGIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " For"
					},
					"BAAAAJIDAAAAAAAAkwMAAAAAAAAAAAAAkwMAAAAAAACUAwAAAAAAAAAAAACUAwAAAAAAAJUDAAAAAAAAAAAAAJUDAAAAAAAAlgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAwAAAAAAAJIDAAAAAAAAAAAAAADIi0A"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " example,"
					},
					"CQAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACYAwAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACbAwAAAAAAAAAAAACbAwAAAAAAAJwDAAAAAAAAAAAAAJwDAAAAAAAAnQMAAAAAAAAAAAAAnQMAAAAAAACeAwAAAAAAAAAAAACeAwAAAAAAAJ8DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAwAAAAAAAJYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAJ8DAAAAAAAAoAMAAAAAAAAAAAAAoAMAAAAAAAChAwAAAAAAAAAAAAChAwAAAAAAAKIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAwAAAAAAAJ8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " you"
					},
					"BAAAAKIDAAAAAAAAowMAAAAAAAAAAAAAowMAAAAAAACkAwAAAAAAAAAAAACkAwAAAAAAAKUDAAAAAAAAAAAAAKUDAAAAAAAApgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAwAAAAAAAKIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " set"
					},
					"BAAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAACoAwAAAAAAAKkDAAAAAAAAAAAAAKkDAAAAAAAAqgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAwAAAAAAAKYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAAKoDAAAAAAAAqwMAAAAAAAAAAAAAqwMAAAAAAACsAwAAAAAAAAAAAACsAwAAAAAAAK0DAAAAAAAAAAAAAK0DAAAAAAAArgMAAAAAAAAAAAAArgMAAAAAAACvAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqAwAAAAAAAKoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAK8DAAAAAAAAsAMAAAAAAAAAAAAAsAMAAAAAAACxAwAAAAAAAAAAAACxAwAAAAAAALIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAwAAAAAAAK8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIDAAAAAAAAswMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAwAAAAAAALIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "(default"
					},
					"CAAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADXAgAAAAAAAAAAAADXAgAAAAAAANgCAAAAAAAAAAAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAADaAgAAAAAAANsCAAAAAAAAAAAAANsCAAAAAAAA3AIAAAAAAAAAAAAA3AIAAAAAAADdAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAgAAAAAAANUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " ."
					},
					"AgAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA3gIAAAAAAADfAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAgAAAAAAAN0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "9)"
					},
					"AgAAAN8CAAAAAAAA4AIAAAAAAAAAAAAA4AIAAAAAAADhAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAgAAAAAAAN8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOECAAAAAAAA4gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAgAAAAAAAOECAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAN4CAAAAAAAA3wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAgAAAAAAAN4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "0.5"
					},
					"AwAAAMEDAAAAAAAAwgMAAAAAAAAAAAAAwgMAAAAAAADDAwAAAAAAAAAAAADDAwAAAAAAAMQDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBAwAAAAAAAMEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMQDAAAAAAAAxQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAwAAAAAAAMQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMUDAAAAAAAAxgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAwAAAAAAAMUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "then"
					},
					"BAAAAMYDAAAAAAAAxwMAAAAAAAAAAAAAxwMAAAAAAADIAwAAAAAAAAAAAADIAwAAAAAAAMkDAAAAAAAAAAAAAMkDAAAAAAAAygMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAwAAAAAAAMYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADMAwAAAAAAAAAAAADMAwAAAAAAAM0DAAAAAAAAAAAAAM0DAAAAAAAAzgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAwAAAAAAAMoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " condition"
					},
					"CgAAAM4DAAAAAAAAzwMAAAAAAAAAAAAAzwMAAAAAAADQAwAAAAAAAAAAAADQAwAAAAAAANEDAAAAAAAAAAAAANEDAAAAAAAA0gMAAAAAAAAAAAAA0gMAAAAAAADTAwAAAAAAAAAAAADTAwAAAAAAANQDAAAAAAAAAAAAANQDAAAAAAAA1QMAAAAAAAAAAAAA1QMAAAAAAADWAwAAAAAAAAAAAADWAwAAAAAAANcDAAAAAAAAAAAAANcDAAAAAAAA2AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAwAAAAAAAM4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " 1,"
					},
					"AwAAANgDAAAAAAAA2QMAAAAAAAAAAAAA2QMAAAAAAADaAwAAAAAAAAAAAADaAwAAAAAAANsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAwAAAAAAANgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAANsDAAAAAAAA3AMAAAAAAAAAAAAA3AMAAAAAAADdAwAAAAAAAAAAAADdAwAAAAAAAN4DAAAAAAAAAAAAAN4DAAAAAAAA3wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAwAAAAAAANsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " region"
					},
					"BwAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADhAwAAAAAAAAAAAADhAwAAAAAAAOIDAAAAAAAAAAAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADkAwAAAAAAAAAAAADkAwAAAAAAAOUDAAAAAAAAAAAAAOUDAAAAAAAA5gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAwAAAAAAAN8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAwAAAAAAAOYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " hte"
					},
					"BAAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAADsAwAAAAAAAO0DAAAAAAAAAAAAAO0DAAAAAAAA7gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAwAAAAAAAOoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " line's"
					},
					"BwAAAO4DAAAAAAAA7wMAAAAAAAAAAAAA7wMAAAAAAADwAwAAAAAAAAAAAADwAwAAAAAAAPEDAAAAAAAAAAAAAPEDAAAAAAAA8gMAAAAAAAAAAAAA8gMAAAAAAADzAwAAAAAAAAAAAADzAwAAAAAAAPQDAAAAAAAAAAAAAPQDAAAAAAAA9QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAwAAAAAAAO4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " boundary"
					},
					"CQAAAPUDAAAAAAAA9gMAAAAAAAAAAAAA9gMAAAAAAAD3AwAAAAAAAAAAAAD3AwAAAAAAAPgDAAAAAAAAAAAAAPgDAAAAAAAA+QMAAAAAAAAAAAAA+QMAAAAAAAD6AwAAAAAAAAAAAAD6AwAAAAAAAPsDAAAAAAAAAAAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA/AMAAAAAAAD9AwAAAAAAAAAAAAD9AwAAAAAAAP4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1AwAAAAAAAPUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " box"
					},
					"BAAAAP4DAAAAAAAA/wMAAAAAAAAAAAAA/wMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAEEAAAAAAAAAAAAAAEEAAAAAAAAAgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AwAAAAAAAP4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " must"
					},
					"BQAAAAIEAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAUEAAAAAAAAAAAAAAUEAAAAAAAABgQAAAAAAAAAAAAABgQAAAAAAAAHBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACBAAAAAAAAAIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " overlap"
					},
					"CAAAAAcEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAJBAAAAAAAAAAAAAAJBAAAAAAAAAoEAAAAAAAAAAAAAAoEAAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAAA0EAAAAAAAAAAAAAA0EAAAAAAAADgQAAAAAAAAAAAAADgQAAAAAAAAPBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHBAAAAAAAAAcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAA8EAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAARBAAAAAAAAAAAAAARBAAAAAAAABIEAAAAAAAAAAAAABIEAAAAAAAAEwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPBAAAAAAAAA8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " at"
					},
					"AwAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAAVBAAAAAAAABYEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATBAAAAAAAABMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " least"
					},
					"BgAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABkEAAAAAAAAAAAAABkEAAAAAAAAGgQAAAAAAAAAAAAAGgQAAAAAAAAbBAAAAAAAAAAAAAAbBAAAAAAAABwEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWBAAAAAAAABYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " 50%"
					},
					"BAAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAAeBAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcBAAAAAAAABwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAACAEAAAAAAAAIQQAAAAAAAAAAAAAIQQAAAAAAAAiBAAAAAAAAAAAAAAiBAAAAAAAACMEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgBAAAAAAAACAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAACMEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAlBAAAAAAAAAAAAAAlBAAAAAAAACYEAAAAAAAAAAAAACYEAAAAAAAAJwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjBAAAAAAAACMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " smaller"
					},
					"CAAAACcEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAACoEAAAAAAAAAAAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAAC0EAAAAAAAAAAAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnBAAAAAAAACcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAC8EAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAxBAAAAAAAAAAAAAAxBAAAAAAAADIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " two's"
					},
					"BgAAADYEAAAAAAAANwQAAAAAAAAAAAAANwQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADkEAAAAAAAAAAAAADkEAAAAAAAAOgQAAAAAAAAAAAAAOgQAAAAAAAA7BAAAAAAAAAAAAAA7BAAAAAAAADwEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2BAAAAAAAADYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " width"
					},
					"BgAAADwEAAAAAAAAPQQAAAAAAAAAAAAAPQQAAAAAAAA+BAAAAAAAAAAAAAA+BAAAAAAAAD8EAAAAAAAAAAAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABBBAAAAAAAAAAAAABBBAAAAAAAAEIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8BAAAAAAAADwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					2,
					"left_delete",
					null,
					"AgAAAOwDAAAAAAAA7AMAAAAAAAABAAAAdOsDAAAAAAAA6wMAAAAAAAABAAAAaA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAwAAAAAAAO0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA7AMAAAAAAADtAwAAAAAAAAAAAADtAwAAAAAAAO4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAwAAAAAAAOsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAO0DAAAAAAAA7QMAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAwAAAAAAAO4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					2,
					"left_delete",
					null,
					"AgAAAIEDAAAAAAAAgQMAAAAAAAAJAAAAZGVzY3JpYmVkgAMAAAAAAACAAwAAAAAAAAEAAAAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAwAAAAAAAIoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAADgEAAAAAAAAOQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4BAAAAAAAADgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					2,
					"left_delete",
					null,
					"AgAAAMkCAAAAAAAAyQIAAAAAAAALAAAAdmVybGFwV2lkdGjIAgAAAAAAAMgCAAAAAAAAAQAAAG8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAgAAAAAAAMkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "percentOverlap"
					},
					"DgAAAMgCAAAAAAAAyQIAAAAAAAAAAAAAyQIAAAAAAADKAgAAAAAAAAAAAADKAgAAAAAAAMsCAAAAAAAAAAAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADNAgAAAAAAAAAAAADNAgAAAAAAAM4CAAAAAAAAAAAAAM4CAAAAAAAAzwIAAAAAAAAAAAAAzwIAAAAAAADQAgAAAAAAAAAAAADQAgAAAAAAANECAAAAAAAAAAAAANECAAAAAAAA0gIAAAAAAAAAAAAA0gIAAAAAAADTAgAAAAAAAAAAAADTAgAAAAAAANQCAAAAAAAAAAAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAgAAAAAAAMgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AQAAANYCAAAAAAAA1wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAgAAAAAAANYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "cir"
					},
					"BAAAAB8DAAAAAAAAIAMAAAAAAAAAAAAAIAMAAAAAAAAgAwAAAAAAAAoAAABjb25kaXRpb25zIAMAAAAAAAAhAwAAAAAAAAAAAAAhAwAAAAAAACIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAwAAAAAAACkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					2,
					"left_delete",
					null,
					"AgAAACEDAAAAAAAAIQMAAAAAAAABAAAAciADAAAAAAAAIAMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAwAAAAAAACIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "riteria"
					},
					"BwAAACADAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAiAwAAAAAAAAAAAAAiAwAAAAAAACMDAAAAAAAAAAAAACMDAAAAAAAAJAMAAAAAAAAAAAAAJAMAAAAAAAAlAwAAAAAAAAAAAAAlAwAAAAAAACYDAAAAAAAAAAAAACYDAAAAAAAAJwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAwAAAAAAACADAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAACcDAAAAAAAAKAMAAAAAAAAAAAAAKAMAAAAAAAApAwAAAAAAAAAAAAApAwAAAAAAACoDAAAAAAAAAAAAACoDAAAAAAAAKwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAwAAAAAAACcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsDAAAAAAAALAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAwAAAAAAACsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAACwDAAAAAAAALQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " region"
					},
					"BwAAAC0DAAAAAAAALgMAAAAAAAAAAAAALgMAAAAAAAAvAwAAAAAAAAAAAAAvAwAAAAAAADADAAAAAAAAAAAAADADAAAAAAAAMQMAAAAAAAAAAAAAMQMAAAAAAAAyAwAAAAAAAAAAAAAyAwAAAAAAADMDAAAAAAAAAAAAADMDAAAAAAAANAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAwAAAAAAAC0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADcDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AwAAAAAAADQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"left_delete",
					null,
					"AQAAADgDAAAAAAAAOAMAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AwAAAAAAADkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADgDAAAAAAAAOgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AwAAAAAAADgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "contain"
					},
					"BwAAADkDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAD8DAAAAAAAAQAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AwAAAAAAADkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABDAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAwAAAAAAAEEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": " line."
					},
					"BgAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABFAwAAAAAAAAAAAABFAwAAAAAAAEYDAAAAAAAAAAAAAEYDAAAAAAAARwMAAAAAAAAAAAAARwMAAAAAAABIAwAAAAAAAAAAAABIAwAAAAAAAEkDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAwAAAAAAAEMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"left_delete",
					null,
					"AQAAAEkDAAAAAAAASQMAAAAAAABDAAAAIGJ5IHdoaWNoIGEgbGluZSBpcyBjb25zaWRlcmVkICdjb250YWluZWQnIGluIGEgcmVjdGFuZ3VsYXIgcmVnaW9uLg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAwAAAAAAAIwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEEDAAAAAAAAQgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAwAAAAAAAEEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"left_delete",
					null,
					"AQAAAEEDAAAAAAAAQQMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAwAAAAAAAEIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"cut",
					null,
					"AQAAAMgCAAAAAAAAyAIAAAAAAABRAQAAcGVyY2VudE92ZXJsYXBYIChkZWZhdWx0IDAuOSkgLS0gdXNlIHRoaXMgcGFyYW1ldGVyIHRvIGNvbmZpZ3VyZSB0aGUgc3RyaWN0bmVzcyBvZiB0aGUgY3JpdGVyaWEgZm9yIGEgcmVnaW9uIHRvICdjb250YWluJyBhIGxpbmUuCkNvbmZpZ3VyZXMgdGhlIHBlcmNlbnQgaW4gY29uZGl0aW9uIDEgYWJvdmUuIEZvciBleGFtcGxlLCBpZiB5b3Ugc2V0IHRoaXMgdG8gMC41LCB0aGVuIGZvciBjb25kaXRpb24gMSwgdGhlIHJlZ2lvbiBhbmQgdGhlIGxpbmUncyBib3VuZGFyeSBib3ggbXVzdCBvdmVybGFwIGZvciBhdCBsZWFzdCA1MCUgb2YgdGhlIHNtYWxsZXIgb2YgdGhlIHR3bydzIHdpZHRoLg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZBAAAAAAAAMgCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "v0/llm-based extractions/3000 - prompt.md",
			"settings":
			{
				"buffer_size": 10121,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "full"
					},
					"BAAAAK0UAAAAAAAArhQAAAAAAAAAAAAArhQAAAAAAACvFAAAAAAAAAAAAACvFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAsRQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtFAAAAAAAAK0UAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEUAAAAAAAAshQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxFAAAAAAAALEUAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "v0/senseml-reference/2000 - field-query-object/index.md",
			"settings":
			{
				"buffer_size": 5957,
				"line_ending": "Windows"
			}
		},
		{
			"file": "v0/senseml-reference/3000 - llm-based-methods/1500 - query-group.md",
			"settings":
			{
				"buffer_size": 19406,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAKIUAAAAAAAAoxQAAAAAAAAAAAAAoxQAAAAAAACkFAAAAAAAAAAAAACkFAAAAAAAAKUUAAAAAAAAAAAAAKUUAAAAAAAAphQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAohQAAAAAAACiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAKYUAAAAAAAApxQAAAAAAAAAAAAApxQAAAAAAACoFAAAAAAAAAAAAACoFAAAAAAAAKkUAAAAAAAAAAAAAKkUAAAAAAAAqhQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAphQAAAAAAACmFAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " region"
					},
					"BwAAAKoUAAAAAAAAqxQAAAAAAAAAAAAAqxQAAAAAAACsFAAAAAAAAAAAAACsFAAAAAAAAK0UAAAAAAAAAAAAAK0UAAAAAAAArhQAAAAAAAAAAAAArhQAAAAAAACvFAAAAAAAAAAAAACvFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAsRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqhQAAAAAAACqFAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAHoUAAAAAAAAexQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAehQAAAAAAAB6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAH4UAAAAAAAAfxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfhQAAAAAAAB+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH8UAAAAAAAAgRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfxQAAAAAAAB/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "doc:ocr"
					},
					"BwAAAIAUAAAAAAAAgRQAAAAAAAAAAAAAgRQAAAAAAACCFAAAAAAAAAAAAACCFAAAAAAAAIMUAAAAAAAAAAAAAIMUAAAAAAAAhBQAAAAAAAAAAAAAhBQAAAAAAACFFAAAAAAAAAAAAACFFAAAAAAAAIYUAAAAAAAAAAAAAIYUAAAAAAAAhxQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgBQAAAAAAACAFAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoRAAAAAAAAuhEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "v0/senseml-reference/8000 - concepts/3700 - ocr.md",
			"redo_stack":
			[
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAAG4JAAAAAAAAbwkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgkAAAAAAABuCQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"cut",
					null,
					"AQAAAG8JAAAAAAAA8gkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbwkAAAAAAABvCQAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 2547,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": " po"
					},
					"AwAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA4ggAAAAAAADjCAAAAAAAAAAAAADjCAAAAAAAAOQIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QgAAAAAAADhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					3,
					"left_delete",
					null,
					"AwAAAOMIAAAAAAAA4wgAAAAAAAABAAAAb+IIAAAAAAAA4ggAAAAAAAABAAAAcOEIAAAAAAAA4QgAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AgAAAAAAADkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " poor-quality"
					},
					"DQAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA4ggAAAAAAADjCAAAAAAAAAAAAADjCAAAAAAAAOQIAAAAAAAAAAAAAOQIAAAAAAAA5QgAAAAAAAAAAAAA5QgAAAAAAADmCAAAAAAAAAAAAADmCAAAAAAAAOcIAAAAAAAAAAAAAOcIAAAAAAAA6AgAAAAAAAAAAAAA6AgAAAAAAADpCAAAAAAAAAAAAADpCAAAAAAAAOoIAAAAAAAAAAAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA6wgAAAAAAADsCAAAAAAAAAAAAADsCAAAAAAAAO0IAAAAAAAAAAAAAO0IAAAAAAAA7ggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QgAAAAAAADhCAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAO4IAAAAAAAA7wgAAAAAAAAAAAAA7wgAAAAAAADwCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7ggAAAAAAADuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAO8IAAAAAAAA7wgAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AgAAAAAAADwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "text"
					},
					"BAAAAO8IAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAADxCAAAAAAAAAAAAADxCAAAAAAAAPIIAAAAAAAAAAAAAPIIAAAAAAAA8wgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wgAAAAAAADvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " images"
					},
					"BwAAAPMIAAAAAAAA9AgAAAAAAAAAAAAA9AgAAAAAAAD1CAAAAAAAAAAAAAD1CAAAAAAAAPYIAAAAAAAAAAAAAPYIAAAAAAAA9wgAAAAAAAAAAAAA9wgAAAAAAAD4CAAAAAAAAAAAAAD4CAAAAAAAAPkIAAAAAAAAAAAAAPkIAAAAAAAA+ggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wgAAAAAAADzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " such"
					},
					"BQAAAPoIAAAAAAAA+wgAAAAAAAAAAAAA+wgAAAAAAAD8CAAAAAAAAAAAAAD8CAAAAAAAAP0IAAAAAAAAAAAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+ggAAAAAAAD6CAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP8IAAAAAAAAAAkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wgAAAAAAAD/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					5,
					"left_delete",
					null,
					"BQAAAP8IAAAAAAAA/wgAAAAAAAABAAAAIP4IAAAAAAAA/ggAAAAAAAABAAAAaP0IAAAAAAAA/QgAAAAAAAABAAAAY/wIAAAAAAAA/AgAAAAAAAABAAAAdfsIAAAAAAAA+wgAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPsIAAAAAAAA/AgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wgAAAAAAAD7CAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					2,
					"left_delete",
					null,
					"AgAAAPsIAAAAAAAA+wgAAAAAAAABAAAALPoIAAAAAAAA+ggAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AgAAAAAAAD8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAAPoIAAAAAAAA+wgAAAAAAAAAAAAA+wgAAAAAAAD8CAAAAAAAAAAAAAD8CAAAAAAAAP0IAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+ggAAAAAAAD6CAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAD/CAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAQkAAAAAAAAAAAAAAQkAAAAAAAACCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QgAAAAAAAD9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"cut",
					null,
					"AQAAAOIIAAAAAAAA4ggAAAAAAAAgAAAAcG9vci1xdWFsaXR5IHRleHQgaW1hZ2VzIG9yIGZyb20",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgkAAAAAAADiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAOEIAAAAAAAA4QgAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4ggAAAAAAADiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " You"
					},
					"BAAAAG4JAAAAAAAAbwkAAAAAAAAAAAAAbwkAAAAAAABwCQAAAAAAAAAAAABwCQAAAAAAAHEJAAAAAAAAAAAAAHEJAAAAAAAAcgkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgkAAAAAAABuCQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " can"
					},
					"BAAAAHIJAAAAAAAAcwkAAAAAAAAAAAAAcwkAAAAAAAB0CQAAAAAAAAAAAAB0CQAAAAAAAHUJAAAAAAAAAAAAAHUJAAAAAAAAdgkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcgkAAAAAAAByCQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " also"
					},
					"BQAAAHYJAAAAAAAAdwkAAAAAAAAAAAAAdwkAAAAAAAB4CQAAAAAAAAAAAAB4CQAAAAAAAHkJAAAAAAAAAAAAAHkJAAAAAAAAegkAAAAAAAAAAAAAegkAAAAAAAB7CQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgkAAAAAAAB2CQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " you"
					},
					"BAAAAHsJAAAAAAAAfAkAAAAAAAAAAAAAfAkAAAAAAAB9CQAAAAAAAAAAAAB9CQAAAAAAAH4JAAAAAAAAAAAAAH4JAAAAAAAAfwkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewkAAAAAAAB7CQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					3,
					"left_delete",
					null,
					"AwAAAH4JAAAAAAAAfgkAAAAAAAABAAAAdX0JAAAAAAAAfQkAAAAAAAABAAAAb3wJAAAAAAAAfAkAAAAAAAABAAAAeQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwkAAAAAAAB/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAHwJAAAAAAAAfQkAAAAAAAAAAAAAfQkAAAAAAAB+CQAAAAAAAAAAAAB+CQAAAAAAAH8JAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAkAAAAAAAB8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAH8JAAAAAAAAgAkAAAAAAAAAAAAAgAkAAAAAAACBCQAAAAAAAAAAAACBCQAAAAAAAIIJAAAAAAAAAAAAAIIJAAAAAAAAgwkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwkAAAAAAAB/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " Multim"
					},
					"BwAAAIMJAAAAAAAAhAkAAAAAAAAAAAAAhAkAAAAAAACFCQAAAAAAAAAAAACFCQAAAAAAAIYJAAAAAAAAAAAAAIYJAAAAAAAAhwkAAAAAAAAAAAAAhwkAAAAAAACICQAAAAAAAAAAAACICQAAAAAAAIkJAAAAAAAAAAAAAIkJAAAAAAAAigkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwkAAAAAAACDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "odal"
					},
					"BAAAAIoJAAAAAAAAiwkAAAAAAAAAAAAAiwkAAAAAAACMCQAAAAAAAAAAAACMCQAAAAAAAI0JAAAAAAAAAAAAAI0JAAAAAAAAjgkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigkAAAAAAACKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " Engine"
					},
					"BwAAAI4JAAAAAAAAjwkAAAAAAAAAAAAAjwkAAAAAAACQCQAAAAAAAAAAAACQCQAAAAAAAJEJAAAAAAAAAAAAAJEJAAAAAAAAkgkAAAAAAAAAAAAAkgkAAAAAAACTCQAAAAAAAAAAAACTCQAAAAAAAJQJAAAAAAAAAAAAAJQJAAAAAAAAlQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgkAAAAAAACOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " parameter"
					},
					"CgAAAJUJAAAAAAAAlgkAAAAAAAAAAAAAlgkAAAAAAACXCQAAAAAAAAAAAACXCQAAAAAAAJgJAAAAAAAAAAAAAJgJAAAAAAAAmQkAAAAAAAAAAAAAmQkAAAAAAACaCQAAAAAAAAAAAACaCQAAAAAAAJsJAAAAAAAAAAAAAJsJAAAAAAAAnAkAAAAAAAAAAAAAnAkAAAAAAACdCQAAAAAAAAAAAACdCQAAAAAAAJ4JAAAAAAAAAAAAAJ4JAAAAAAAAnwkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlQkAAAAAAACVCQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAJ8JAAAAAAAAoAkAAAAAAAAAAAAAoAkAAAAAAAChCQAAAAAAAAAAAAChCQAAAAAAAKIJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwkAAAAAAACfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " an"
					},
					"AwAAAKIJAAAAAAAAowkAAAAAAAAAAAAAowkAAAAAAACkCQAAAAAAAAAAAACkCQAAAAAAAKUJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogkAAAAAAACiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " alternative"
					},
					"DAAAAKUJAAAAAAAApgkAAAAAAAAAAAAApgkAAAAAAACnCQAAAAAAAAAAAACnCQAAAAAAAKgJAAAAAAAAAAAAAKgJAAAAAAAAqQkAAAAAAAAAAAAAqQkAAAAAAACqCQAAAAAAAAAAAACqCQAAAAAAAKsJAAAAAAAAAAAAAKsJAAAAAAAArAkAAAAAAAAAAAAArAkAAAAAAACtCQAAAAAAAAAAAACtCQAAAAAAAK4JAAAAAAAAAAAAAK4JAAAAAAAArwkAAAAAAAAAAAAArwkAAAAAAACwCQAAAAAAAAAAAACwCQAAAAAAALEJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQkAAAAAAAClCQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAALEJAAAAAAAAsgkAAAAAAAAAAAAAsgkAAAAAAACzCQAAAAAAAAAAAACzCQAAAAAAALQJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsQkAAAAAAACxCQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " OCR"
					},
					"BAAAALQJAAAAAAAAtQkAAAAAAAAAAAAAtQkAAAAAAAC2CQAAAAAAAAAAAAC2CQAAAAAAALcJAAAAAAAAAAAAALcJAAAAAAAAuAkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAkAAAAAAAC0CQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAALgJAAAAAAAAuQkAAAAAAAAAAAAAuQkAAAAAAAC6CQAAAAAAAAAAAAC6CQAAAAAAALsJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuAkAAAAAAAC4CQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " extract"
					},
					"CAAAALsJAAAAAAAAvAkAAAAAAAAAAAAAvAkAAAAAAAC9CQAAAAAAAAAAAAC9CQAAAAAAAL4JAAAAAAAAAAAAAL4JAAAAAAAAvwkAAAAAAAAAAAAAvwkAAAAAAADACQAAAAAAAAAAAADACQAAAAAAAMEJAAAAAAAAAAAAAMEJAAAAAAAAwgkAAAAAAAAAAAAAwgkAAAAAAADDCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwkAAAAAAAC7CQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAMMJAAAAAAAAxAkAAAAAAAAAAAAAxAkAAAAAAADFCQAAAAAAAAAAAADFCQAAAAAAAMYJAAAAAAAAAAAAAMYJAAAAAAAAxwkAAAAAAAAAAAAAxwkAAAAAAADICQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwwkAAAAAAADDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMgJAAAAAAAAyQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAkAAAAAAADICQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"paste",
					null,
					"AQAAAMkJAAAAAAAA6QkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyQkAAAAAAADJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					5,
					"left_delete",
					null,
					"BQAAAOgJAAAAAAAA6AkAAAAAAAABAAAAbecJAAAAAAAA5wkAAAAAAAABAAAAb+YJAAAAAAAA5gkAAAAAAAABAAAAcuUJAAAAAAAA5QkAAAAAAAABAAAAZuQJAAAAAAAA5AkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QkAAAAAAADpCQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAOQJAAAAAAAA5QkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AkAAAAAAADkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					4,
					"left_delete",
					null,
					"BAAAAOQJAAAAAAAA5AkAAAAAAAABAAAAZuMJAAAAAAAA4wkAAAAAAAABAAAAcuIJAAAAAAAA4gkAAAAAAAABAAAAb+EJAAAAAAAA4QkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QkAAAAAAADlCQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOEJAAAAAAAA4gkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QkAAAAAAADhCQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " such"
					},
					"BQAAAOIJAAAAAAAA4wkAAAAAAAAAAAAA4wkAAAAAAADkCQAAAAAAAAAAAADkCQAAAAAAAOUJAAAAAAAAAAAAAOUJAAAAAAAA5gkAAAAAAAAAAAAA5gkAAAAAAADnCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gkAAAAAAADiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAOcJAAAAAAAA6AkAAAAAAAAAAAAA6AkAAAAAAADpCQAAAAAAAAAAAADpCQAAAAAAAOoJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wkAAAAAAADnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " handwriting."
					},
					"DQAAAOoJAAAAAAAA6wkAAAAAAAAAAAAA6wkAAAAAAADsCQAAAAAAAAAAAADsCQAAAAAAAO0JAAAAAAAAAAAAAO0JAAAAAAAA7gkAAAAAAAAAAAAA7gkAAAAAAADvCQAAAAAAAAAAAADvCQAAAAAAAPAJAAAAAAAAAAAAAPAJAAAAAAAA8QkAAAAAAAAAAAAA8QkAAAAAAADyCQAAAAAAAAAAAADyCQAAAAAAAPMJAAAAAAAAAAAAAPMJAAAAAAAA9AkAAAAAAAAAAAAA9AkAAAAAAAD1CQAAAAAAAAAAAAD1CQAAAAAAAPYJAAAAAAAAAAAAAPYJAAAAAAAA9wkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6gkAAAAAAADqCQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					2,
					"left_delete",
					null,
					"AgAAAHcJAAAAAAAAdwkAAAAAAAAEAAAAYWxzb3YJAAAAAAAAdgkAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwkAAAAAAAB7CQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/senseml-reference/7500 - advanced-computed-field-methods/0100 - add-computed-fields.md",
			"settings":
			{
				"buffer_size": 10057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAABAAAAAAAAAAEAAAAAAAAAABAAAAQw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					2,
					"left_delete",
					null,
					"AgAAABoAAAAAAAAAGgAAAAAAAAABAAAAXBkAAAAAAAAAGQAAAAAAAAABAAAARg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/senseml-reference/6700 - config-settings/1000 - fingerprint.md",
			"settings":
			{
				"buffer_size": 6989,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/senseml-reference/3000 - llm-based-methods/1000 - list.md",
			"settings":
			{
				"buffer_size": 16212,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": " Th"
					},
					"AwAAAAYPAAAAAAAABw8AAAAAAAAAAAAABw8AAAAAAAAIDwAAAAAAAAAAAAAIDwAAAAAAAAkPAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABg8AAAAAAAAGDwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					2,
					"left_delete",
					null,
					"AgAAAAgPAAAAAAAACA8AAAAAAAABAAAAaAcPAAAAAAAABw8AAAAAAAABAAAAVA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQ8AAAAAAAAJDwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "Se"
					},
					"AgAAAAcPAAAAAAAACA8AAAAAAAAAAAAACA8AAAAAAAAJDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABw8AAAAAAAAHDwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					2,
					"left_delete",
					null,
					"AgAAAAgPAAAAAAAACA8AAAAAAAABAAAAZQcPAAAAAAAABw8AAAAAAAABAAAAUw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQ8AAAAAAAAJDwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "Sensible"
					},
					"CAAAAAcPAAAAAAAACA8AAAAAAAAAAAAACA8AAAAAAAAJDwAAAAAAAAAAAAAJDwAAAAAAAAoPAAAAAAAAAAAAAAoPAAAAAAAACw8AAAAAAAAAAAAACw8AAAAAAAAMDwAAAAAAAAAAAAAMDwAAAAAAAA0PAAAAAAAAAAAAAA0PAAAAAAAADg8AAAAAAAAAAAAADg8AAAAAAAAPDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABw8AAAAAAAAHDwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " can"
					},
					"BAAAAA8PAAAAAAAAEA8AAAAAAAAAAAAAEA8AAAAAAAARDwAAAAAAAAAAAAARDwAAAAAAABIPAAAAAAAAAAAAABIPAAAAAAAAEw8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADw8AAAAAAAAPDwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " take"
					},
					"BQAAABMPAAAAAAAAFA8AAAAAAAAAAAAAFA8AAAAAAAAVDwAAAAAAAAAAAAAVDwAAAAAAABYPAAAAAAAAAAAAABYPAAAAAAAAFw8AAAAAAAAAAAAAFw8AAAAAAAAYDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEw8AAAAAAAATDwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " several"
					},
					"CAAAABgPAAAAAAAAGQ8AAAAAAAAAAAAAGQ8AAAAAAAAaDwAAAAAAAAAAAAAaDwAAAAAAABsPAAAAAAAAAAAAABsPAAAAAAAAHA8AAAAAAAAAAAAAHA8AAAAAAAAdDwAAAAAAAAAAAAAdDwAAAAAAAB4PAAAAAAAAAAAAAB4PAAAAAAAAHw8AAAAAAAAAAAAAHw8AAAAAAAAgDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGA8AAAAAAAAYDwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " minutes"
					},
					"CAAAACAPAAAAAAAAIQ8AAAAAAAAAAAAAIQ8AAAAAAAAiDwAAAAAAAAAAAAAiDwAAAAAAACMPAAAAAAAAAAAAACMPAAAAAAAAJA8AAAAAAAAAAAAAJA8AAAAAAAAlDwAAAAAAAAAAAAAlDwAAAAAAACYPAAAAAAAAAAAAACYPAAAAAAAAJw8AAAAAAAAAAAAAJw8AAAAAAAAoDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIA8AAAAAAAAgDwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAACgPAAAAAAAAKQ8AAAAAAAAAAAAAKQ8AAAAAAAAqDwAAAAAAAAAAAAAqDwAAAAAAACsPAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKA8AAAAAAAAoDwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " return"
					},
					"BwAAACsPAAAAAAAALA8AAAAAAAAAAAAALA8AAAAAAAAtDwAAAAAAAAAAAAAtDwAAAAAAAC4PAAAAAAAAAAAAAC4PAAAAAAAALw8AAAAAAAAAAAAALw8AAAAAAAAwDwAAAAAAAAAAAAAwDwAAAAAAADEPAAAAAAAAAAAAADEPAAAAAAAAMg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKw8AAAAAAAArDwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAADIPAAAAAAAAMw8AAAAAAAAAAAAAMw8AAAAAAAA0DwAAAAAAAAAAAAA0DwAAAAAAADUPAAAAAAAAAAAAADUPAAAAAAAANg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMg8AAAAAAAAyDwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " list."
					},
					"BgAAADYPAAAAAAAANw8AAAAAAAAAAAAANw8AAAAAAAA4DwAAAAAAAAAAAAA4DwAAAAAAADkPAAAAAAAAAAAAADkPAAAAAAAAOg8AAAAAAAAAAAAAOg8AAAAAAAA7DwAAAAAAAAAAAAA7DwAAAAAAADwPAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANg8AAAAAAAA2DwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwPAAAAAAAAPQ8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPA8AAAAAAAA8DwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ui:",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js",
		"/C/Users/franc/Documents/GitHub/sensible-api-py"
	],
	"file_history":
	[
		"/C/Users/franc/Documents/GitHub/test-mintlify/.github/workflows/check_links.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/2000 - ocr-engine.md",
		"/C/Users/franc/Documents/GitHub/test-mintlify/mint.json",
		"/C/Users/franc/Documents/GitHub/docs/snippets/param1.md",
		"/C/Users/franc/Documents/GitHub/docs/snippets/snippet1.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1500 - query-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/1000 - query-group-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/3000 - table-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2200 - draft-text-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1400 - fixed-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1300 - document-range.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/1000 - fingerprint-mode.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/sync_dev_guides_readme.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/.gitignore",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_configuration.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1300 - types.md",
		"/C/Users/franc/Documents/GitHub/docs/mint.json",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
		"/C/Users/franc/Documents/GitHub/bekindtoyourspine/CNAME",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2200 - text-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1200 - method.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1000 - box.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1500 - deprecated-invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/7600 - excel-reference.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/3000 - prompt.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - performance.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/00 - draft-overview.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/2000 - getting-started-ai.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/0300 - accuracy-measures.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1500 - deprecated-query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - query-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/1000 - senseml-reference-introduction.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/1000 - getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/3000 - confidence.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2000 - deprecated-tfidf.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1000 - deprecated-key-value.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1100 - page-filter.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/2000 - topic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1500 - invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/6000 - author.md",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/4600 - table-methods.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1600 - summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0700 - get-file-metadata.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/4000 - ocr-level.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/6000 - sections-example-table-grid.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/4000 - sections-example-nested-columns.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/1000 - zapier-getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/3000 - go-live.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/2000 - troubleshoot.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - test-before-integrating-configs.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6700 - config-settings/2000 - verbosity.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/2000 - list-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0100 - add-computed-fields.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/cheat/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6000 - computed-field-methods/1500 - zip.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2000 - row.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - draft-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/1000 - query-tips.md",
		"/C/Users/franc/Downloads/for the following table represented in json,",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1060 - nlp.md",
		"/C/Users/franc/Downloads/bal",
		"/C/Users/franc/Downloads/balasdf",
		"/C/Users/franc/Downloads/asdfasdf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1100 - match.md",
		"/C/Users/franc/Downloads/fdas.yaml",
		"/C/Users/franc/Documents/GitHub/sensible/.git/info/exclude",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/assets/v0/json/verbose_extraction_3_verbosity.json",
		"/C/Users/franc/Pictures/greenshot pics/2023-12-15 12_52_16-Franco Fontana _ Basilicata (1986) _ Available for Sale _ Artsy.png",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/node/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/3000 - integrate.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/2000 - library-quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links/check_links.rb",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/check_links.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/4000 - validate-extractions.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/1000 - api-tutorial-sync.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1000 - anchor.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/3600 - section-nuances.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/3000 - quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/README.md",
		"/?wsl.localhost/Ubuntu-20.04/home/franc/sensible-typescript/extract_dir_1_excel.mjs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/draft-python.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/api/1000 - api-tutorial/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/5000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/draft_python.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/extract_doc.py",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/sdk-quickstarts.md",
		"/C/ProgramData/Vanta/vanta.conf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-node-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/write-prompts/instruct/1000 - query-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-node.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/draft-javascript-example.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/sdk-reference/sdk-javascript.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/SDK quickstarts/quickstart-javascript.md"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 125.6,
		"where_history":
		[
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"<open files>",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\, C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0; C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"capture",
			"threshold",
			"fallback column",
			"fallback",
			"vision preview",
			"for the ocr e",
			"versus embe",
			"GetAllDocumentTypes",
			"PutDocumentType",
			"PutConfiguration",
			"schema:",
			"schema",
			"get",
			"\"Add Computed",
			"docname",
			"DocumentName",
			"schemas:",
			"DocumentName",
			"/DocumentN",
			"DocumentName",
			"if you specify a match array",
			"if you specify a match",
			"thorough",
			"documentname",
			"schemas:",
			"portfolio",
			"types:",
			"PortfolioBase:",
			"PortfolioBase",
			"documents:",
			"environment:",
			"PortfolioBase",
			"documentName",
			"document_name",
			": \"query g",
			": \"query",
			": \"NL",
			": \"text",
			": \"fixed",
			": \"document r",
			"type settings tab:",
			") method",
			"] method",
			"method]",
			"instruct",
			"up to 20 pages",
			"notes .",
			"ignore",
			"put",
			"document typ",
			"date",
			"iso",
			"continuation_to",
			"cutoff",
			"cutoff_d",
			"cutoff_",
			"end_date",
			"_crop",
			"iso",
			"multimodal",
			"ocr",
			"doc:ocr)",
			"doc:ocr",
			"description:",
			"/topic",
			"doc:topic",
			"detectmulti",
			"turbo",
			"turo",
			"query-group#exa",
			"query-group#",
			"handwriting",
			"direct-text",
			"xmajor",
			"superscr",
			"bounding box",
			"doc:invoice",
			"invoice",
			"hard to mat",
			"stopoffsety",
			"\"all\"",
			"layout based",
			"are also",
			"language-",
			"Query Group method-methods",
			"method-method",
			"based",
			"power",
			"powered",
			"LLM-powered",
			"powered",
			"large-language",
			"signature",
			"paragraph",
			"large-language",
			"doc:methods#",
			"methods#",
			"large-lan",
			"nlp [^t]",
			"nlp ^[t]",
			"nlp",
			"llm",
			"natural",
			"llm-based-methods",
			"[Natural-language methods](doc:llm-based-methods)",
			"llm-based-methods",
			"llm-based",
			"[NLP methods](doc:llm-based-methods)",
			"[Natural language methods](doc:llm-based-methods)",
			"doc:llm-based-methods",
			"doc:natural-language-methods",
			"natural-language",
			"or query",
			"natural-language",
			"natural language",
			"natural-language",
			"api",
			"`document_name` p",
			"API",
			"sdk",
			"API",
			"zapier.com",
			"retrocedant",
			"doc:tf",
			"deprecate",
			"doc:regex",
			"doc:signature",
			"doc:key-value"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"doc:deprecated-invoice",
			"LLM-based",
			"large language",
			"[LLM-based methods](doc:llm-based-methods)",
			"doc:llm-based-methods",
			"Query Group method",
			"(doc:query-group#",
			"[Query Group](doc:query-group#",
			"[Query Group](doc:query-group-tips)",
			"[Query Group](doc:query-group)",
			"model",
			"insurer",
			"**Publish configuration**",
			"from sensibleapi",
			"index.py",
			"Python",
			"size and types",
			"https://github.com/sensible-hq/sensible-api-js#readme",
			"Node",
			"node",
			"-node",
			"node",
			"Node",
			"node",
			"doc:config-settings"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1926645,
						"regions":
						{
						},
						"selection":
						[
							[
								44881,
								44881
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 28163.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/franc/Documents/GitHub/test-docs/mint.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3552,
						"regions":
						{
						},
						"selection":
						[
							[
								1423,
								1423
							]
						],
						"settings":
						{
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1228.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_configuration.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 51601,
						"regions":
						{
						},
						"selection":
						[
							[
								26942,
								26942
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19574.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11206,
						"regions":
						{
						},
						"selection":
						[
							[
								613,
								613
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 68.0,
						"translation.y": 226.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69898,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "jwAAAOEAAAAAAAAA7gAAAAAAAAAAAAAAAADwv54BAAAAAAAAqwEAAAAAAAAAAAAAAADwv1MCAAAAAAAAYAIAAAAAAAAAAAAAAADwv74CAAAAAAAAywIAAAAAAAAAAAAAAADwv8QDAAAAAAAA0AMAAAAAAAAAAAAAAADwvygEAAAAAAAANAQAAAAAAAAAAAAAAADwv/UEAAAAAAAAAQUAAAAAAAAAAAAAAADwvy0HAAAAAAAAOQcAAAAAAAAAAAAAAADwv/UHAAAAAAAAAQgAAAAAAAAAAAAAAADwv7oIAAAAAAAAxggAAAAAAAAAAAAAAADwv5EJAAAAAAAAnQkAAAAAAAAAAAAAAADwv/QKAAAAAAAAAAsAAAAAAAAAAAAAAADwv4kMAAAAAAAAlQwAAAAAAAAAAAAAAADwv5ENAAAAAAAAnQ0AAAAAAAAAAAAAAADwvz0SAAAAAAAARRIAAAAAAAAAAAAAAADwvzYTAAAAAAAAPhMAAAAAAAAAAAAAAADwv/ATAAAAAAAA+BMAAAAAAAAAAAAAAADwv4YWAAAAAAAAjhYAAAAAAAAAAAAAAADwvzkcAAAAAAAATxwAAAAAAAAAAAAAAADwvyQlAAAAAAAAQCUAAAAAAAAAAAAAAADwv4YsAAAAAAAAkiwAAAAAAAAAAAAAAADwv14tAAAAAAAAai0AAAAAAAAAAAAAAADwv3suAAAAAAAAhy4AAAAAAAAAAAAAAADwvy8vAAAAAAAAOy8AAAAAAAAAAAAAAADwv9YvAAAAAAAA4i8AAAAAAAAAAAAAAADwv7YwAAAAAAAAwjAAAAAAAAAAAAAAAADwv3AxAAAAAAAAfDEAAAAAAAAAAAAAAADwv0cyAAAAAAAAUzIAAAAAAAAAAAAAAADwv50zAAAAAAAAqTMAAAAAAAAAAAAAAADwv300AAAAAAAAiTQAAAAAAAAAAAAAAADwv4A1AAAAAAAAjDUAAAAAAAAAAAAAAADwv5A2AAAAAAAAnDYAAAAAAAAAAAAAAADwv4Y3AAAAAAAAkjcAAAAAAAAAAAAAAADwv704AAAAAAAAyTgAAAAAAAAAAAAAAADwvwo6AAAAAAAAFjoAAAAAAAAAAAAAAADwv1M8AAAAAAAAXzwAAAAAAAAAAAAAAADwv2BAAAAAAAAAbEAAAAAAAAAAAAAAAADwv1FGAAAAAAAAXkYAAAAAAAAAAAAAAADwv3FHAAAAAAAAfEcAAAAAAAAAAAAAAADwv+BJAAAAAAAA7UkAAAAAAAAAAAAAAADwvy5RAAAAAAAAPFEAAAAAAAAAAAAAAADwv39UAAAAAAAAh1QAAAAAAAAAAAAAAADwvwVVAAAAAAAADVUAAAAAAAAAAAAAAADwv1tWAAAAAAAAY1YAAAAAAAAAAAAAAADwv1NXAAAAAAAAW1cAAAAAAAAAAAAAAADwvztZAAAAAAAAQ1kAAAAAAAAAAAAAAADwv7dcAAAAAAAAv1wAAAAAAAAAAAAAAADwv/9cAAAAAAAAB10AAAAAAAAAAAAAAADwv4peAAAAAAAAkl4AAAAAAAAAAAAAAADwv8NeAAAAAAAAy14AAAAAAAAAAAAAAADwvx5fAAAAAAAAJl8AAAAAAAAAAAAAAADwv7pfAAAAAAAAwl8AAAAAAAAAAAAAAADwv/BfAAAAAAAA+F8AAAAAAAAAAAAAAADwvz5lAAAAAAAARmUAAAAAAAAAAAAAAADwv4llAAAAAAAAkWUAAAAAAAAAAAAAAADwv89oAAAAAAAA12gAAAAAAAAAAAAAAADwvyhpAAAAAAAAMGkAAAAAAAAAAAAAAADwv61uAAAAAAAAtW4AAAAAAAAAAAAAAADwv1BxAAAAAAAAWHEAAAAAAAAAAAAAAADwv7R1AAAAAAAAvXUAAAAAAAAAAAAAAADwvwN7AAAAAAAADHsAAAAAAAAAAAAAAADwv117AAAAAAAAZnsAAAAAAAAAAAAAAADwvzN+AAAAAAAAPH4AAAAAAAAAAAAAAADwv6x+AAAAAAAAtX4AAAAAAAAAAAAAAADwv9eCAAAAAAAA4IIAAAAAAAAAAAAAAADwvzCDAAAAAAAAOYMAAAAAAAAAAAAAAADwvwCFAAAAAAAACYUAAAAAAAAAAAAAAADwvyiGAAAAAAAAMYYAAAAAAAAAAAAAAADwv2KKAAAAAAAAa4oAAAAAAAAAAAAAAADwv7KKAAAAAAAAu4oAAAAAAAAAAAAAAADwvzONAAAAAAAAPI0AAAAAAAAAAAAAAADwvyiSAAAAAAAAMZIAAAAAAAAAAAAAAADwv1CSAAAAAAAAWZIAAAAAAAAAAAAAAADwv3eSAAAAAAAAgJIAAAAAAAAAAAAAAADwv26UAAAAAAAAd5QAAAAAAAAAAAAAAADwv9WVAAAAAAAA3pUAAAAAAAAAAAAAAADwvzuXAAAAAAAARJcAAAAAAAAAAAAAAADwv6GYAAAAAAAAqpgAAAAAAAAAAAAAAADwv2OaAAAAAAAAbJoAAAAAAAAAAAAAAADwv4uaAAAAAAAAlJoAAAAAAAAAAAAAAADwv7KaAAAAAAAAu5oAAAAAAAAAAAAAAADwv9iaAAAAAAAA4ZoAAAAAAAAAAAAAAADwv5CbAAAAAAAAmZsAAAAAAAAAAAAAAADwv9mbAAAAAAAA4psAAAAAAAAAAAAAAADwvy6cAAAAAAAAN5wAAAAAAAAAAAAAAADwv2ScAAAAAAAAbZwAAAAAAAAAAAAAAADwvzydAAAAAAAARZ0AAAAAAAAAAAAAAADwv2SdAAAAAAAAbZ0AAAAAAAAAAAAAAADwv9+dAAAAAAAA6J0AAAAAAAAAAAAAAADwvweeAAAAAAAAEJ4AAAAAAAAAAAAAAADwvy6eAAAAAAAAN54AAAAAAAAAAAAAAADwv6ieAAAAAAAAsZ4AAAAAAAAAAAAAAADwvzOfAAAAAAAAPJ8AAAAAAAAAAAAAAADwv/OfAAAAAAAA/J8AAAAAAAAAAAAAAADwv3ChAAAAAAAAeaEAAAAAAAAAAAAAAADwv5ihAAAAAAAAoaEAAAAAAAAAAAAAAADwv76hAAAAAAAAx6EAAAAAAAAAAAAAAADwv6eiAAAAAAAAsKIAAAAAAAAAAAAAAADwv+aiAAAAAAAA76IAAAAAAAAAAAAAAADwvy2jAAAAAAAANqMAAAAAAAAAAAAAAADwv4GjAAAAAAAAiqMAAAAAAAAAAAAAAADwv5ujAAAAAAAApKMAAAAAAAAAAAAAAADwv4KkAAAAAAAAi6QAAAAAAAAAAAAAAADwv6mkAAAAAAAAsqQAAAAAAAAAAAAAAADwv8+kAAAAAAAA2KQAAAAAAAAAAAAAAADwv5amAAAAAAAAn6YAAAAAAAAAAAAAAADwv+CsAAAAAAAA6awAAAAAAAAAAAAAAADwv+yvAAAAAAAA868AAAAAAAAAAAAAAADwv/qxAAAAAAAAAbIAAAAAAAAAAAAAAADwv4yzAAAAAAAAk7MAAAAAAAAAAAAAAADwv/+2AAAAAAAABrcAAAAAAAAAAAAAAADwv6G5AAAAAAAAqLkAAAAAAAAAAAAAAADwv3y6AAAAAAAAg7oAAAAAAAAAAAAAAADwv+66AAAAAAAA9boAAAAAAAAAAAAAAADwvxi+AAAAAAAAH74AAAAAAAAAAAAAAADwv5K/AAAAAAAAmb8AAAAAAAAAAAAAAADwvyvAAAAAAAAAMsAAAAAAAAAAAAAAAADwvwnEAAAAAAAAEMQAAAAAAAAAAAAAAADwv//GAAAAAAAABscAAAAAAAAAAAAAAADwv0vJAAAAAAAAUskAAAAAAAAAAAAAAADwv2/MAAAAAAAAdswAAAAAAAAAAAAAAADwv/DOAAAAAAAA984AAAAAAAAAAAAAAADwvzPWAAAAAAAAOtYAAAAAAAAAAAAAAADwv//bAAAAAAAABtwAAAAAAAAAAAAAAADwv1/hAAAAAAAAZuEAAAAAAAAAAAAAAADwvznmAAAAAAAAQOYAAAAAAAAAAAAAAADwv5boAAAAAAAAnegAAAAAAAAAAAAAAADwv5HsAAAAAAAAmOwAAAAAAAAAAAAAAADwvyTwAAAAAAAAK/AAAAAAAAAAAAAAAADwv6LzAAAAAAAAqfMAAAAAAAAAAAAAAADwv/v0AAAAAAAAAvUAAAAAAAAAAAAAAADwvzn2AAAAAAAAQPYAAAAAAAAAAAAAAADwv3f4AAAAAAAAfvgAAAAAAAAAAAAAAADwv9b4AAAAAAAA3fgAAAAAAAAAAAAAAADwv2f6AAAAAAAAbvoAAAAAAAAAAAAAAADwvxX7AAAAAAAAHPsAAAAAAAAAAAAAAADwvyn9AAAAAAAAMP0AAAAAAAAAAAAAAADwvwf+AAAAAAAADv4AAAAAAAAAAAAAAADwv/YCAQAAAAAA/QIBAAAAAAAAAAAAAADwv6EJAQAAAAAAqAkBAAAAAAAAAAAAAADwv1gMAQAAAAAAXwwBAAAAAAAAAAAAAADwv08OAQAAAAAAVg4BAAAAAAAAAAAAAADwvysQAQAAAAAAMhABAAAAAAAAAAAAAADwvw",
								"scope": ""
							}
						},
						"selection":
						[
							[
								47473,
								47473
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 14,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 24500.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 715,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								115
							]
						],
						"settings":
						{
							"auto_name": "```",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "v0/llm-based extractions/3000 - prompt.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10121,
						"regions":
						{
						},
						"selection":
						[
							[
								5443,
								5443
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2475.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "v0/senseml-reference/2000 - field-query-object/index.md",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5957,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1525.4,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "v0/senseml-reference/3000 - llm-based-methods/1500 - query-group.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19406,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "v0/senseml-reference/8000 - concepts/3700 - ocr.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2547,
						"regions":
						{
						},
						"selection":
						[
							[
								1798,
								1798
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 906.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "v0/senseml-reference/7500 - advanced-computed-field-methods/0100 - add-computed-fields.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10057,
						"regions":
						{
						},
						"selection":
						[
							[
								326,
								326
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "v0/senseml-reference/6700 - config-settings/1000 - fingerprint.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6989,
						"regions":
						{
						},
						"selection":
						[
							[
								3884,
								3884
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2323.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "v0/senseml-reference/3000 - llm-based-methods/1000 - list.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16212,
						"regions":
						{
						},
						"selection":
						[
							[
								14437,
								14437
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12380.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "f_project.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 257.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 285.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
