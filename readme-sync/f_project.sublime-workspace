{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 166 files for \"(doc:nlp-table-tips)\"\n\n0 matches\n\nSearching 166 files for \"(doc:table-tips)\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\3000 - llm-based-methods\\1000 - list.md:\n    7  This LLM-based method extracts repeating data in a document based on your description of the listâ€™s overall contents and each individual item. Data such as the work history or skills on a resume, the vehicles on an auto insurance policy, or the line items on an invoice are best suited for this method. \n    8  \n    9: This method is an alternative to the [NLP Table](doc:table-tips) method, when the data you want can appear either as a table or as another layout. The List method can find data in paragraphs of free text or in more structured layouts, such as key/value pairs or tables.  \n   10  \n   11  #### Limitations\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\8000 - concepts\\0350 - prompt.md:\n   24  | B    | Page metadata for chunks.                                    | Page Hinting                                                 |\n   25  | C    | Chunks, or \"context\", excerpted from document.               | Chunk Count<br/>Chunk Size<br/>Chunk Overlap Percentage<br/>Page Range |\n   26: | D    | Concatenation of all the descriptive prompts you configured in the method. For example, concatenation of all the column descriptions and the overall table description for the [NLP Table](doc:table-tips) method. | Description                                                  |\n   27  \n   28  You can configure the preceding parameters in the JSON editor and in the visual editor.\n\n2 matches across 2 files\n\n\nSearching 166 files for \"(doc:jsonlogi\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\senseml-reference\\0000 - postprocessor.md:\n   54  ```\n   55  \n   56: The postprocessor offers similar data manipulation to the  [Custom Computation](doc:custom-computation) computed field method, but offers greater flexibility because it supports more [extended jsonLogic operations](doc:jsonlogic) and can output an arbitrary schema instead of outputting fields. \n   57  \n   58  Postprocessor output is available in the `postprocessorOutput` object in the API response and in the `postprocessor` tab in the JSON editor: \n\n1 match in 1 file\n\n\nSearching 165 files for \"results like\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\data-extraction\\3000 - portfolio.md:\n   89  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/portfolio_nav.png)\n   90  \n   91: You should see results like the following:\n   92  \n   93  #### Pages 1 - 2 | 1040s | 1040_2019\n\n1 match in 1 file\n\n\nSearching 165 files for \"configuration-library\"\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\1000 - api-tutorial-sync.md:\n   46  3. Download the following example document, which works with the prerequisite  **tax_forms**  document type:\n   47  \n   48: | Example document | [Download link](https://github.com/sensible-hq/sensible-configuration-library/raw/main/templates/Tax%20Forms/1040s/refdocs/1040_2021_sample.png) |\n   49  | ----------- | ------------------------------------------------------------ |\n   50  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\2000 - api-tutorial-async-1.md:\n   36     --header 'Authorization: Bearer YOUR_API_KEY' \\\n   37     --header 'Content-Type: application/json' \\\n   38:    --data-raw '{\"document_url\":\"https://github.com/sensible-hq/sensible-configuration-library/raw/main/tax_forms/1040/2021/1040_2021_sample.pdf\"}'\n   39     ```\n   40  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\2100 - api-tutorial-async-2.md:\n   85  3. If you haven't already, download the following example document, which works with the example `tax_forms` document type you created in the **Prerequisites** section:\n   86  \n   87: | Example document | [Download link](https://github.com/sensible-hq/sensible-configuration-library/raw/main/tax_forms/1040/2021/1040_2021_sample.pdf) |\n   88  | --------------------------- | ------------------------------------------------------------ |\n   89  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\3000 - api-tutorial-webhook.md:\n   28  --header 'Authorization: Bearer YOUR_API_KEY' \\\n   29  --header 'Content-Type: application/json' \\\n   30: --data-raw '{\"document_url\":\"https://github.com/sensible-hq/sensible-configuration-library/raw/main/tax_forms/1040/2021/1040_2021_sample.pdf\",\n   31  \"webhook\": {\"url\":\"YOUR_WEBHOOK_URL\",\"payload\":\"some info you want to include in addition to the default payload, which includes extraction id, type, and parsed doc\"}}'\n   32  ```\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\data-extraction\\2000 - library-quickstart.md:\n    5  \n    6  \n    7: If you want to extract from any of the following document types, you can get started in minutes using the [Sensible configuration library](https://github.com/sensible-hq/sensible-configuration-library). The library provides out-of-the-box support for common business forms:\n    8  \n    9  - auto policy declaration pages\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\document-type-classification\\1000 - classify.md:\n   12  This topic covers classifying a document by its type.\n   13  \n   14: For example, if you define a [bank statements](https://github.com/sensible-hq/sensible-configuration-library/tree/main/templates/Financial%20Services/Bank%20Statements) type and a [tax_forms](https://github.com/sensible-hq/sensible-configuration-library/tree/main/templates/Tax%20Forms) type in your account, you can classify 1040 forms, 1099 forms, Bank of America statements, Chase statements, and other documents, into those two types. In this scenario, for a  `2023-1-1_bankofamerica_statement_jon_doe.pdf` document, Sensible: \n   15  \n   16  - Classifies this document into the `bank_statements` document type.\n   17: - Classifies the statement doc by its similarity to reference documents in the `bank_statements` document type. The highest score is for [a Bank of America sample statement](https://github.com/sensible-hq/sensible-configuration-library/blob/main/templates/Financial%20Services/Bank%20Statements/refdocs/bank_of_america_sample.pdf).\n   18  - Provides metadata for the classification, including similarity scores for this document compared to each document type in your Sensible account and to each reference document in the `bank_statements` type.\n   19  \n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\1000 - zapier-getting-started.md:\n   72  8. (Optional) If you created extra fields in the database, map each one.\n   73  \n   74: 9. Follow the prompts to test the action. You should see the extracted data from the [1040 example document](https://github.com/sensible-hq/sensible-configuration-library/raw/main/tax_forms/1040/2021/1040_2021_sample.pdf) as a row in Airtable:\n   75  \n   76  ![Click to enlarge](https://raw.githubusercontent.com/sensible-hq/sensible-docs/main/readme-sync/assets/v0/images/final/zapier_4.png)\n   ..\n   85  1. Navigate to the Sensible [Extract tab](https://app.sensible.so/quick-extraction/).\n   86  2. Upload and run extractions for the following example 1040 documents:\n   87:    - [2018 1040 example document](https://github.com/sensible-hq/sensible-configuration-library/tree/main/tax_forms/1040/2018)\n   88:    - [2019 1040 example document](https://github.com/sensible-hq/sensible-configuration-library/tree/main/tax_forms/1040/2019)\n   89:    - [2020 1040 example document](https://github.com/sensible-hq/sensible-configuration-library/tree/main/tax_forms/1040/2020)\n   90  \n   91  3. Zapier can take up to 15 minutes to pull data from Sensible. To avoid waiting, navigate to the **Zaps** tab in Zapier, right-click the Zap's ellipsis (...) icon and click **Run**.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\2000 - zapier\\2000 - zapier-tutorial-2.md:\n   33  ----\n   34  \n   35: 1. Choose a Gmail account for the Zaps. Send a test email to it with an [example 1040 document](https://github.com/sensible-hq/sensible-configuration-library/raw/main/tax_forms/1040/2021/1040_2021_sample.pdf)  attached and make sure the subject line includes the text `1040`.\n   36  2. Create an empty Google Drive folder as a destination for the spreadsheets of extracted data.\n   37  3. (Optional) In the Google Drive folder, create a spreadsheet named `Zapier-Sensible Extractions Logs` to log each time the Zaps run. Create columns to record information about each extraction, for example, `Extraction ID` , `Extraction Date` , `Email link`, and `Extraction link`.\n   ..\n   81  \n   82  1. Email the following example 1040 documents to the Gmail account, ensuring that they match the search criteria you created in Zapier:\n   83:    - [2018 1040 example document](https://github.com/sensible-hq/sensible-configuration-library/tree/main/tax_forms/1040/2018)\n   84:    - [2019 1040 example document](https://github.com/sensible-hq/sensible-configuration-library/tree/main/tax_forms/1040/2019)\n   85:    - [2020 1040 example document](https://github.com/sensible-hq/sensible-configuration-library/tree/main/tax_forms/1040/2020)\n   86  \n   87  2. Zapier can take up to 15 minutes to pull data from Sensible. To avoid waiting, navigate to the **Zaps** tab in Zapier, right-click the Zap's ellipsis (...) icon and click **Run**.\n\nC:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\welcome\\6000 - author.md:\n   18  | LLMs              | [Getting started](doc:getting-started-ai)                    | Prompt an LLM by describing the data you want to extract.    |\n   19  | layout-based      | [Getting started with layout-based extractions](doc:getting-started) | To extract from complex document layouts, author layout-based queries. |\n   20: | out-of-the-box    | [Getting started with out-of-the-box extractions](doc:library-quickstart) | Sensible provides out-of-the-box extraction configurations for common business and tax forms. Use Sensible's pre-built, open-source [configuration library](https://github.com/sensible-hq/sensible-configuration-library/) to extract key information from tax forms such as 1099s, major carrier insurance declaration pages, and other documents. Then tweak the pre-built configurations for your custom data needs. |\n   21  \n   22  See the following table for an overview of the pros and cons of LLMs versus layout-based extraction:\n\n17 matches across 9 files\n",
			"settings":
			{
				"buffer_size": 10690,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
				[
					25,
					1,
					"paste",
					null,
					"AgAAAAMMAAAAAAAAgwwAAAAAAAAAAAAAgwwAAAAAAACDDAAAAAAAAG8AAABodHRwczovL2dpdGh1Yi5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtY29uZmlndXJhdGlvbi1saWJyYXJ5L3Jhdy9tYWluL3RheF9mb3Jtcy8xMDQwLzIwMjEvMTA0MF8yMDIxX3NhbXBsZS5wZGY",
					"AQAAAAAAAAABAAAAAwwAAAAAAAByDAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					4,
					"left_delete",
					null,
					"BAAAAEQMAAAAAAAARAwAAAAAAAABAAAAYkMMAAAAAAAAQwwAAAAAAAABAAAAb0IMAAAAAAAAQgwAAAAAAAABAAAAbEEMAAAAAAAAQQwAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAARQwAAAAAAABFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "raw"
					},
					"AwAAAEEMAAAAAAAAQgwAAAAAAAAAAAAAQgwAAAAAAABDDAAAAAAAAAAAAABDDAAAAAAAAEQMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQwAAAAAAABBDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/api/1000 - api-tutorial/2000 - api-tutorial-async-1.md",
			"settings":
			{
				"buffer_size": 4011,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "v0/api/1000 - api-tutorial/1000 - api-tutorial-sync.md",
			"settings":
			{
				"buffer_size": 3726,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AgAAACsGAAAAAAAAqwYAAAAAAAAAAAAAqwYAAAAAAACrBgAAAAAAAG8AAABodHRwczovL2dpdGh1Yi5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtY29uZmlndXJhdGlvbi1saWJyYXJ5L3Jhdy9tYWluL3RheF9mb3Jtcy8xMDQwLzIwMjEvMTA0MF8yMDIxX3NhbXBsZS5wZGY",
					"AQAAAAAAAAABAAAAKwYAAAAAAACaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					8,
					"left_delete",
					null,
					"CAAAAM4DAAAAAAAAzgMAAAAAAAABAAAAbc0DAAAAAAAAzQMAAAAAAAABAAAAcswDAAAAAAAAzAMAAAAAAAABAAAAb8sDAAAAAAAAywMAAAAAAAABAAAAZsoDAAAAAAAAygMAAAAAAAABAAAAX8kDAAAAAAAAyQMAAAAAAAABAAAAeMgDAAAAAAAAyAMAAAAAAAABAAAAYccDAAAAAAAAxwMAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAzwMAAAAAAADPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "1040"
					},
					"BAAAAMcDAAAAAAAAyAMAAAAAAAAAAAAAyAMAAAAAAADJAwAAAAAAAAAAAADJAwAAAAAAAMoDAAAAAAAAAAAAAMoDAAAAAAAAywMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwMAAAAAAADHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					9,
					"left_delete",
					null,
					"CQAAAO0FAAAAAAAA7QUAAAAAAAABAAAAc+wFAAAAAAAA7AUAAAAAAAABAAAAbesFAAAAAAAA6wUAAAAAAAABAAAAcuoFAAAAAAAA6gUAAAAAAAABAAAAb+kFAAAAAAAA6QUAAAAAAAABAAAAZugFAAAAAAAA6AUAAAAAAAABAAAAX+cFAAAAAAAA5wUAAAAAAAABAAAAeOYFAAAAAAAA5gUAAAAAAAABAAAAYeUFAAAAAAAA5QUAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA7gUAAAAAAADuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "1040s"
					},
					"BQAAAOUFAAAAAAAA5gUAAAAAAAAAAAAA5gUAAAAAAADnBQAAAAAAAAAAAADnBQAAAAAAAOgFAAAAAAAAAAAAAOgFAAAAAAAA6QUAAAAAAAAAAAAA6QUAAAAAAADqBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QUAAAAAAADlBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/api/1000 - api-tutorial/index.md",
			"settings":
			{
				"buffer_size": 1632,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "1040s"
					},
					"BgAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADtBAAAAAAAAAkAAABUYXggZm9ybXPtBAAAAAAAAO4EAAAAAAAAAAAAAO4EAAAAAAAA7wQAAAAAAAAAAAAA7wQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPEEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QQAAAAAAADsBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "v0/senseml-reference/0000 - postprocessor.md",
			"settings":
			{
				"buffer_size": 9760,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "draft-"
					},
					"BgAAAK8HAAAAAAAAsAcAAAAAAAAAAAAAsAcAAAAAAACxBwAAAAAAAAAAAACxBwAAAAAAALIHAAAAAAAAAAAAALIHAAAAAAAAswcAAAAAAAAAAAAAswcAAAAAAAC0BwAAAAAAAAAAAAC0BwAAAAAAALUHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvBwAAAAAAAK8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9CAAAAAAAAH0IAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "v0/welcome/1000 - overview.md",
			"settings":
			{
				"buffer_size": 4657,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					12,
					6,
					"left_delete",
					null,
					"BgAAAEQQAAAAAAAARBAAAAAAAAABAAAALUMQAAAAAAAAQxAAAAAAAAABAAAAdEIQAAAAAAAAQhAAAAAAAAABAAAAZkEQAAAAAAAAQRAAAAAAAAABAAAAYUAQAAAAAAAAQBAAAAAAAAABAAAAcj8QAAAAAAAAPxAAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFEAAAAAAAAEUQAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAxEgAALS0tCnRpdGxlOiAiT3ZlcnZpZXciCmhpZGRlbjogZmFsc2UKLS0tCgoKCldlbGNvbWUhIFNlbnNpYmxlIGlzIGEgZGV2ZWxvcGVyLWZpcnN0IHBsYXRmb3JtIGZvciBleHRyYWN0aW5nIHN0cnVjdHVyZWQgZGF0YSBmcm9tIGRvY3VtZW50cywgZm9yIGV4YW1wbGUsIGJ1c2luZXNzIGZvcm1zIGluIFBERiBmb3JtYXQuIFVzZSBTZW5zaWJsZSB0byBidWlsZCBkb2N1bWVudC1hdXRvbWF0aW9uIGZlYXR1cmVzIGludG8geW91ciB2ZXJ0aWNhbCBTYWFTIHByb2R1Y3RzLiAKCldpdGggU2Vuc2libGUsIHlvdSBjYW4gd3JpdGUgZXh0cmFjdGlvbiBxdWVyaWVzIGZvciBhbnkgZG9jdW1lbnQ6CgohW0NsaWNrIHRvIGVubGFyZ2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zZW5zaWJsZS1ocS9zZW5zaWJsZS1kb2NzL21haW4vcmVhZG1lLXN5bmMvYXNzZXRzL3YwL2ltYWdlcy9maW5hbC9pbnRyb19TREtfMy5wbmcpCgpBbmQgZ2V0IGJhY2sga2V5IGZhY3RzIGFzIEpTT046CgpgYGBqc29uCnsKICAgICJzdHJlZXRfYWRkcmVzcyI6IHsKICAgICAgICAidmFsdWUiOiAiMTIzNCBBQkMgQ09VUlQiLAogICAgICAgICJ0eXBlIjogImFkZHJlc3MiCiAgICB9LAogICAgImluY2x1ZGVkX2FwcGxpYW5jZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAidmFsdWUiOiAid2FzaGVycyIsCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInZhbHVlIjogImRyeWVycyIsCiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInZhbHVlIjogInJlZnJpZ2VyYXRvcnMiLAogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgXQp9CmBgYAoKU2Vuc2libGUgaXMgaGlnaGx5IGNvbmZpZ3VyYWJsZS4gWW91IGNhbiBleHRyYWN0IGRhdGEgaW4gbWludXRlcyBieSBsZXZlcmFnaW5nIEdQVC00IGFuZCBvdGhlciBsYXJnZSBsYW5ndWFnZSBtb2RlbHMgKExMTXMpLCBvciB5b3UgY2FuIGdldCBmaW5lLWdyYWluZWQgY29udHJvbCB3aXRoIFNlbnNpYmxlJ3MgdmlzdWFsLCBsYXlvdXQtYmFzZWQgcnVsZXMuIEJ5IGNvbWJpbmluZyBsYXlvdXQtIGFuZCBMTE0tYmFzZWQgZXh0cmFjdGlvbiBtZXRob2RzLCBTZW5zaWJsZSBzdXBwb3J0cyB0aGUgZW50aXJlIGRvY3VtZW50IGxhbmRzY2FwZSwgZnJvbSBjb25zaXN0ZW50bHkgbGFpZC1vdXQsIGhpZ2hseSBzdHJ1Y3R1cmVkIGJ1c2luZXNzIGZvcm1zIHRvIGZyZWUtZm9ybSwgdmFyaWFibGUgbGVnYWwgY29udHJhY3RzIDoKCiFbQ2xpY2sgdG8gZW5sYXJnZV0oaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3NlbnNpYmxlLWhxL3NlbnNpYmxlLWRvY3MvbWFpbi9yZWFkbWUtc3luYy9hc3NldHMvdjAvaW1hZ2VzL2ZpbmFsL2RvY3VtZW50X2xhbmRzY2FwZS5wbmcpCgojIyBDb25maWd1cmFibGUgZGF0YSBleHRyYWN0aW9uCgpDb25maWd1cmUgeW91ciBleHRyYWN0aW9ucyB1c2luZyBfU2Vuc2VNTF8sIFNlbnNpYmxlJ3MgZG9jdW1lbnQtc3BlY2lmaWMgcXVlcnkgbGFuZ3VhZ2UuIFNlbnNlTUwgY29tYmluZXMgdGhlIGxhdGVzdCBMTE0gdGVjaG5pcXVlcyB3aXRoIHZpc3VhbCBsYXlvdXQtYmFzZWQgcnVsZXMgdG8gZXh0cmFjdCBkb2N1bWVudCBwcmltaXRpdmVzIGxpa2Ugcm93cywgdGFibGVzLCBjaGVja2JveGVzLCBzZWN0aW9ucywgYW5kIG1vcmUgYXMgSlNPTi4gCgohW0NsaWNrIHRvIGVubGFyZ2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zZW5zaWJsZS1ocS9zZW5zaWJsZS1kb2NzL21haW4vcmVhZG1lLXN5bmMvYXNzZXRzL3YwL2ltYWdlcy9maW5hbC9wbGF0Zm9ybV9zZW5zZW1sLnBuZykKCgoKV2l0aCBTZW5zZU1MLCB5b3UgY2FuOgoKLSBQcmVwcm9jZXNzIGRvY3VtZW50cyBieSBjb3JyZWN0aW5nIGxheW91dCBtZXRhZGF0YSBwcm9ibGVtcywgcmVtb3ZpbmcgdW53YW50ZWQgcGFnZXMsIGFuZCBtb3JlLCBzbyB0aGF0IFNlbnNpYmxlIGhhcyBhIGNsZWFuLCBzdGFuZGFyZGl6ZWQgdGV4dCByZXByZXNlbnRhdGlvbiBvZiB0aGUgZG9jdW1lbnQgZnJvbSB3aGljaCB0byBleHRyYWN0IHN0cnVjdHVyZWQgZGF0YSBpbiBhIGxhdGVyIHN0ZXAuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgW1ByZXByb2Nlc3NvcnNdKGRvYzpwcmVwcm9jZXNzb3JzKS4gCgotIFVzZSAibWV0aG9kcyIgdG8gZXh0cmFjdCBkb2N1bWVudCBwcmltaXRpdmVzLCBsaWtlIHJvd3MsIGNvbHVtbnMsIHRhYmxlcywgYm94ZXMsIGNoZWNrYm94IHN0YXR1cywgYW5kIG1vcmUuIFlvdSBjYW4gYWxzbyBwYXJzZSBleHRyYWN0ZWQgZGF0YSB0eXBlcyBsaWtlIGN1cnJlbmNpZXMsIGRhdGVzLCBhZGRyZXNzZXMsIG9yIHlvdXIgY3VzdG9tIHR5cGVzLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIFtMYXlvdXQtYmFzZWQgbWV0aG9kc10oZG9jOm1ldGhvZHMpLiAKCi0gUG9zdC1wcm9jZXNzIGV4dHJhY3RlZCBkb2N1bWVudCBkYXRhLiBGb3IgZXhhbXBsZToKICAtIFdyaXRlIGxvZ2ljYWwgW3ZhbGlkYXRpb25zXShkb2M6dmFsaWRhdGUtZXh0cmFjdGlvbnMpICBsaWtlIGBjdXN0b21lciBJRCBpcyA5IGRpZ2l0c2AgdG8gdGhyb3cgY3VzdG9tIGVycm9ycyBhbmQgd2FybmluZ3MgYWJvdXQgeW91ciBleHRyYWN0ZWQgZGF0YS4gCiAgLSBNYW5pcHVsYXRlIHRoZSBleHRyYWN0ZWQgZGF0YSBzY2hlbWEgd2l0aCBbY29tcHV0ZWQgbWV0aG9kc10oZG9jOmNvbXB1dGVkLWZpZWxkLW1ldGhvZHMpICBsaWtlIGNvbmNhdCwgc3BsaXQsIGFuZCBbY3VzdG9tIGxvZ2ljXShkb2M6Y3VzdG9tLWNvbXB1dGF0aW9uKS4KICAtIEdldCBtZWFzdXJlcyBvZiBhY2N1cmFjeSBmb3IgTExNcyB3aXRoIFtjb25maWRlbmNlIHNjb3Jlc10oZG9jOmNvbmZpZGVuY2UpLCBhbmQgZ2V0IG92ZXJhbGwgbWVhc3VyZXMgb2YgZXh0cmFjdGlvbiBjb21wbGV0ZW5lc3Mgd2l0aCBbZXh0cmFjdGlvbiBjb3ZlcmFnZSBzY29yZXNdKGRvYzptZXRyaWNzI2V4dHJhY3Rpb24tY292ZXJhZ2UpLiAKCkEgW2ZpZWxkXShkb2M6ZmllbGQtcXVlcnktb2JqZWN0KSBpcyB0aGUgYmFzaWMgU2Vuc2VNTCBxdWVyeSB1bml0IGZvciBleHRyYWN0aW5nIGEgcGllY2Ugb2YgZG9jdW1lbnQgZGF0YS4gVGhlIG91dHB1dCBvZiBhIGZpZWxkIGlzIGEgSlNPTiBrZXktdmFsdWUgcGFpciB0aGF0IHN0cnVjdHVyZXMgdGhlIGV4dHJhY3RlZCBkYXRhLiBTZW5zZU1MIGlzIHRoZSBiYXNpcyBmb3IgU2Vuc2libGUncyBleHRyYWN0aW9uIHdvcmtmbG93LgoKSGVyZSdzIGFuIGV4YW1wbGUgb2YgYSBmaWVsZCB0aGF0IGV4dHJhY3RzIGEgdGFibGU6CgohW0NsaWNrIHRvIGVubGFyZ2VdKGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zZW5zaWJsZS1ocS9zZW5zaWJsZS1kb2NzL21haW4vcmVhZG1lLXN5bmMvYXNzZXRzL3YwL2ltYWdlcy9maW5hbC9zZW5zZW1sX2ludHJvXzEucG5nKQoKRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgU2Vuc2VNTCwgc2VlIFtTZW5zZU1MIHJlZmVyZW5jZSBpbnRyb2R1Y3Rpb25dKGRvYzpzZW5zZW1sLXJlZmVyZW5jZS1pbnRyb2R1Y3Rpb24pLgoKIyMgRGV2b3BzIHBsYXRmb3JtIGZvciBkb2N1bWVudCBkYXRhIGV4dHJhY3Rpb24KClNlZSB0aGUgZm9sbG93aW5nIGltYWdlIGZvciBhIGhpZ2gtbGV2ZWwgb3ZlcnZpZXcgb2YgU2Vuc2libGUncyBkb2N1bWVudCBkYXRhIGV4dHJhY3Rpb24gd29ya2Zsb3c6CgpbIVtDbGljayB0byBlbmxhcmdlXShodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vc2Vuc2libGUtaHEvc2Vuc2libGUtZG9jcy9tYWluL3JlYWRtZS1zeW5jL2Fzc2V0cy92MC9pbWFnZXMvZmluYWwvcGxhdGZvcm1fZGV2b3BzLnBuZyldKGRvYzpkZXZvcHMtcGxhdGZvcm0pCgoKCkZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoaXMgZGlhZ3JhbSwgc2VlIFtEZXZvcHMgcGxhdGZvcm1dKGRvYzpkZXZvcHMtcGxhdGZvcm0pLgoKIyMgTGVhcm4gbW9yZQoKVG8gdXNlIHRoZSBTZW5zaWJsZSBwbGF0Zm9ybSwgeW91J2xsOgoKLSBMZWFybiAgdG8gZXh0cmFjdCBkYXRhLCBvciB1c2Ugb3V0LW9mLXRoZS1ib3ggc3VwcG9ydGVkIGRvY3VtZW50IHR5cGVzLiBTZWUgW0dldHRpbmcgc3RhcnRlZF0oZG9jOmdldHRpbmctc3RhcnRlZC1haSkgYW5kIFtHZXR0aW5nIHN0YXJ0ZWQgd2l0aCBsYXlvdXQtYmFzZWQgZXh0cmFjdGlvbnNdKGRvYzpnZXR0aW5nLXN0YXJ0ZWQpLgotIFsqKkludGVncmF0ZSoqXShkb2M6aW50ZWdyYXRlKSB1c2luZyBTZW5zaWJsZSdzIEFQSSwgU0RLcywgcXVpY2stZXh0cmFjdCBVSSwgb3Igb3RoZXIgdG9vbHMKLSBbKipWYWxpZGF0ZSoqXShkb2M6dmFsaWRhdGUtZXh0cmFjdGlvbnMpIGV4dHJhY3RlZCBkYXRhIGJ5IHdyaXRpbmcgcnVsZXMgZm9yIGN1c3RvbSBlcnJvcnMgbGlrZSBgZXh0cmFjdGVkIHppcCBjb2RlIGlzIGludmFsaWQgZm9ybWF0YCAKLSBbKipNb25pdG9yKipdKGRvYzptZXRyaWNzKSBleHRyYWN0aW9uIG1ldHJpY3MgaW4gcHJvZHVjdGlvbgotIFsqKlJldmlldyoqXShkb2M6aHVtYW4tcmV2aWV3KSBhbmQgY29ycmVjdCBleHRyYWN0ZWQgZGF0YSBhdCB0aGUgZmllbGQgbGV2ZWwgdXNpbmcgdGhlIHJldmlldyBVSQoKCgoKCgoKCgoKCgAAAAAAAAAAMRIAAAAAAAAAAAAAAAAAAAAAAAAxEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjEQAAAAAAACMRAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "v0/senseml-reference/3000 - llm-based-methods/1000 - list.md",
			"settings":
			{
				"buffer_size": 16827,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAAIcBAAAAAAAAlgEAAAAAAAAQAAAAKGRvYzp0YWJsZS10aXBzKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "v0/senseml-reference/8000 - concepts/0350 - prompt.md",
			"settings":
			{
				"buffer_size": 10021,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAAEQIAAAAAAAAUwgAAAAAAAAQAAAAKGRvYzp0YWJsZS10aXBzKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAQAAAAAAANQBAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ui:",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js",
		"/C/Users/franc/Documents/GitHub/sensible-api-py"
	],
	"file_history":
	[
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/3000 - draft-portfolio.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/5000 - best-practices/3000 - confidence.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1600 - summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/0350 - prompt.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/document-type-classification/1000 - classify.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/2000 - draft-getting-started-ai.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/6000 - author.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/5000 - best-practices/0200 - troubleshoot-llms.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/cheat/4000 - cheat-4.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/1000 - overview.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1200 - method.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/1000 - senseml-reference-introduction.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/1000 - getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/monitoring-and-qa/4000 - validate-extractions.md",
		"/C/Users/franc/Downloads/new_toc",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1200 - page-range.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/monitoring-and-qa/0310 - metrics.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/4000 - quality-control.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1550 - devops-platform.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/0300 - accuracy-measures.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/2000 - deprecated-topic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/2000 - deprecated-tfidf.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1500 - deprecated-invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1000 - deprecated-key-value.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1060 - nlp.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/data-extraction/5000 - best-practices/1000 - performance.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1400 - fixed-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2200 - text-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/2000 - getting-started-ai.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_extraction.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1500 - deprecated-query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-features/1100 - deprecated-page-filter.md",
		"/C/Users/franc/Downloads/old_toc",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/3000 - portfolio.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/prompt-tips/1000 - query-group-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/prompt-tips/2000 - list-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/prompt-tips/3000 - table-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/style_images.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/style_images.sh",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - llm-based-methods/1500 - query-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6700 - config-settings/1000 - fingerprint.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0100 - add-computed-fields.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/3700 - ocr.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/3000 - prompt.md",
		"/C/Users/franc/Documents/GitHub/test-docs/mint.json",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_configuration.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/openapi_classification.yml",
		"/C/Users/franc/Documents/GitHub/test-mintlify/.github/workflows/check_links.yml",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/2000 - ocr-engine.md",
		"/C/Users/franc/Documents/GitHub/test-mintlify/mint.json",
		"/C/Users/franc/Documents/GitHub/docs/snippets/param1.md",
		"/C/Users/franc/Documents/GitHub/docs/snippets/snippet1.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/1000 - query-group-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/3000 - table-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2200 - draft-text-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1300 - document-range.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/1000 - fingerprint-mode.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/sync_dev_guides_readme.yml",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/.gitignore",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1300 - types.md",
		"/C/Users/franc/Documents/GitHub/docs/mint.json",
		"/C/Users/franc/Documents/GitHub/bekindtoyourspine/CNAME",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1000 - box.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1500 - deprecated-invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/4000 - quick-extraction/7600 - excel-reference.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - performance.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/00 - draft-overview.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1500 - deprecated-query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - query-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - list.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/1000 - getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/3000 - confidence.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/2000 - deprecated-tfidf.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7000 - deprecated-methods/1000 - deprecated-key-value.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/5000 - preprocessors/1100 - page-filter.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/2000 - topic.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/1500 - invoice.md",
		"/C/Users/franc/Documents/GitHub/sensible-sdk-js/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-api-py/README.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/4600 - table-methods.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1600 - summarizer.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1000 - nlp-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/8000 - concepts/1600 - file-types.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/7500 - advanced-computed-field-methods/0700 - get-file-metadata.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6800 - document-type-settings/4000 - ocr-level.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/6000 - sections-example-table-grid.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6500 - sections/4000 - sections-example-nested-columns.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/integrations/2000 - zapier/1000 - zapier-getting-started.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/3000 - go-live.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/2000 - troubleshoot.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/best-practices/5000 - guides/1000 - test-before-integrating-configs.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6700 - config-settings/2000 - verbosity.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2100 - deprecated-table.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/2000 - list-tips.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/cheat/index.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/6000 - computed-field-methods/1500 - zip.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - methods/2000 - row.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - draft-group.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/3000 - natural-language-methods/1500 - query.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/llm-based extractions/instruct/1000 - query-tips.md",
		"/C/Users/franc/Downloads/for the following table represented in json,",
		"/C/Users/franc/Downloads/bal",
		"/C/Users/franc/Downloads/balasdf",
		"/C/Users/franc/Downloads/asdfasdf",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/senseml-reference/2000 - field-query-object/1100 - match.md",
		"/C/Users/franc/Downloads/fdas.yaml",
		"/C/Users/franc/Documents/GitHub/sensible/.git/info/exclude",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/assets/v0/json/verbose_extraction_3_verbosity.json",
		"/C/Users/franc/Pictures/greenshot pics/2023-12-15 12_52_16-Franco Fontana _ Basilicata (1986) _ Available for Sale _ Artsy.png",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/node/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-code-examples/python/readme.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/welcome/3000 - integrate.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/readme-sync/v0/layout-based-extractions/2000 - library-quickstart.md",
		"/C/Users/franc/Documents/GitHub/sensible-docs/scripts/check_links/check_links.rb",
		"/C/Users/franc/Documents/GitHub/sensible-docs/.github/workflows/check_links.yml"
	],
	"find":
	{
		"height": 32.0
	},
	"find_in_files":
	{
		"height": 125.6,
		"where_history":
		[
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"*.md, ",
			"*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"<open files>",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\, C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\integrations\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0\\sdk-reference\\",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js, C:\\Users\\franc\\Documents\\GitHub\\sensible-code-examples,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js,*.md, *.yaml, *.yml",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0, C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js",
			"C:\\Users\\franc\\Documents\\GitHub\\sensible-docs\\readme-sync\\v0; C:\\Users\\franc\\Documents\\GitHub\\sensible-sdk-js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"configuration-library",
			"results like",
			"(doc:jsonlogi",
			"(doc:table-tips)",
			"(doc:nlp-table-tips)",
			"(doc:query-group-tips)",
			"(doc:list-tips)",
			"[List method](doc:list-tips)",
			"list-tips",
			"prompt-tips",
			"prompt tips",
			"a *full",
			"https://github.com/sensible-hq/sensible-configuration-library/",
			"(doc:test-before-",
			"testing before",
			"Using fallbacks](doc:fallbacks)",
			"using fallbacks",
			"doc:methods",
			"(doc:human-review",
			"(human-review",
			"[human-review",
			"[Reviewing extractions](doc:human-review)",
			"reviewing extractions",
			"prompt-tips",
			"[Choosing a table method](doc:table-methods)",
			"choosing a table method]",
			"(doc:human-review)",
			"(doc:metrics)",
			"[Monitoring extractions](doc:metrics)",
			"doc:metrics",
			"doc:prompt",
			"Advanced prompt configuration](doc:prompt",
			"advanced",
			"doc:prompt",
			"config_name:",
			"example: an",
			"anyco_",
			"anyco_quote_portfolio",
			"loss_run",
			"auto_insurance_quote",
			"anyco_claims",
			"anyco_quote",
			"anyco_cl",
			"llmEngine",
			"llm_engine",
			"contain",
			"extarctfromurlresponse",
			"singleextractionresponse",
			"doc:bag-of-words",
			"bag of words",
			"  !",
			"page fil",
			"page filter",
			"instruct",
			"capture",
			"threshold",
			"fallback column",
			"fallback",
			"vision preview",
			"for the ocr e",
			"versus embe",
			"GetAllDocumentTypes",
			"PutDocumentType",
			"PutConfiguration",
			"schema:",
			"schema",
			"get",
			"\"Add Computed",
			"docname",
			"DocumentName",
			"schemas:",
			"DocumentName",
			"/DocumentN",
			"DocumentName",
			"if you specify a match array",
			"if you specify a match",
			"thorough",
			"documentname",
			"schemas:",
			"portfolio",
			"types:",
			"PortfolioBase:",
			"PortfolioBase",
			"documents:",
			"environment:",
			"PortfolioBase",
			"documentName",
			"document_name",
			": \"query g",
			": \"query",
			": \"NL",
			": \"text",
			": \"fixed",
			": \"document r",
			"type settings tab:",
			") method",
			"] method",
			"method]",
			"instruct",
			"up to 20 pages",
			"notes .",
			"ignore",
			"put",
			"document typ",
			"date",
			"iso",
			"continuation_to",
			"cutoff",
			"cutoff_d",
			"cutoff_",
			"end_date",
			"_crop",
			"iso",
			"multimodal",
			"ocr",
			"doc:ocr)",
			"doc:ocr",
			"description:",
			"/topic",
			"doc:topic",
			"detectmulti",
			"turbo",
			"turo",
			"query-group#exa",
			"query-group#",
			"handwriting",
			"direct-text",
			"xmajor"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"(doc:nlp-table)",
			"(doc:query-group)",
			"(doc:list)",
			"[List method](doc:list)",
			"Fallback strategies](doc:fallbacks)",
			"[Human review](doc:human-review)",
			"[Table methods](doc:table-methods)",
			"[Monitoring extraction metrics](doc:metrics)",
			"Advanced LLM prompt configuration](doc:prompt",
			"doc:deprecated-bag-of-words",
			"!",
			"doc:deprecated-invoice",
			"LLM-based",
			"large language",
			"[LLM-based methods](doc:llm-based-methods)",
			"doc:llm-based-methods",
			"Query Group method",
			"(doc:query-group#",
			"[Query Group](doc:query-group#",
			"[Query Group](doc:query-group-tips)",
			"[Query Group](doc:query-group)",
			"model",
			"insurer",
			"**Publish configuration**",
			"from sensibleapi",
			"index.py",
			"Python",
			"size and types",
			"https://github.com/sensible-hq/sensible-api-js#readme",
			"Node",
			"node",
			"-node",
			"node",
			"Node",
			"node",
			"doc:config-settings"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10690,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										597,
										613
									],
									[
										1463,
										1479
									],
									[
										2069,
										2082
									],
									[
										2643,
										2655
									],
									[
										3202,
										3202
									],
									[
										3609,
										3630
									],
									[
										4092,
										4113
									],
									[
										4577,
										4598
									],
									[
										5148,
										5169
									],
									[
										5564,
										5585
									],
									[
										5709,
										5730
									],
									[
										6314,
										6335
									],
									[
										7022,
										7043
									],
									[
										7525,
										7546
									],
									[
										7659,
										7680
									],
									[
										7793,
										7814
									],
									[
										8325,
										8346
									],
									[
										9096,
										9117
									],
									[
										9230,
										9251
									],
									[
										9364,
										9385
									],
									[
										10332,
										10353
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								3626,
								3626
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 5,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1564.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "v0/api/1000 - api-tutorial/2000 - api-tutorial-async-1.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4011,
						"regions":
						{
						},
						"selection":
						[
							[
								1207,
								1207
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 686.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "v0/api/1000 - api-tutorial/1000 - api-tutorial-sync.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3726,
						"regions":
						{
						},
						"selection":
						[
							[
								1958,
								1958
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1311.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "v0/api/1000 - api-tutorial/index.md",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1632,
						"regions":
						{
						},
						"selection":
						[
							[
								1313,
								1313
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 345.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "v0/senseml-reference/0000 - postprocessor.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9760,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1238.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "v0/welcome/1000 - overview.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4657,
						"regions":
						{
						},
						"selection":
						[
							[
								4018,
								4018
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2410.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "v0/senseml-reference/3000 - llm-based-methods/1000 - list.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16827,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "v0/senseml-reference/8000 - concepts/0350 - prompt.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10021,
						"regions":
						{
						},
						"selection":
						[
							[
								468,
								468
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "f_project.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"api-tutorial",
				"sensible-docs\\readme-sync\\v0\\api\\1000 - api-tutorial\\index.md"
			],
			[
				"draft",
				"sensible-docs\\readme-sync\\v0\\data-extraction\\3000 - draft-portfolio.md"
			],
			[
				"overview",
				"sensible-docs\\readme-sync\\v0\\welcome\\1000 - overview.md"
			],
			[
				"classi",
				"sensible-docs\\readme-sync\\v0\\document-type-classification\\1000 - classify.md"
			],
			[
				"",
				"Find Results"
			],
			[
				"metric",
				"sensible-docs\\readme-sync\\v0\\monitoring-and-qa\\0310 - metrics.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 257.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 285.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
